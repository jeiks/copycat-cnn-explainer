{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/stores.js","../src/utils/cnn.js","../src/detail-view/DetailviewUtils.js","../src/detail-view/Dataview.svelte","../src/detail-view/KernelMathView.svelte","../src/detail-view/ConvolutionAnimator.svelte","../src/detail-view/Convolutionview.svelte","../src/detail-view/ActivationAnimator.svelte","../src/detail-view/Activationview.svelte","../src/detail-view/PoolAnimator.svelte","../src/detail-view/Poolview.svelte","../src/detail-view/Softmaxview.svelte","../src/overview/Modal.svelte","../src/utils/cnn-tf.js","../src/config.js","../src/overview/draw-utils.js","../src/overview/overview-draw.js","../src/overview/intermediate-utils.js","../src/overview/intermediate-draw.js","../src/overview/flatten-draw.js","../src/overview/Oracle-Overview.svelte","../src/utils/copycat-cnn.js","../src/copycat-overview/detail-view/DetailviewUtils.js","../src/copycat-overview/detail-view/Dataview.svelte","../src/copycat-overview/detail-view/KernelMathView.svelte","../src/copycat-overview/detail-view/ConvolutionAnimator.svelte","../src/copycat-overview/detail-view/Convolutionview.svelte","../src/copycat-overview/detail-view/ActivationAnimator.svelte","../src/copycat-overview/detail-view/Activationview.svelte","../src/copycat-overview/detail-view/PoolAnimator.svelte","../src/copycat-overview/detail-view/Poolview.svelte","../src/copycat-overview/detail-view/Softmaxview.svelte","../src/copycat-overview/Modal.svelte","../src/copycat-overview/draw-utils.js","../src/copycat-overview/overview-draw.js","../src/copycat-overview/intermediate-utils.js","../src/copycat-overview/intermediate-draw.js","../src/copycat-overview/flatten-draw.js","../src/copycat-overview/Copycat-Overview.svelte","../src/article/Youtube.svelte","../src/article/Article.svelte","../src/Explainer.svelte","../src/Header.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const cnnStore = writable([]);\nexport const svgStore = writable(undefined);\n\nexport const vSpaceAroundGapStore = writable(undefined);\nexport const hSpaceAroundGapStore = writable(undefined);\n\nexport const nodeCoordinateStore = writable([]);\nexport const selectedScaleLevelStore = writable(undefined);\n\nexport const cnnLayerRangesStore = writable({});\nexport const cnnLayerMinMaxStore = writable([]);\n\nexport const needRedrawStore = writable([undefined, undefined]);\n\nexport const detailedModeStore = writable(true);\n\nexport const shouldIntermediateAnimateStore = writable(false);\n\nexport const isInSoftmaxStore = writable(false);\nexport const softmaxDetailViewStore = writable({});\nexport const allowsSoftmaxAnimationStore = writable(false);\n\nexport const hoverInfoStore = writable({});\n\nexport const modalStore = writable({});\n\nexport const intermediateLayerPositionStore = writable({});\n\n\nexport const copycat_cnnStore = writable([]);\nexport const copycat_svgStore = writable(undefined);\n\nexport const copycat_vSpaceAroundGapStore = writable(undefined);\nexport const copycat_hSpaceAroundGapStore = writable(undefined);\n\nexport const copycat_nodeCoordinateStore = writable([]);\nexport const copycat_selectedScaleLevelStore = writable(undefined);\n\nexport const copycat_cnnLayerRangesStore = writable({});\nexport const copycat_cnnLayerMinMaxStore = writable([]);\n\nexport const copycat_needRedrawStore = writable([undefined, undefined]);\n\nexport const copycat_detailedModeStore = writable(true);\n\nexport const copycat_shouldIntermediateAnimateStore = writable(false);\n\nexport const copycat_isInSoftmaxStore = writable(false);\nexport const copycat_softmaxDetailViewStore = writable({});\nexport const copycat_allowsSoftmaxAnimationStore = writable(false);\n\nexport const copycat_hoverInfoStore = writable({});\n\nexport const copycat_modalStore = writable({});\n\nexport const copycat_intermediateLayerPositionStore = writable({});","// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   * \n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \n   * @param {number} bias The bias assocated to this node.\n   * @param {[[number]]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\nconst constructNNFromJSON = (nnJSON, inputImageArray) => {\n  console.log(nnJSON);\n  console.log(inputImageArray);\n  let nn = [];\n\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = nnJSON[0].input_shape;\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n                                                                                                                   \n  nn.push(inputLayer);\n  let curLayerIndex = 1;\n\n  nnJSON.forEach(layer => {\n    let curLayerNodes = [];\n    let curLayerType;\n\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    let shape = layer.output_shape.slice(0, 2);\n    let bias = 0;\n    let output;\n    if (curLayerType === nodeType.FLATTEN || curLayerType === nodeType.FC) {\n      output = 0;\n    } else {\n      output = init2DArray(shape[0], shape[1], 0);\n    }\n\n    // Add neurons into this layer\n    for (let i = 0; i < layer.num_neurons; i++) {\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        bias = layer.weights[i].bias;\n      }\n      let node = new Node(layer.name, i, curLayerType, bias, output)\n\n      // Connect this node to all previous nodes (create links)\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        // CONV and FC layers have weights in links. Links are one-to-multiple\n        for (let j = 0; j < nn[curLayerIndex - 1].length; j++) {\n          let preNode = nn[curLayerIndex - 1][j];\n          let curLink = new Link(preNode, node, layer.weights[i].weights[j]);\n          preNode.outputLinks.push(curLink);\n          node.inputLinks.push(curLink);\n        }\n      } else if (curLayerType === nodeType.RELU || curLayerType === nodeType.POOL) {\n        // RELU and POOL layers have no weights. Links are one-to-one\n        let preNode = nn[curLayerIndex - 1][i];\n        let link = new Link(preNode, node, null);\n        preNode.outputLinks.push(link);\n        node.inputLinks.push(link);\n      } else if (curLayerType === nodeType.FLATTEN) {\n        // Flatten layer has no weights. Links are multiple-to-one.\n        // Use dummy weights to store the corresponding entry in the previsou\n        // node as (row, column)\n        // The flatten() in tf2.keras has order: channel -> row -> column\n        let preNodeWidth = nn[curLayerIndex - 1][0].output.length,\n          preNodeNum = nn[curLayerIndex - 1].length,\n          preNodeIndex = i % preNodeNum,\n          preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n          preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n          link = new Link(nn[curLayerIndex - 1][preNodeIndex],\n            node, [preNodeRow, preNodeCol]);\n\n        nn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n        node.inputLinks.push(link);\n      }\n      curLayerNodes.push(node);\n    }\n\n    // Add current layer to the NN\n    nn.push(curLayerNodes);\n    curLayerIndex++;\n  });\n\n  return nn;\n}\n\nexport const constructNN = (inputImageFile) => {\n  // Load the saved model file\n  return new Promise((resolve, reject) => {\n    fetch('PUBLIC_URL/copycat-cnn-explainer/assets/data/oracle-nn_10.json')\n      .then(response => {\n        response.json().then(nnJSON => {\n          getInputImageArray(inputImageFile)\n            .then(inputImageArray => {\n              let nn = constructNNFromJSON(nnJSON, inputImageArray);\n              resolve(nn);\n            })\n        });\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n\n// Helper functions\n\n/**\n * Create a 2D array (matrix) with given size and default value.\n * \n * @param {int} height Height (number of rows) for the matrix\n * @param {int} width Width (number of columns) for the matrix\n * @param {int} fill Default value to fill this matrix\n */\nexport const init2DArray = (height, width, fill) => {\n  let array = [];\n  // Itereate through rows\n  for (let r = 0; r < height; r++) {\n    let row = new Array(width).fill(fill);\n    array.push(row);\n  }\n  return array;\n}\n\n/**\n * Dot product of two matrices.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nconst matrixDot = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = 0;\n  for (let i = 0; i < mat1.length; i++){\n    for (let j = 0; j < mat1[0].length; j++){\n      result += mat1[i][j] * mat2[i][j];\n    }\n  }\n  \n  return result;\n}\n\n/**\n * Matrix elementwise addition.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nexport const matrixAdd = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = init2DArray(mat1.length, mat1.length, 0);\n\n  for (let i = 0; i < mat1.length; i++) {\n    for (let j = 0; j < mat1.length; j++) {\n      result[i][j] = mat1[i][j] + mat2[i][j];\n    }\n  }\n\n  return result;\n}\n\n/**\n * 2D slice on a matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} xs First dimension (row) starting index\n * @param {int} xe First dimension (row) ending index\n * @param {int} ys Second dimension (column) starting index\n * @param {int} ye Second dimension (column) ending index\n */\nexport const matrixSlice = (mat, xs, xe, ys, ye) => {\n  return mat.slice(xs, xe).map(s => s.slice(ys, ye));\n}\n\n/**\n * Compute the maximum of a matrix.\n * @param {[[number]]} mat Matrix\n */\nconst matrixMax = (mat) => {\n  let curMax = -Infinity;\n  for (let i = 0; i < mat.length; i++) {\n    for (let j = 0; j < mat[0].length; j++) {\n      if (mat[i][j] > curMax) {\n        curMax = mat[i][j];\n      }\n    }\n  }\n  return curMax;\n}\n\n/**\n * Convert canvas image data into a 3D array with dimension [height, width, 3].\n * Each pixel is in 0-255 scale.\n * @param {[int8]} imageData Canvas image data\n */\nconst imageDataTo3DArray = (imageData) => {\n  // Get image dimension (assume square image)\n  let width = Math.sqrt(imageData.length / 4);\n\n  // Create array placeholder for each channel\n  let imageArray = [init2DArray(width, width, 0), init2DArray(width, width, 0),\n    init2DArray(width, width, 0)];\n  \n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n      channelIndex = i % 4,\n      row = Math.floor(pixelIndex / width),\n      column = pixelIndex % width;\n    \n    if (channelIndex < 3) {\n      imageArray[channelIndex][row][column] = imageData[i];\n    }\n  }\n\n  return imageArray;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.src = imgFile;\n    inputImage.onload = () => {\n      context.drawImage(inputImage, 0, 0,);\n      // Get image data and convert it to a 3D array\n      let imageData = context.getImageData(0, 0, inputImage.width,\n        inputImage.height).data;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      console.log(imageDataTo3DArray(imageData));\n      resolve(imageDataTo3DArray(imageData));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Compute convolutions of one kernel on one matrix (one slice of a tensor).\n * @param {[[number]]} input Input, square matrix\n * @param {[[number]]} kernel Kernel weights, square matrix\n * @param {int} stride Stride size\n * @param {int} padding Padding size\n */\nexport const singleConv = (input, kernel, stride=1, padding=0) => {\n  // TODO: implement padding\n\n  // Only support square input and kernel\n  console.assert(input.length === input[0].length,\n     'Conv input is not square');\n  console.assert(kernel.length === kernel[0].length,\n    'Conv kernel is not square');\n\n  let stepSize = (input.length - kernel.length) / stride + 1;\n\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  // Window sliding\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(input, r * stride, r * stride + kernel.length,\n        c * stride, c * stride + kernel.length);\n      let dot = matrixDot(curWindow, kernel);\n      result[r][c] = dot;\n    }\n  }\n  return result;\n}\n\n/**\n * Convolution operation. This function update the outputs property of all nodes\n * in the given layer. Previous layer is accessed by the reference in nodes'\n * links.\n * @param {[Node]} curLayer Conv layer.\n */\nconst convolute = (curLayer) => {\n  console.assert(curLayer[0].type === 'conv', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  curLayer.forEach(node => {\n    /*\n     * Accumulate the single conv result matrices from previous channels.\n     * Previous channels (node) are accessed by the reference in Link objects.\n     */\n    let newOutput = init2DArray(node.output.length, node.output.length, 0);\n\n    for (let i = 0; i < node.inputLinks.length; i++) {\n      let curLink = node.inputLinks[i];\n      let curConvResult = singleConv(curLink.source.output, curLink.weight);\n      newOutput = matrixAdd(newOutput, curConvResult);\n    }\n\n    // Add bias to all element in the output\n    let biasMatrix = init2DArray(newOutput.length, newOutput.length, node.bias);\n    newOutput = matrixAdd(newOutput, biasMatrix);\n\n    node.output = newOutput;\n  })\n}\n\n/**\n * Activate matrix mat using ReLU (max(0, x)).\n * @param {[[number]]} mat Matrix\n */\nconst singleRelu = (mat) => {\n  // Only support square matrix\n  console.assert(mat.length === mat[0].length, 'Activating non-square matrix!');\n\n  let width = mat.length;\n  let result = init2DArray(width, width, 0);\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      result[i][j] = Math.max(0, mat[i][j]);\n    }\n  }\n  return result;\n}\n\n/**\n * Update outputs of all nodes in the current ReLU layer. Values of previous\n * layer nodes are accessed by the links stored in the current layer.\n * @param {[Node]} curLayer ReLU layer\n */\nconst relu = (curLayer) => {\n  console.assert(curLayer[0].type === 'relu', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleRelu(preNode.output);\n  }\n}\n\n/**\n * Max pool one matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} kernelWidth Pooling kernel length (only supports 2)\n * @param {int} stride Pooling sliding stride (only supports 2)\n * @param {string} padding Pading method when encountering odd number mat,\n * currently this function only supports 'VALID'\n */\nexport const singleMaxPooling = (mat, kernelWidth=2, stride=2, padding='VALID') => {\n  console.assert(kernelWidth === 2, 'Only supports kernen = [2,2]');\n  console.assert(stride === 2, 'Only supports stride = 2');\n  console.assert(padding === 'VALID', 'Only support valid padding');\n\n  // Handle odd length mat\n  // 'VALID': ignore edge rows and columns\n  // 'SAME': add zero padding to make the mat have even length\n  if (mat.length % 2 === 1 && padding === 'VALID') {\n    mat = matrixSlice(mat, 0, mat.length - 1, 0, mat.length - 1);\n  }\n\n  let stepSize = (mat.length - kernelWidth) / stride + 1;\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(mat, r * stride, r * stride + kernelWidth,\n        c * stride, c * stride + kernelWidth);\n      result[r][c] = matrixMax(curWindow);\n    }\n }\n return result;\n}\n\n/**\n * Max pooling one layer.\n * @param {[Node]} curLayer MaxPool layer\n */\nconst maxPooling = (curLayer) => {\n  console.assert(curLayer[0].type === 'pool', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleMaxPooling(preNode.output);\n  }\n}\n\n/**\n * Flatten a previous 2D layer (conv2d or maxpool2d). The flatten order matches\n * tf2.keras' implementation: channel -> row -> column.\n * @param {[Node]} curLayer Flatten layer\n */\nconst flatten = (curLayer) => {\n  console.assert(curLayer[0].type === 'flatten', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    let coordinate = curNode.inputLinks[0].weight;\n    // Take advantage of the dummy weights\n    curNode.output = preNode.output[coordinate[0]][coordinate[1]];\n  }\n}\n\nconst fullyConnect = (curLayer) => {\n  console.assert(curLayer[0].type === 'fc', 'Wrong layer type');\n  // TODO\n}\n\nexport const tempMain = async () => {\n  let nn = await constructNN('PUBLIC_URL/copycat-cnn-explainer/assets/img/koala.jpeg');\n  convolute(nn[1]);\n  relu(nn[2])\n  convolute(nn[3]);\n  relu(nn[4]);\n  maxPooling(nn[5]);\n  convolute(nn[6]);\n  relu(nn[7])\n  convolute(nn[8]);\n  relu(nn[9]);\n  maxPooling(nn[10]);\n  convolute(nn[11]);\n  relu(nn[12])\n  convolute(nn[13]);\n  relu(nn[14]);\n  maxPooling(nn[15]);\n  flatten(nn[16]);\n  console.log(nn[16].map(d => d.output));\n}\n","import { matrixSlice } from '../utils/cnn.js';\n\nexport function array1d(length, f) {\n  return Array.from({length: length}, f ? ((v, i) => f(i)) : undefined);\n}\n\nfunction array2d(height, width, f) {\n  return Array.from({length: height}, (v, i) => Array.from({length: width}, f ? ((w, j) => f(i, j)) : undefined));\n}\n\nexport function generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation) {\n  const outputMapping = array2d(output.length, output.length, (i, j) => array2d(kernelLength, kernelLength));\n  for (let h_out = 0; h_out < output.length; h_out++) {\n    for (let w_out = 0; w_out < output.length; w_out++) {\n      for (let h_kern = 0; h_kern < kernelLength; h_kern++) {\n        for (let w_kern = 0; w_kern < kernelLength; w_kern++) {\n          const h_im = h_out * stride + h_kern * dilation;\n          const w_im = w_out * stride + w_kern * dilation;\n          outputMapping[h_out][w_out][h_kern][w_kern] = h_im * padded_input_size + w_im;\n        }\n      }\n    }\n  }\n  return outputMapping;\n}\n\nexport function compute_input_multiplies_with_weight(hoverH, hoverW, \n                                              padded_input_size, weight_dims, outputMappings, kernelLength) {\n  \n  const [h_weight, w_weight] = weight_dims;\n  const input_multiplies_with_weight = array1d(padded_input_size * padded_input_size);\n  for (let h_weight = 0; h_weight < kernelLength; h_weight++) {\n    for (let w_weight = 0; w_weight < kernelLength; w_weight++) {\n      const flat_input = outputMappings[hoverH][hoverW][h_weight][w_weight];\n      if (typeof flat_input === \"undefined\") continue;\n      input_multiplies_with_weight[flat_input] = [h_weight, w_weight];\n    }\n  }\n  return input_multiplies_with_weight;\n}\n\nexport function getMatrixSliceFromInputHighlights(matrix, highlights, kernelLength) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != undefined) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + kernelLength, indices[0] % matrix.length, indices[0] % matrix.length + kernelLength);\n}\n\nexport function getMatrixSliceFromOutputHighlights(matrix, highlights) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != false) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + 1, indices[0] % matrix.length, indices[0] % matrix.length + 1);\n}\n\n// Edit these values to change size of low-level conv visualization.\nexport function getVisualizationSizeConstraint(imageLength) {\n  let sizeOfGrid = 150;\n  let maxSizeOfGridCell = 20;\n  return sizeOfGrid / imageLength > maxSizeOfGridCell ? maxSizeOfGridCell : sizeOfGrid / imageLength;\n}\n\nexport function getDataRange(image) {\n  let maxRow = image.map(function(row){ return Math.max.apply(Math, row); });\n  let max = Math.max.apply(null, maxRow);\n  let minRow = image.map(function(row){ return Math.min.apply(Math, row); });\n  let min = Math.min.apply(null, minRow);\n  let range = {\n    range: 2 * Math.max(Math.abs(min), Math.abs(max)),\n    min: min,\n    max: max\n  };\n  return range;\n}\n\nexport function gridData(image, constraint=getVisualizationSizeConstraint(image.length)) {\n  // Constrain grids based on input image size.\n  var data = new Array();\n  var xpos = 1;\n  var ypos = 1;\n  var width = constraint;\n  var height = constraint;\n  for (var row = 0; row < image.length; row++) {\n    data.push( new Array() );\n    for (var column = 0; column < image[0].length; column++) {\n      data[row].push({\n        text: Math.round(image[row][column] * 100) / 100,\n        row: row,\n        col: column,\n        x: xpos,\n        y: ypos,\n        width: width,\n        height: height\n      })\n      xpos += width;\n    }\n    xpos = 1;\n    ypos += height; \n  }\n  return data;\n}","<script>\n  export let data;\n  export let highlights;\n  export let isKernelMath;\n  export let constraint;\n  export let dataRange;\n  export let outputLength = undefined;\n  export let stride = undefined;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { onDestroy } from 'svelte';\n  import { beforeUpdate, afterUpdate } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  let grid_final;\n  const textConstraintDivisor = 2.6;\n  const standardCellColor = \"ddd\";\n  const dispatch = createEventDispatcher();\n\n  let oldHighlight = highlights;\n  let oldData = data;\n\n  const redraw = () => {\n    d3.select(grid_final).selectAll(\"#grid > *\").remove();\n    const constrainedSvgSize = data.length * constraint + 2;\n    var grid = d3.select(grid_final).select(\"#grid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    var column = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.8)\n      .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue);\n      })\n      .on('mouseover', function(d) {\n        if (data.length != outputLength) {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / stride), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / stride), outputLength - 1)\n          });\n        } else {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / 1), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / 1), outputLength - 1)\n          });\n        }\n      });\n    if (isKernelMath) {\n      var text = row.selectAll(\".text\")\n        .data(function(d) { return d; })\n        .enter().append(\"text\")\n        .attr(\"class\",\"text\")\n        .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n        .attr(\"x\", function(d) { return d.x + d.width / 2; })\n        .attr(\"y\", function(d) { return d.y + d.height / 2; })\n        .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n          if (isInputLayer){\n            normalizedValue = 1 - d.text;\n          } else {\n            normalizedValue = (d.text + dataRange / 2) / dataRange;\n          }\n          if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n            return 'white';\n          } else {\n            return 'black';\n          }\n        })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"dominant-baseline\", \"middle\")\n        .text(function(d) {\n          return d.text.toString().replace('-', '－');\n        })\n    }\n  }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n\n    if (highlights != oldHighlight) {\n      var grid = d3.select(grid_final).select('#grid').select(\"svg\")\n      grid.selectAll(\".square\")\n        .style(\"stroke\", (d) => isKernelMath || (highlights.length && highlights[d.row * data.length + d.col]) ? \"black\" : null )\n      oldHighlight = highlights;\n    }\n\n  });\n\n  onMount(() => {\n    redraw();\n  });\n\n</script>\n\n<div style=\"display: inline-block; vertical-align: middle;\" class=\"grid\"\n  bind:this={grid_final}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  export let data;\n  export let kernel;\n  export let constraint;\n  export let dataRange;\n  export let kernelRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let kernelColorScale = d3.interpolateBrBG;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { afterUpdate } from 'svelte';\n\n  let gridFinal;\n  let legendFinal;\n  const textConstraintDivisor = 2.6;\n  const multiplicationSymbolPadding = Math.floor(constraint / 3);\n\n  let oldData = data;\n  let oldKernel = kernel;\n\n  // Legend drawn similarly to legends in overview/intermediate-view.\n  const addOverlayGradient = (gradientID, stops, group) => {\n    if (group === undefined) {\n      group = svg;\n    }\n\n    // Create a gradient\n    let defs = group.append(\"defs\")\n      .attr('class', 'overlay-gradient');\n\n    let gradient = defs.append(\"linearGradient\")\n      .attr(\"id\", gradientID)\n      .attr(\"x1\", \"0%\")\n      .attr(\"x2\", \"100%\")\n      .attr(\"y1\", \"100%\")\n      .attr(\"y2\", \"100%\");\n    \n    stops.forEach(s => {\n      gradient.append('stop')\n        .attr('offset', s.offset)\n        .attr('stop-color', s.color)\n        .attr('stop-opacity', s.opacity);\n    })\n  }\n\n  // Draw the legend for intermediate layer\n  const redrawDetailedConvViewLegend = (arg) => {\n    let legendHeight = arg.legendHeight,\n      range = arg.range,\n      minMax = arg.minMax,\n      width = arg.width,\n      colorScale = arg.colorScale,\n      gradientGap = arg.gradientGap;\n\n    d3.select(legendFinal).selectAll(\"#legend > *\").remove();\n    let legend = d3.select(legendFinal).select(\"#legend\")\n      .attr(\"width\", 150 + \"px\")\n      .attr(\"height\", 25 + \"px\")\n      .attr(\"align\",\"center\")\n      .style(\"dominant-baseline\", \"middle\");\n    let detailedViewKernel = legend.append('g')\n      .attr('transform', `translate(10, 0)`);\n    \n    if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n    if (gradientGap === undefined) { gradientGap = 0; }\n    \n    // Add a legend color gradient\n    let gradientName = `url(#detailed-kernel-gradient)`;\n    let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    addOverlayGradient(`detailed-kernel-gradient`, stops, detailedViewKernel);\n\n    let legendScale = d3.scaleLinear()\n      .range([0, width - 1.2])\n      .domain([minMax.min, minMax.max]);\n\n    let legendAxis = d3.axisBottom()\n      .scale(legendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([minMax.min, 0, minMax.max]);\n    \n    let detailedLegend = detailedViewKernel.append('g')\n      .attr('id', `detailed-legend-0`)\n    \n    let legendGroup = detailedLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(legendAxis);\n    \n    legendGroup.selectAll('text')\n      .style('font-size', '9px')\n      .style('fill', \"black\");\n    \n    legendGroup.selectAll('path, line')\n      .style('stroke', \"black\");\n\n    detailedLegend.append('rect')\n      .attr('width', width)\n      .attr('height', legendHeight)\n      .style('fill', gradientName);\n  }\n\n  // Draw the elementwise dot-product math.\n  const redraw = () => {\n    d3.select(gridFinal).selectAll(\"#grid > *\").remove();\n    const constrainedSvgSize = kernel ? 2 * (data.length * constraint) + 2 : data.length * constraint + 2;\n    var grid = d3.select(gridFinal).select(\"#grid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    \n    var columns = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw cells for slice from input matrix.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding : d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y : d.y * 2 })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.5)\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue); \n      })\n      .style(\"stroke\", \"black\");\n    // Draw cells for the kernel.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding: d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height : d.y * 2 + d.height })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height / 2; })\n      .style(\"opacity\", 0.5)\n      // Same colorscale as is used for the flatten layers.\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        return kernelColorScale(normalizedValueWithGap); \n      })\n\n    var texts = row.selectAll(\".text\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw numbers from input matrix slice.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n          if (isInputLayer && normalizedValue < 0.2) {\n            return 'black';\n          } \n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.text; })\n    // Attempted to use FontAwesome icons for the 'x', '+', and '=', but none of these strategies work: https://github.com/FortAwesome/Font-Awesome/issues/12268\n    // Draw 'x' to signify multiplication.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor)) + \"px\")\n      .attr('font-weight', 600)\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding / 2: d.x * 2 + multiplicationSymbolPadding / 2})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", \"black\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return '×' })\n    // Draw kernel values.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        if (normalizedValueWithGap < 0.2 || normalizedValueWithGap > 0.8) {\n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return kernel[d.row][d.col].text; })\n    // Draw '+' to signify the summing of products except for the last kernel cell where '=' is drawn.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor - 1)) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.row == kernel.length - 1 && d.col == kernel.length - 1 ? '=' : '+'; })\n    }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n    if (kernel != oldKernel) {\n      /*\n      redrawDetailedConvViewLegend({\n          legendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n      });\n      */\n      oldKernel = kernel;\n    }\n  });\n\n  onMount(() => {\n    redraw();\n    /*\n    redrawDetailedConvViewLegend({\n          legendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n    });\n    */\n  });\n\n</script>\n\n<div class=\"legend\"\n  bind:this={legendFinal}>\n  <!-- <svg id=\"legend\" width=100% height=100%></svg> -->\n</div>\n\n<div class=\"grid\"\n  bind:this={gridFinal}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getDataRange,\n    getVisualizationSizeConstraint, generateOutputMappings,\n    getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n  import KernelMathView from './KernelMathView.svelte';\n  // image: nxn array -- prepadded.\n  // kernel: mxm array.\n  // stride: int\n  export let stride;\n  export let dilation\n  export let kernel;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n  export let colorScale;\n  export let isInputInputLayer = false;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernel.length; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernel.length; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = gridData([0]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n  // lots of replication between mouseover and start-conv. TODO: fix this.\n  function startConvolution(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n      testInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n    testInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startConvolution(stride);\n  let testImage = gridData(image)\n  let testOutput = gridData(output)\n  let testKernel = gridData(kernel)\n  $ : {\n    startConvolution(stride);\n    testImage = gridData(image)\n    testOutput = gridData(output)\n    testKernel = gridData(kernel)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)}\n      dataRange={dataRange} stride={stride} colorScale={colorScale}\n      isInputLayer={isInputInputLayer}/>\n</div>\n<div class=\"column has-text-centered\">\n  <KernelMathView data={testInputMatrixSlice} kernel={testKernel} constraint={getVisualizationSizeConstraint(kernel.length)}\n                  dataRange={dataRange} kernelRange={getDataRange(kernel)} colorScale={colorScale}\n                  isInputLayer={isInputInputLayer}/>\n  <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernel.length)} dataRange={dataRange}/>\n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false}\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport ConvolutionAnimator from './ConvolutionAnimator.svelte';\n  import { singleConv } from '../utils/cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernel;\n  export let dataRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputInputLayer = false;\n  export let isExited = false;\n  // export let output;\n  \n  const dispatch = createEventDispatcher();\n\tlet stride = 1;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleConv(input, kernel, stride);\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleConv(input, kernel, stride);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-convolution`);\n    scroll.animateScroll(anchor);\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    isExited = true;\n    dispatch('message', {\n      text: isExited\n    });\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\" id=\"detailview-container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          Convolution\n        </div>\n\n        <div class=\"buttons\">\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container is-centered\">\n        <ConvolutionAnimator on:message={handlePauseFromInteraction} \n          kernel={kernel} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} colorScale={colorScale}\n          isInputInputLayer={isInputInputLayer} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    getVisualizationSizeConstraint, getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  let gridInputMatrixSlice = gridData([[0]]);\n  let gridOutputMatrixSlice = gridData([[0]]);\n  let inputHighlights = array1d(image.length * image.length, (i) => true);\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = array1d(image.length * image.length, (i) => true);\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n\n  // lots of replication between mouseover and start-relu. TODO: fix this.\n  function startRelu() {\n    counter = 0;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      inputHighlights = array1d(image.length * image.length, (i) => undefined);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights[animatedH * output.length + animatedW] = true;\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n      gridInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      gridOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = array1d(image.length * image.length, (i) => undefined);\n    inputHighlights[animatedH * output.length + animatedW] = true;\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n    gridInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    gridOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startRelu();\n  let gridImage = gridData(image)\n  let gridOutput = gridData(output)\n  $ : {\n    startRelu();\n    gridImage = gridData(image)\n    gridOutput = gridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={gridImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={1}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={gridData([[0]])} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    ,\n    <Dataview data={gridInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={gridOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={20} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={gridOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={1}/>\n</div>","<script>\n\timport ActivationAnimator from './ActivationAnimator.svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let output;\n  export let dataRange;\n  export let isExited;\n\n  const dispatch = createEventDispatcher();\n  let isPaused = false;\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-relu`);\n    scroll.animateScroll(anchor);\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          ReLU Activation\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n              <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <ActivationAnimator on:message={handlePauseFromInteraction} \n          image={input} output={output} isPaused={isPaused}\n          dataRange={dataRange}/>\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change pixel.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getVisualizationSizeConstraint,\n    generateOutputMappings, getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let stride;\n  export let dilation\n  export let kernelLength;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernelLength; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernelLength; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = gridData([[0]]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n  \n  let counter;\n\n  // lots of replication between mouseover and start-pool. TODO: fix this.\n  function startMaxPool(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n      testInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n    testInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startMaxPool(stride);\n  let testImage = gridData(image)\n  let testOutput = gridData(output)\n  $ : {\n    startMaxPool(stride);\n    testImage = gridData(image)\n    testOutput = gridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({testImage.length}, {testImage[0].length})\n  </div>\n\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={stride}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={testInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({testOutput.length}, {testOutput[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport PoolAnimator from './PoolAnimator.svelte';\n  import { singleMaxPooling } from '../utils/cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernelLength;\n  export let dataRange;\n  export let isExited;\n  \n  const dispatch = createEventDispatcher();\n  // let isExited = false;\n\tlet stride = 2;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleMaxPooling(input);\n  // let dragging = false;\n  // let dragInfo = {x1: 0, x2: 0, y1: 0, y2: 0};\n  // let detailView = d3.select('#detailview').node();\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleMaxPooling(input);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n    console.log(isPaused)\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-pooling`);\n    scroll.animateScroll(anchor);\n  }\n\n  // Test dragging detail view, need more work\n  // const detailViewDragStart = (e) => {\n  //   // Record the starting pos\n  //   dragInfo.x1 = 0;\n  //   dragInfo.y1 = 0;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n  \n  //   dragging = true;\n  // }\n\n  // const detailViewDragEnd = (e) => {\n  //   dragging = false;\n  // }\n\n  // const detailViewDragMove = (e) => {\n  //   // Add up move to the starting pos\n  //   dragInfo.x1 = dragInfo.x2 - e.clientX;\n  //   dragInfo.y1 = dragInfo.y2 - e.clientY;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n\n  //   // Move detail view\n  //   detailView.style.top = (detailView.offsetTop - dragInfo.y1) + 'px';\n  //   detailView.style.left = (detailView.offsetLeft - dragInfo.x1) + 'px';\n  // }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n      \n        <div class=\"title-text\">\n          Max Pooling\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <PoolAnimator on:message={handlePauseFromInteraction} \n          kernelLength={kernelLength} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n          <div class=\"annotation-text\">\n            <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n          </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\n  export let logits;\n  export let logitColors;\n  export let selectedI;\n  export let highlightI = -1;\n  export let outputName;\n  export let outputValue;\n  export let startAnimation;\n\n  let softmaxViewComponent;\n  let svg = null;\n  const dispatch = createEventDispatcher();\n  const formater = (n, d) => {\n    if (d === undefined) {\n      return d3.format('.2f')(n);\n    } else {\n      return d3.format(`.${d}f`)(n);\n    }\n  }\n\n  $: highlightI, (() => {\n    if (svg !== null) {\n      svg.selectAll(`.formula-term`)\n        .style('text-decoration', 'none')\n        .style('font-weight', 'normal');\n\n      svg.selectAll(`.formula-term-${highlightI}`)\n      .style('font-weight', 'bold')\n      .style('text-decoration', 'underline');\n    }\n  })();\n\n  $: startAnimation, (() => {\n    if (svg !== null) {\n      svg.select(`.formula-term-${startAnimation.i}`)\n        .transition('softmax-edge')\n        .duration(startAnimation.duration)\n        .style('fill-opacity', 1);\n    }\n  })();\n\n  const mouseOverHandler = (d, i, g, curI) => {\n    highlightI = curI;\n    dispatch('mouseOver', {curI: curI});\n  }\n\n  const mouseLeaveHandler = (d, i, g, curI) => {\n    highlightI = -1;\n    dispatch('mouseLeave', {curI: curI});\n  }\n\n  const handleClickX = () => {\n    dispatch('xClicked', {});\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-softmax`);\n    scroll.animateScroll(anchor);\n  }\n\n  onMount(() => {\n    svg = d3.select(softmaxViewComponent)\n      .select('#softmax-svg');\n\n    let formulaRightGroup = svg.append('g')\n      .attr('class', 'formula-right')\n      .attr('transform', `translate(${10}, ${0})`)\n      .style('font-size', '15px');\n\n    // Denominator\n    let denominatorGroup = formulaRightGroup.append('g')\n      .attr('class', 'denominator')\n      .attr('transform', `translate(${0}, ${58})`);\n      \n    // Add the left (\n    denominatorGroup.append('text')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .text('(');\n\n    // Need to loop through the logits array instead of data-binding because\n    // we want dynamic positioning based on prior '-' occurance\n    let curX = 8;\n    let numOfRows = 4;\n\n    logits.forEach((d, i) => {\n      if (i / numOfRows >= 1 && i % numOfRows === 0) {\n          curX = 8;\n      }\n\n      let curText = denominatorGroup.append('text')\n        .attr('x', curX)\n        .attr('y', Math.floor(i / numOfRows) * 20)\n        .style('cursor', 'crosshair')\n        .style('pointer-events', 'all')\n        .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, i))\n        .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, i))\n        .text(`exp(`);\n      \n      curText.append('tspan')\n        .attr('class', `formula-term-${i} formula-term`)\n        .attr('dx', '1')\n        .style('fill', logitColors[i])\n        .style('fill-opacity', (i === selectedI) || startAnimation.hasInitialized ? 1 : 0)\n        .text(formater(d));\n      \n      curText.append('tspan')\n        .attr('dx', '1')\n        .text(')');\n      \n      let curBBox = curText.node().getBBox();\n      curX += curBBox.width + 4;\n\n      if (i !== logits.length - 1) {\n        denominatorGroup.append('text')\n          .attr('x', curX)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .text('+');\n        curX += 14;\n      } else {\n        denominatorGroup.append('text')\n          .attr('x', curX-2)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .style('fill', 'gray')\n          .text(')');\n      }\n    })\n\n    denominatorGroup.selectAll('text')\n      .data(logits)\n      .enter()\n      .append('text')\n      .attr('x', (d, i) => 40 * i)\n      .attr('y', 0)\n      .text(d => formater(d));\n    \n    // Calculate the dynamic denominator group width\n    let denominatorGroupBBox = denominatorGroup.node().getBBox();\n\n    // Draw the fraction line\n    formulaRightGroup.append('line')\n      .attr('class', 'separation-line')\n      .attr('x1', -5)\n      .attr('x2', denominatorGroupBBox.width + 5)\n      .attr('y1', 32)\n      .attr('y2', 32)\n      .style('stroke-width', 1.2)\n      .style('stroke', 'gray');\n    \n    // Draw the numerator\n    let numeratorGroup = formulaRightGroup.append('g')\n      .attr('class', 'numerator-group')\n      .attr('transform', `translate(${0}, ${20})`);\n    \n    let numeratorText = numeratorGroup.append('text')\n      .attr('x', denominatorGroupBBox.x + denominatorGroupBBox.width / 2)\n      .attr('y', 0)\n      .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, selectedI))\n      .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, selectedI))\n      .style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .style('text-anchor', 'middle')\n      .text('exp(');\n\n    numeratorText.append('tspan')\n      .attr('class', `formula-term-${selectedI} formula-term`)\n      .attr('dx', 1)\n      .style('fill', logitColors[selectedI])\n      .text(`${formater(logits[selectedI])}`);\n\n    numeratorText.append('tspan')\n       .attr('dx', 1)\n      .text(')');\n    \n    // Draw the left part of the formula\n    let formulaLeftGroup = svg.append('g')\n      .attr('class', 'formula-left')\n      .attr('transform', `translate(${395}, ${32})`);\n    \n    let softmaxText = formulaLeftGroup.append('text')\n      .attr('x', 20)\n      .attr('dominant-baseline', 'middle')\n      .text(`${formater(outputValue, 4)}`);\n    \n    let softmaxTextBBox = softmaxText.node().getBBox();\n    \n    formulaLeftGroup.append('text')\n      .attr('dominant-baseline', 'middle')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .style('font-weight', 'bold')\n      .text('=');\n\n  })\n\n</script>\n\n<style>\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 6px;\n    right: 10px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .box {\n    padding: 5px 10px 15px 10px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg {\n    margin: 10px 0 12px 0;\n  }\n</style>\n\n<div class=\"container\" bind:this={softmaxViewComponent}>\n  <div class=\"box\">\n\n    <div class=\"buttons\">\n      <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n        <i class=\"fas fa-info-circle\"></i>\n      </div>\n\n      <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n        <i class=\"fas control-icon fa-times-circle\"></i>\n      </div>\n    </div>\n\n    <div class=\"title-text\">\n      Softmax Score for <i>\"{outputName}\"</i>\n    </div>\n\n    <svg id=\"softmax-svg\" width=\"470\" height=\"105\"/>\n\n    <div class=\"annotation\">\n      <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n      <div class=\"annotation-text\">\n        <span style=\"font-weight:600\">Hover over</span> the numbers to highlight logit circles.\n      </div>\n    </div>\n\n  </div>\n</div>\n\n","<script>\n  /* global d3 */\n\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { modalStore } from '../stores.js';\n\n  let modalComponent;\n  let valiImg;\n  let inputValue = '';\n  let showLoading = false;\n  let files;\n  let usingURL = true;\n  let errorInfo = {\n    show: false,\n    error: ''\n  };\n  const dispatch = createEventDispatcher();\n\n  let modalInfo = {\n    show: false\n  };\n  modalStore.set(modalInfo);\n  modalStore.subscribe(value => {modalInfo = value});\n\n  const errorCallback = () => {\n    // The URL is invalid, show an error message on the UI\n    showLoading = false;\n    errorInfo.show = true;\n    errorInfo.error = usingURL ? \"We can't find the image at that URL.\" :\n      \"Not a valid image file.\";\n  }\n\n  const loadCallback = () => {\n    // The URL is valid, but we are not sure if loading it to canvas would be\n    // blocked by crossOrigin setting. Try it here before dispatch to parent.\n\n    // https://stackoverflow.com/questions/13674835/canvas-tainted-by-cross-origin-data\n    let canvas = document.createElement(\"canvas\");\n    let context = canvas.getContext(\"2d\");\n\n    canvas.width = valiImg.width;\n    canvas.height = valiImg.height;\n    context.drawImage(valiImg, 0, 0);\n\n    try {\n      context.getImageData(0, 0, valiImg.width, valiImg.height);\n      // If the foreign image does support CORS -> use this image\n      // dispatch to parent component to use the input image\n      showLoading = false;\n      modalInfo.show = false;\n      modalStore.set(modalInfo);\n      dispatch('urlTyped', {url: valiImg.src});\n      inputValue = null;\n    } catch(err) {\n      // If the foreign image does not support CORS -> use this image\n      showLoading = false;\n      errorInfo.show = true;\n      errorInfo.error = \"No permission to load this image.\"\n    }\n  }\n\n  const imageUpload = () => {\n    usingURL = false;\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      valiImg.src = event.target.result;\n    }\n    reader.readAsDataURL(files[0]);\n  }\n\n  const crossClicked = () => {\n    modalInfo.show = false;\n    modalStore.set(modalInfo);\n    // Dispatch the parent component\n    dispatch('xClicked', {preImage: modalInfo.preImage});\n  }\n\n  const addClicked = () => {\n    // Validate the input URL\n    showLoading = true;\n    errorInfo.show = false;\n    valiImg.crossOrigin = \"Anonymous\";\n    valiImg.src = inputValue;\n  }\n\n  onMount(() => {\n    let modal = d3.select(modalComponent)\n      .select('#input-modal');\n  })\n\n</script>\n\n<style>\n  .modal-card {\n    max-width: 500px;\n  }\n\n  .modal-card-title {\n    font-size: 20px;\n  }\n\n  .modal-card-head {\n    padding: 15px 20px;\n  }\n\n  .modal-card-foot {\n    padding: 12px 20px;\n    justify-content: space-between;\n  }\n\n  .is-smaller {\n    font-size: 15px;\n    padding: 0.5em 0.8em;\n    max-height: 2.2em;\n  }\n\n  .small-font {\n    font-size: 15px;\n  }\n\n  .error-message {\n    font-size: 15px;\n    padding: 0.5em 0;\n    color: #F22B61;\n  }\n\n  .control {\n    width: 100%;\n  }\n\n  .or-label {\n    font-size: 15px;\n    margin: 0 10px;\n    padding: 0.5em 0;\n  }\n\n  .field {\n    display: flex;\n    justify-content: space-between;\n  }\n\n</style>\n\n\n<div class=\"modal-component\"\n  bind:this={modalComponent}>\n\n  <div class=\"modal\"\n    id=\"input-modal\"\n    class:is-active={modalInfo.show}>\n\n    <div class=\"modal-background\" on:click={crossClicked}></div>\n\n    <div class=\"modal-card\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">Add Input Image</p>\n        <button class=\"delete\" aria-label=\"close\" on:click={crossClicked}></button>\n      </header>\n\n      <section class=\"modal-card-body\">\n        <div class=\"field\">\n          <div class=\"control has-icons-left\"\n            class:is-loading={showLoading}>\n\n            <input class=\"input small-font\" type=\"url\"\n              bind:value={inputValue}\n              placeholder=\"Paste URL of image...\">\n\n            <span class=\"icon small-font is-left\">\n              <i class=\"fas fa-link\"></i>\n            </span>\n\n          </div>\n\n          <div class=\"or-label\">or</div>\n\n          <div class=\"file\">\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"image\"\n                accept=\".png,.jpeg,.tiff,.jpg,.png\"\n                bind:files={files}\n                on:change={imageUpload}>\n              <span class=\"file-cta small-font\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">\n                  Upload\n                </span>\n              </span>\n            </label>\n          </div>\n\n        </div>\n\n      </section>\n\n      <footer class=\"modal-card-foot\">\n\n        <div class=\"error-message\"\n          class:hidden={!errorInfo.show}>\n          {errorInfo.error}\n        </div>\n\n        <div class=\"button-container\">\n          <button class=\"button is-smaller\"\n            on:click={crossClicked}>\n            Cancel\n          </button>\n\n          <button class=\"button is-success is-smaller\"\n            on:click={addClicked}>\n            Add\n          </button>\n        </div>\n\n\n      </footer>\n    </div>\n\n  </div>\n\n  <!-- An invisible image to check if the user input URL is valid -->\n  <img style=\"display: none\"\n    id=\"vali-image\"\n    alt=\"hidden image\"\n    bind:this={valiImg}\n    on:error={errorCallback}\n    on:load={loadCallback} />\n\n</div>\n","/* global tf */\n\n// Network input image size\nconst networkInputSize = 64;\n\n// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   * \n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \n   * @param {number} bias The bias assocated to this node.\n   * @param {number[]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  /**\n   * Class structure for each link between two nodes.\n   * \n   * @param {Node} source Source node.\n   * @param {Node} dest Target node.\n   * @param {number} weight Weight associated to this link. It can be a number,\n   *  1D array, or 2D array.\n   */\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\n/**\n * Construct a CNN with given extracted outputs from every layer.\n * \n * @param {number[][]} allOutputs Array of outputs for each layer.\n *  allOutputs[i][j] is the output for layer i node j.\n * @param {Model} model Loaded tf.js model.\n * @param {Tensor} inputImageTensor Loaded input image tensor.\n */\nconst constructCNNFromOutputs = (allOutputs, model, inputImageTensor) => {\n  let cnn = [];\n\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = model.layers[0].batchInputShape.slice(1);\n  let inputImageArray = inputImageTensor.transpose([2, 0, 1]).arraySync();\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n                                                                                                                   \n  cnn.push(inputLayer);\n  let curLayerIndex = 1;\n\n  for (let l = 0; l < model.layers.length; l++) {\n    let layer = model.layers[l];\n    // Get the current output\n    let outputs = allOutputs[l].squeeze();\n    outputs = outputs.arraySync();\n\n    let curLayerNodes = [];\n    let curLayerType;\n\n    // Identify layer type based on the layer name\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    // Construct this layer based on its layer type\n    switch (curLayerType) {\n      case nodeType.CONV: {\n        let biases = layer.bias.val.arraySync();\n        // The new order is [output_depth, input_depth, height, width]\n        let weights = layer.kernel.val.transpose([3, 2, 0, 1]).arraySync();\n\n        // Add nodes into this layer\n        for (let i = 0; i < outputs.length; i++) {\n          let node = new Node(layer.name, i, curLayerType, biases[i],\n            outputs[i]);\n\n          // Connect this node to all previous nodes (create links)\n          // CONV layers have weights in links. Links are one-to-multiple.\n          for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\n            let preNode = cnn[curLayerIndex - 1][j];\n            let curLink = new Link(preNode, node, weights[i][j]);\n            preNode.outputLinks.push(curLink);\n            node.inputLinks.push(curLink);\n          }\n          curLayerNodes.push(node);\n        }\n        break;\n      }\n      case nodeType.FC: {\n        let biases = layer.bias.val.arraySync();\n        // The new order is [output_depth, input_depth]\n        let weights = layer.kernel.val.transpose([1, 0]).arraySync();\n\n        // Add nodes into this layer\n        for (let i = 0; i < outputs.length; i++) {\n          let node = new Node(layer.name, i, curLayerType, biases[i],\n            outputs[i]);\n\n          // Connect this node to all previous nodes (create links)\n          // FC layers have weights in links. Links are one-to-multiple.\n\n          // Since we are visualizing the logit values, we need to track\n          // the raw value before softmax\n          let curLogit = 0;\n          for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\n            let preNode = cnn[curLayerIndex - 1][j];\n            let curLink = new Link(preNode, node, weights[i][j]);\n            preNode.outputLinks.push(curLink);\n            node.inputLinks.push(curLink);\n            curLogit += preNode.output * weights[i][j];\n          }\n          curLogit += biases[i];\n          node.logit = curLogit;\n          curLayerNodes.push(node);\n        }\n\n        // Sort flatten layer based on the node TF index\n        cnn[curLayerIndex - 1].sort((a, b) => a.realIndex - b.realIndex);\n        break;\n      }\n      case nodeType.RELU:\n      case nodeType.POOL: {\n        // RELU and POOL have no bias nor weight\n        let bias = 0;\n        let weight = null;\n\n        // Add nodes into this layer\n        for (let i = 0; i < outputs.length; i++) {\n          let node = new Node(layer.name, i, curLayerType, bias, outputs[i]);\n\n          // RELU and POOL layers have no weights. Links are one-to-one\n          let preNode = cnn[curLayerIndex - 1][i];\n          let link = new Link(preNode, node, weight);\n          preNode.outputLinks.push(link);\n          node.inputLinks.push(link);\n\n          curLayerNodes.push(node);\n        }\n        break;\n      }\n      case nodeType.FLATTEN: {\n        // Flatten layer has no bias nor weights.\n        let bias = 0;\n\n        for (let i = 0; i < outputs.length; i++) {\n          // Flatten layer has no weights. Links are multiple-to-one.\n          // Use dummy weights to store the corresponding entry in the previsou\n          // node as (row, column)\n          // The flatten() in tf2.keras has order: channel -> row -> column\n          let preNodeWidth = cnn[curLayerIndex - 1][0].output.length,\n            preNodeNum = cnn[curLayerIndex - 1].length,\n            preNodeIndex = i % preNodeNum,\n            preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n            preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n            // Use channel, row, colume to compute the real index with order\n            // row -> column -> channel\n            curNodeRealIndex = preNodeIndex * (preNodeWidth * preNodeWidth) +\n              preNodeRow * preNodeWidth + preNodeCol;\n          \n          let node = new Node(layer.name, i, curLayerType,\n              bias, outputs[i]);\n          \n          // TF uses the (i) index for computation, but the real order should\n          // be (curNodeRealIndex). We will sort the nodes using the real order\n          // after we compute the logits in the output layer.\n          node.realIndex = curNodeRealIndex;\n\n          let link = new Link(cnn[curLayerIndex - 1][preNodeIndex],\n              node, [preNodeRow, preNodeCol]);\n\n          cnn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n          node.inputLinks.push(link);\n\n          curLayerNodes.push(node);\n        }\n\n        // Sort flatten layer based on the node TF index\n        curLayerNodes.sort((a, b) => a.index - b.index);\n        break;\n      }\n      default:\n        console.error('Encounter unknown layer type');\n        break;\n    }\n\n    // Add current layer to the NN\n    cnn.push(curLayerNodes);\n    curLayerIndex++;\n  }\n\n  return cnn;\n}\n\n/**\n * Construct a CNN with given model and input.\n * \n * @param {string} inputImageFile filename of input image.\n * @param {Model} model Loaded tf.js model.\n */\nexport const constructCNN = async (inputImageFile, model) => {\n  // Load the image file\n  let inputImageTensor = await getInputImageArray(inputImageFile, true);\n\n  // Need to feed the model with a batch\n  let inputImageTensorBatch = tf.stack([inputImageTensor]);\n\n  // To get intermediate layer outputs, we will iterate through all layers in\n  // the model, and sequencially apply transformations.\n  let preTensor = inputImageTensorBatch;\n  let outputs = [];\n\n  // Iterate through all layers, and build one model with that layer as output\n  for (let l = 0; l < model.layers.length; l++) {\n    let curTensor = model.layers[l].apply(preTensor);\n\n    // Record the output tensor\n    // Because there is only one element in the batch, we use squeeze()\n    // We also want to use CHW order here\n    let output = curTensor.squeeze();\n    if (output.shape.length === 3) {\n      output = output.transpose([2, 0, 1]);\n    }\n    outputs.push(output);\n\n    // Update preTensor for next nesting iteration\n    preTensor = curTensor;\n  }\n\n  let cnn = constructCNNFromOutputs(outputs, model, inputImageTensor);\n  return cnn;\n}\n\n// Helper functions\n\n/**\n * Crop the largest central square of size 64x64x3 of a 3d array.\n * \n * @param {[int8]} arr array that requires cropping and padding (if a 64x64 crop\n * is not present)\n * @returns 64x64x3 array\n */\nconst cropCentralSquare = (arr) => {\n  let width = arr.length;\n  let height = arr[0].length;\n  let croppedArray;\n\n  // Crop largest square from image if the image is smaller than 64x64 and pad the\n  // cropped image.\n  if (width < networkInputSize || height < networkInputSize) {\n    // TODO(robert): Finish the padding logic.  Pushing now for Omar to work on when he is ready.\n    let cropDimensions = Math.min(width, height);\n    let startXIdx = Math.floor(width / 2) - (cropDimensions / 2);\n    let startYIdx = Math.floor(height / 2) - (cropDimensions / 2);\n    let unpaddedSubarray = arr.slice(startXIdx, startXIdx + cropDimensions).map(i => i.slice(startYIdx, startYIdx + cropDimensions));\n  } else {\n    let startXIdx = Math.floor(width / 2) - Math.floor(networkInputSize / 2);\n    let startYIdx = Math.floor(height / 2) - Math.floor(networkInputSize / 2);\n    croppedArray = arr.slice(startXIdx, startXIdx + networkInputSize).map(i => i.slice(startYIdx, startYIdx + networkInputSize));\n  }\n  return croppedArray;\n}\n\n/**\n * Convert canvas image data into a 3D tensor with dimension [height, width, 3].\n * Recall that tensorflow uses NHWC order (batch, height, width, channel).\n * Each pixel is in 0-255 scale.\n * \n * @param {[int8]} imageData Canvas image data\n * @param {int} width Canvas image width\n * @param {int} height Canvas image height\n */\nconst imageDataTo3DTensor = (imageData, width, height, normalize=true) => {\n  // Create array placeholder for the 3d array\n  let imageArray = tf.fill([width, height, 3], 0).arraySync();\n\n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n      channelIndex = i % 4,\n      row = width === height ? Math.floor(pixelIndex / width)\n                              : pixelIndex % width,\n      column = width === height ? pixelIndex % width\n                              : Math.floor(pixelIndex / width);\n    \n    if (channelIndex < 3) {\n      let curEntry  = imageData[i];\n      // Normalize the original pixel value from [0, 255] to [0, 1]\n      if (normalize) {\n        curEntry /= 255;\n      }\n      imageArray[row][column][channelIndex] = curEntry;\n    }\n  }\n\n  // If the image is not 64x64, crop and or pad the image appropriately.\n  if (width != networkInputSize && height != networkInputSize) {\n    imageArray = cropCentralSquare(imageArray)\n  }\n\n  let tensor = tf.tensor3d(imageArray);\n  return tensor;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n * \n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile, normalize=true) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.crossOrigin = \"Anonymous\";\n    inputImage.src = imgFile;\n    let canvasImage;\n    inputImage.onload = () => {\n      canvas.width = inputImage.width;\n      canvas.height = inputImage.height;\n      // Resize the input image of the network if it is too large to simply crop\n      // the center 64x64 portion in order to still provide a representative\n      // input image into the network.\n      if (inputImage.width > networkInputSize || inputImage.height > networkInputSize) {\n        // Step 1 - Resize using smaller dimension to scale the image down. \n        let resizeCanvas = document.createElement('canvas'),\n            resizeContext = resizeCanvas.getContext('2d');\n        let smallerDimension = Math.min(inputImage.width, inputImage.height);\n        const resizeFactor = (networkInputSize + 1) / smallerDimension;\n        resizeCanvas.width = inputImage.width * resizeFactor;\n        resizeCanvas.height = inputImage.height * resizeFactor;\n        resizeContext.drawImage(inputImage, 0, 0, resizeCanvas.width,\n          resizeCanvas.height);\n\n        // Step 2 - Flip non-square images horizontally and rotate them 90deg since\n        // non-square images are not stored upright.\n        if (inputImage.width != inputImage.height) {\n          context.translate(resizeCanvas.width, 0);\n          context.scale(-1, 1);\n          context.translate(resizeCanvas.width / 2, resizeCanvas.height / 2);\n          context.rotate(90 * Math.PI / 180);\n        }\n\n        // Step 3 - Draw resized image on original canvas.\n        if (inputImage.width != inputImage.height) {\n          context.drawImage(resizeCanvas, -resizeCanvas.width / 2, -resizeCanvas.height / 2);\n        } else {\n          context.drawImage(resizeCanvas, 0, 0);\n        }\n        canvasImage = context.getImageData(0, 0, resizeCanvas.width,\n          resizeCanvas.height);\n\n      } else {\n        context.drawImage(inputImage, 0, 0);\n        canvasImage = context.getImageData(0, 0, inputImage.width,\n          inputImage.height);\n      }\n      // Get image data and convert it to a 3D array\n      let imageData = canvasImage.data;\n      let imageWidth = canvasImage.width;\n      let imageHeight = canvasImage.height;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      resolve(imageDataTo3DTensor(imageData, imageWidth, imageHeight, normalize));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Wrapper to load a model.\n * \n * @param {string} modelFile Filename of converted (through tensorflowjs.py)\n *  model json file.\n */\nexport const loadTrainedModel = (modelFile) => {\n  return tf.loadLayersModel(modelFile);\n}\n","/* global d3 */\n\nconst layerColorScales = {\n  input: [d3.interpolateGreys, d3.interpolateGreys, d3.interpolateGreys],\n  conv: d3.interpolateRdBu,\n  relu: d3.interpolateRdBu,\n  pool: d3.interpolateRdBu,\n  fc: d3.interpolateGreys,\n  weight: d3.interpolateBrBG,\n  logit: d3.interpolateOranges\n};\n\nlet nodeLength = 40;\n\nexport const overviewConfig = {\n  nodeLength : nodeLength,\n  plusSymbolRadius : nodeLength / 5,\n  numLayers : 12,\n  edgeOpacity : 0.8,\n  edgeInitColor : 'rgb(230, 230, 230)',\n  edgeHoverColor : 'rgb(130, 130, 130)',\n  edgeHoverOuting : false,\n  edgeStrokeWidth : 0.7,\n  intermediateColor : 'gray',\n  layerColorScales: layerColorScales,\n  svgPaddings: {top: 25, bottom: 25, left: 50, right: 50},\n  kernelRectLength: 8/3,\n  gapRatio: 4,\n  overlayRectOffset: 12,\n  classLists: ['lifeboat', 'ladybug', 'pizza', 'bell pepper', 'school bus',\n    'koala', 'espresso', 'red panda', 'orange', 'sport car']\n};\n\nexport const copycat_overviewConfig = {\n  nodeLength : nodeLength,\n  plusSymbolRadius : nodeLength / 5,\n  numLayers : 12,\n  edgeOpacity : 0.8,\n  edgeInitColor : 'rgb(230, 230, 230)',\n  edgeHoverColor : 'rgb(130, 130, 130)',\n  edgeHoverOuting : false,\n  edgeStrokeWidth : 0.7,\n  intermediateColor : 'gray',\n  layerColorScales: layerColorScales,\n  svgPaddings: {top: 25, bottom: 25, left: 50, right: 50},\n  kernelRectLength: 8/3,\n  gapRatio: 4,\n  overlayRectOffset: 12,\n  classLists: ['lifeboat', 'ladybug', 'pizza', 'bell pepper', 'school bus',\n    'koala', 'espresso', 'red panda', 'orange', 'sport car']\n};","import { overviewConfig } from '../config.js';\n\n// Configs\nconst nodeLength = overviewConfig.nodeLength;\n\n/**\n * Compute the [minimum, maximum] of a 1D or 2D array.\n * @param {[number]} array \n */\nexport  const getExtent = (array) => {\n  let min = Infinity;\n  let max = -Infinity;\n\n  // Scalar\n  if (array.length === undefined) {\n    return [array, array];\n  }\n\n  // 1D array\n  if (array[0].length === undefined) {\n    for (let i = 0; i < array[0].length; i++) {\n      if (array[i] < min) {\n        min = array[i];\n      } else if (array[i] > max) {\n        max = array[i];\n      }\n    }\n    return [min, max];\n  }\n\n  // 2D array\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array[0].length; j++) {\n      if (array[i][j] < min) {\n        min = array[i][j];\n      } else if (array[i][j] > max) {\n        max = array[i][j];\n      }\n    }\n  }\n  return [min, max];\n}\n\n/**\n * Convert the svg element center coord to document absolute value\n * // Inspired by https://github.com/caged/d3-tip/blob/master/index.js#L286\n * @param {elem} elem \n */\nexport const getMidCoords = (svg, elem) => {\n  if (svg !== undefined) {\n    let targetel = elem;\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n    // Get the absolute coordinate of the E point of element bbox\n    let point = svg.node().ownerSVGElement.createSVGPoint();\n    let matrix = targetel.getScreenCTM();\n    let tbbox = targetel.getBBox();\n    // let width = tbbox.width;\n    let height = tbbox.height;\n\n    point.x += 0;\n    point.y -= height / 2;\n    let bbox = point.matrixTransform(matrix);\n    return {\n      top: bbox.y,\n      left: bbox.x\n    };\n  }\n}\n\n/**\n * Return the output knot (right boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getOutputKnot = (point) => {\n  return {\n    x: point.x + nodeLength,\n    y: point.y + nodeLength / 2\n  };\n}\n\n/**\n * Return the output knot (left boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getInputKnot = (point) => {\n  return {\n    x: point.x,\n    y: point.y + nodeLength / 2\n  }\n}\n\n/**\n * Compute edge data\n * @param {[[[number, number]]]} nodeCoordinate Constructed neuron svg locations\n * @param {[object]} cnn Constructed CNN model\n */\nexport const getLinkData = (nodeCoordinate, cnn) => {\n  let linkData = [];\n  // Create links backward (starting for the first conv layer)\n  for (let l = 1; l < cnn.length; l++) {\n    for (let n = 0; n < cnn[l].length; n++) {\n      let isOutput = cnn[l][n].layerName === 'output';\n      let curTarget = getInputKnot(nodeCoordinate[l][n]);\n      for (let p = 0; p < cnn[l][n].inputLinks.length; p++) {\n        // Specially handle output layer (since we are ignoring the flatten)\n        let inputNodeIndex = cnn[l][n].inputLinks[p].source.index;\n        \n        if (isOutput) {\n          let flattenDimension = cnn[l-1][0].output.length *\n            cnn[l-1][0].output.length;\n          if (inputNodeIndex % flattenDimension !== 0){\n              continue;\n          }\n          inputNodeIndex = Math.floor(inputNodeIndex / flattenDimension);\n        }\n        let curSource = getOutputKnot(nodeCoordinate[l-1][inputNodeIndex]);\n        let curWeight = cnn[l][n].inputLinks[p].weight;\n        linkData.push({\n          source: curSource,\n          target: curTarget,\n          weight: curWeight,\n          targetLayerIndex: l,\n          targetNodeIndex: n,\n          sourceNodeIndex: inputNodeIndex\n        });\n      }\n    }\n  }\n  return linkData;\n}\n\n\n/**\n * Color scale wrapper (support artificially lighter color!)\n * @param {function} colorScale D3 color scale function\n * @param {number} range Color range (max - min)\n * @param {number} value Color value\n * @param {number} gap Tail of the color scale to skip\n */\nexport const gappedColorScale = (colorScale, range, value, gap) => {\n  if (gap === undefined) { gap = 0; }\n  let normalizedValue = (value + range / 2) / range;\n  return colorScale(normalizedValue * (1 - 2 * gap) + gap);\n}","/* global d3, SmoothScroll */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  detailedModeStore, cnnLayerMinMaxStore, hoverInfoStore\n} from '../stores.js';\nimport {\n  getExtent, getLinkData\n} from './draw-utils.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst numLayers = overviewConfig.numLayers;\nconst edgeOpacity = overviewConfig.edgeOpacity;\nconst edgeInitColor = overviewConfig.edgeInitColor;\nconst edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst classLists = overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\n/**\n * Use bounded d3 data to draw one canvas\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {number} range color range map (max - min)\n */\nexport const drawOutput = (d, i, g, range) => {\n  let image = g[i];\n  let colorScale = layerColorScales[d.type];\n\n  if (d.type === 'input') {\n    colorScale = colorScale[d.index];\n  }\n\n  // Set up a second convas in order to resize image\n  let imageLength = d.output.length === undefined ? 1 : d.output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  if (imageLength === 1) {\n    imageSingleArray[0] = d.output;\n  } else {\n    for (let i = 0; i < imageSingleArray.length; i+=4) {\n      let pixeIndex = Math.floor(i / 4);\n      let row = Math.floor(pixeIndex / imageLength);\n      let column = pixeIndex % imageLength;\n      let color = undefined;\n      if (d.type === 'input' || d.type === 'fc' ) {\n        color = d3.rgb(colorScale(1 - d.output[row][column]))\n      } else {\n        color = d3.rgb(colorScale((d.output[row][column] + range / 2) / range));\n      }\n\n      imageSingleArray[i] = color.r;\n      imageSingleArray[i + 1] = color.g;\n      imageSingleArray[i + 2] = color.b;\n      imageSingleArray[i + 3] = 255;\n    }\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  d3.select(image).attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Draw bar chart to encode the output value\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {function} scale map value to length\n */\nconst drawOutputScore = (d, i, g, scale) => {\n  let group = d3.select(g[i]);\n  group.select('rect.output-rect')\n    .transition('output')\n    .delay(500)\n    .duration(800)\n    .ease(d3.easeCubicIn)\n    .attr('width', scale(d.output))\n}\n\nexport const drawCustomImage = (image, inputLayer) => {\n\n  let imageWidth = image.width;\n  // Set up a second convas in order to resize image\n  let imageLength = inputLayer[0].output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n\n    let red = inputLayer[0].output[row][column];\n    let green = inputLayer[1].output[row][column];\n    let blue = inputLayer[2].output[row][column];\n\n    imageSingleArray[i] = red * 255;\n    imageSingleArray[i + 1] = green * 255;\n    imageSingleArray[i + 2] = blue * 255;\n    imageSingleArray[i + 3] = 255;\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = imageWidth * 3;\n  largeCanvas.height = imageWidth * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, imageWidth * 3, imageWidth * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  // d3.select(image).attr('xlink:href', imageDataURL);\n  image.src = imageDataURL;\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create color gradient for the legend\n * @param {[object]} g d3 group\n * @param {function} colorScale Colormap\n * @param {string} gradientName Label for gradient def\n * @param {number} min Min of legend value\n * @param {number} max Max of legend value\n */\nconst getLegendGradient = (g, colorScale, gradientName, min, max) => {\n  if (min === undefined) { min = 0; }\n  if (max === undefined) { max = 1; }\n  let gradient = g.append('defs')\n    .append('svg:linearGradient')\n    .attr('id', `${gradientName}`)\n    .attr('x1', '0%')\n    .attr('y1', '100%')\n    .attr('x2', '100%')\n    .attr('y2', '100%')\n    .attr('spreadMethod', 'pad');\n  let interpolation = 10\n  for (let i = 0; i < interpolation; i++) {\n    let curProgress = i / (interpolation - 1);\n    let curColor = colorScale(curProgress * (max - min) + min);\n    gradient.append('stop')\n      .attr('offset', `${curProgress * 100}%`)\n      .attr('stop-color', curColor)\n      .attr('stop-opacity', 1);\n  }\n}\n\n/**\n * Draw all legends\n * @param {object} legends Parent group\n * @param {number} legendHeight Height of the legend element\n */\nconst drawLegends = (legends, legendHeight) => {\n  // Add local legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n      .range([0, 2 * nodeLength + hSpaceAroundGap - 1.2])\n      .domain([-range1 / 2, range1 / 2]);\n    \n    let localLegendScale2 = d3.scaleLinear()\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap - 1.2])\n      .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n      .scale(localLegendScale1)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range1 / 2, 0, range1 / 2]);\n    \n    let localLegendAxis2 = d3.axisBottom()\n      .scale(localLegendScale2)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range2 / 2, 0, range2 / 2]);\n\n    let localLegend1 = legends.append('g')\n      .attr('class', 'legend local-legend')\n      .attr('id', `local-legend-${i}-1`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n    localLegend1.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(localLegendAxis1)\n\n    localLegend1.append('rect')\n      .attr('width', 2 * nodeLength + hSpaceAroundGap)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n\n    let localLegend2 = legends.append('g')\n      .attr('class', 'legend local-legend')\n      .attr('id', `local-legend-${i}-2`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n      .attr('transform', `translate(${nodeCoordinate[start + 2][0].x}, ${0})`);\n\n    localLegend2.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(localLegendAxis2)\n\n    localLegend2.append('rect')\n      .attr('width', 3 * nodeLength + 2 * hSpaceAroundGap)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n  }\n\n  // Add module legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.module[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range / 2, range / 2]);\n\n    let moduleLegendAxis = d3.axisBottom()\n      .scale(moduleLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n    let moduleLegend = legends.append('g')\n      .attr('class', 'legend module-legend')\n      .attr('id', `module-legend-${i}`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'module')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n    \n    moduleLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(moduleLegendAxis)\n\n    moduleLegend.append('rect')\n      .attr('width', 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n  }\n\n  // Add global legends\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n    .domain([-range / 2, range / 2]);\n\n  let globalLegendAxis = d3.axisBottom()\n    .scale(globalLegendScale)\n    .tickFormat(d3.format('.2f'))\n    .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n  let globalLegend = legends.append('g')\n    .attr('class', 'legend global-legend')\n    .attr('id', 'global-legend')\n    .classed('hidden', !detailedMode || selectedScaleLevel !== 'global')\n    .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n  globalLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(globalLegendAxis)\n\n  globalLegend.append('rect')\n    .attr('width', 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio)\n    .attr('height', legendHeight)\n    .style('fill', 'url(#convGradient)');\n\n\n  // Add output legend\n  let outputRectScale = d3.scaleLinear()\n        .domain(cnnLayerRanges.output)\n        .range([0, nodeLength - 1.2]);\n\n  let outputLegendAxis = d3.axisBottom()\n    .scale(outputRectScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, cnnLayerRanges.output[1]])\n  \n  let outputLegend = legends.append('g')\n    .attr('class', 'legend output-legend')\n    .attr('id', 'output-legend')\n    .classed('hidden', !detailedMode)\n    .attr('transform', `translate(${nodeCoordinate[11][0].x}, ${0})`);\n  \n  outputLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(outputLegendAxis);\n\n  outputLegend.append('rect')\n    .attr('width', nodeLength)\n    .attr('height', legendHeight)\n    .style('fill', 'gray');\n  \n  // Add input image legend\n  let inputScale = d3.scaleLinear()\n    .range([0, nodeLength - 1.2])\n    .domain([0, 1]);\n\n  let inputLegendAxis = d3.axisBottom()\n    .scale(inputScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, 0.5, 1]);\n\n  let inputLegend = legends.append('g')\n    .attr('class', 'legend input-legend')\n    .classed('hidden', !detailedMode)\n    .attr('transform', `translate(${nodeCoordinate[0][0].x}, ${0})`);\n  \n  inputLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(inputLegendAxis);\n\n  inputLegend.append('rect')\n    .attr('x', 0.3)\n    .attr('width', nodeLength - 0.3)\n    .attr('height', legendHeight)\n    .attr('transform', `rotate(180, ${nodeLength/2}, ${legendHeight/2})`)\n    .style('stroke', 'rgb(20, 20, 20)')\n    .style('stroke-width', 0.3)\n    .style('fill', 'url(#inputGradient)');\n}\n\n/**\n * Draw the overview\n * @param {number} width Width of the cnn group\n * @param {number} height Height of the cnn group\n * @param {object} cnnGroup Group to appen cnn elements to\n * @param {function} nodeMouseOverHandler Callback func for mouseOver\n * @param {function} nodeMouseLeaveHandler Callback func for mouseLeave\n * @param {function} nodeClickHandler Callback func for click\n */\nexport const drawCNN = (width, height, cnnGroup, nodeMouseOverHandler,\n  nodeMouseLeaveHandler, nodeClickHandler) => {\n  // Draw the CNN\n  // There are 8 short gaps and 5 long gaps\n  hSpaceAroundGap = (width - nodeLength * numLayers) / (8 + 5 * gapRatio);\n  hSpaceAroundGapStore.set(hSpaceAroundGap);\n  let leftAccuumulatedSpace = 0;\n\n  // Iterate through the cnn to draw nodes in each layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let isOutput = curLayer[0].layerName === 'output';\n\n    nodeCoordinate.push([]);\n\n    // Compute the x coordinate of the whole layer\n    // Output layer and conv layer has long gaps\n    if (isOutput || curLayer[0].type === 'conv') {\n      leftAccuumulatedSpace += hSpaceAroundGap * gapRatio;\n    } else {\n      leftAccuumulatedSpace += hSpaceAroundGap;\n    }\n\n    // All nodes share the same x coordiante (left in div style)\n    let left = leftAccuumulatedSpace;\n\n    let layerGroup = cnnGroup.append('g')\n      .attr('class', 'cnn-layer-group')\n      .attr('id', `cnn-layer-group-${l}`);\n\n    vSpaceAroundGap = (height - nodeLength * curLayer.length) /\n      (curLayer.length + 1);\n    vSpaceAroundGapStore.set(vSpaceAroundGap);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n      .data(curLayer, d => d.index)\n      .enter()\n      .append('g')\n      .attr('class', 'node-group')\n      .style('cursor', 'pointer')\n      .style('pointer-events', 'all')\n      .on('click', nodeClickHandler)\n      .on('mouseover', nodeMouseOverHandler)\n      .on('mouseleave', nodeMouseLeaveHandler)\n      .classed('node-output', isOutput)\n      .attr('id', (d, i) => {\n        // Compute the coordinate\n        // Not using transform on the group object because of a decade old\n        // bug on webkit (safari)\n        // https://bugs.webkit.org/show_bug.cgi?id=23113\n        let top = i * nodeLength + (i + 1) * vSpaceAroundGap;\n        top += svgPaddings.top;\n        nodeCoordinate[l].push({x: left, y: top});\n        return `layer-${l}-node-${i}`\n      });\n    \n    // Overwrite the mouseover and mouseleave function for output nodes to show\n    // hover info in the UI\n    layerGroup.selectAll('g.node-output')\n      .on('mouseover', (d, i, g) => {\n        nodeMouseOverHandler(d, i, g);\n        hoverInfoStore.set( {show: true, text: `Output value: ${formater(d.output)}`} );\n      })\n      .on('mouseleave', (d, i, g) => {\n        nodeMouseLeaveHandler(d, i, g);\n        hoverInfoStore.set( {show: false, text: `Output value: ${formater(d.output)}`} );\n      });\n    \n    if (curLayer[0].layerName !== 'output') {\n      // Embed raster image in these groups\n      nodeGroups.append('image')\n        .attr('class', 'node-image')\n        .attr('width', nodeLength)\n        .attr('height', nodeLength)\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y);\n      \n      // Add a rectangle to show the border\n      nodeGroups.append('rect')\n        .attr('class', 'bounding')\n        .attr('width', nodeLength)\n        .attr('height', nodeLength)\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y)\n        .style('fill', 'none')\n        .style('stroke', 'gray')\n        .style('stroke-width', 1)\n        .classed('hidden', true);\n    } else {\n      nodeGroups.append('rect')\n        .attr('class', 'output-rect')\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2 + 8)\n        .attr('height', nodeLength / 4)\n        .attr('width', 0)\n        .style('fill', 'gray');\n      nodeGroups.append('text')\n        .attr('class', 'output-text')\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2)\n        .style('dominant-baseline', 'middle')\n        .style('font-size', '11px')\n        .style('fill', 'black')\n        .style('opacity', 0.5)\n        .text((d, i) => classLists[i]);\n      \n      // Add annotation text to tell readers the exact output probability\n      // nodeGroups.append('text')\n      //   .attr('class', 'annotation-text')\n      //   .attr('id', (d, i) => `output-prob-${i}`)\n      //   .attr('x', left)\n      //   .attr('y', (d, i) => nodeCoordinate[l][i].y + 10)\n      //   .text(d => `(${d3.format('.4f')(d.output)})`);\n    }\n    leftAccuumulatedSpace += nodeLength;\n  }\n\n  // Share the nodeCoordinate\n  nodeCoordinateStore.set(nodeCoordinate)\n\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n        .domain(cnnLayerRanges.output)\n        .range([0, nodeLength]);\n\n  // Draw the canvas\n  for (let l = 0; l < cnn.length; l++) {\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    svg.select(`g#cnn-layer-group-${l}`)\n      .selectAll('image.node-image')\n      .each((d, i, g) => drawOutput(d, i, g, range));\n  }\n\n  svg.selectAll('g.node-output').each(\n    (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\n  );\n\n  // Add layer label\n  let layerNames = cnn.map(d => {\n    if (d[0].layerName === 'output') {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d.length})`\n      }\n    } else {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d[0].output.length}, ${d[0].output.length}, ${d.length})`\n      }\n    }\n  });\n\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n  \n  let detailedLabels = svg.selectAll('g.layer-detailed-label')\n    .data(layerNames)\n    .enter()\n    .append('g')\n    .attr('class', 'layer-detailed-label')\n    .attr('id', (d, i) => `layer-detailed-label-${i}`)\n    .classed('hidden', !detailedMode)\n    .attr('transform', (d, i) => {\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n    .on('click', (d) => {\n      let target = '';\n      if (d.name.includes('conv')) { target = 'convolution' }\n      if (d.name.includes('relu')) { target = 'relu' }\n      if (d.name.includes('max_pool')) { target = 'pooling'}\n      if (d.name.includes('input')) { target = 'input'}\n\n      // Scroll to a article element\n      let anchor = document.querySelector(`#article-${target}`);\n      scroll.animateScroll(anchor);\n    });\n  \n  detailedLabels.append('title')\n    .text('Move to article section');\n    \n  detailedLabels.append('text')\n    .style('opacity', 0.7)\n    .style('dominant-baseline', 'middle')\n    .append('tspan')\n    .style('font-size', '12px')\n    .text(d => d.name)\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(d => d.dimension);\n  \n  let labels = svg.selectAll('g.layer-label')\n    .data(layerNames)\n    .enter()\n    .append('g')\n    .attr('class', 'layer-label')\n    .attr('id', (d, i) => `layer-label-${i}`)\n    .classed('hidden', detailedMode)\n    .attr('transform', (d, i) => {\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n    .on('click', (d) => {\n      let target = '';\n      if (d.name.includes('conv')) { target = 'convolution' }\n      if (d.name.includes('relu')) { target = 'relu' }\n      if (d.name.includes('max_pool')) { target = 'pooling'}\n      if (d.name.includes('input')) { target = 'input'}\n\n      // Scroll to a article element\n      let anchor = document.querySelector(`#article-${target}`);\n      scroll.animateScroll(anchor);\n    });\n  \n  labels.append('title')\n    .text('Move to article section');\n  \n  labels.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .text(d => {\n      if (d.name.includes('conv')) { return 'conv' }\n      if (d.name.includes('relu')) { return 'relu' }\n      if (d.name.includes('max_pool')) { return 'max_pool'}\n      return d.name\n    });\n\n  // Add layer color scale legends\n  getLegendGradient(svg, layerColorScales.conv, 'convGradient');\n  getLegendGradient(svg, layerColorScales.input[0], 'inputGradient');\n\n  let legendHeight = 5;\n  let legends = svg.append('g')\n      .attr('class', 'color-legend')\n      .attr('transform', `translate(${0}, ${\n        svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n        nodeLength * 10\n      })`);\n  \n  drawLegends(legends, legendHeight);\n\n  // Add edges between nodes\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let linkData = getLinkData(nodeCoordinate, cnn);\n\n  let edgeGroup = cnnGroup.append('g')\n    .attr('class', 'edge-group');\n  \n  edgeGroup.selectAll('path.edge')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d =>\n      `edge edge-${d.targetLayerIndex} edge-${d.targetLayerIndex}-${d.targetNodeIndex}`)\n    .attr('id', d => \n      `edge-${d.targetLayerIndex}-${d.targetNodeIndex}-${d.sourceNodeIndex}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', edgeStrokeWidth)\n    .style('opacity', edgeOpacity)\n    .style('stroke', edgeInitColor);\n\n  // Add input channel annotations\n  let inputAnnotation = cnnGroup.append('g')\n    .attr('class', 'input-annotation');\n\n  let redChannel = inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][0].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][0].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  redChannel.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#C95E67')\n    .text('Red');\n  \n  redChannel.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' channel');\n\n  inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][1].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][1].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle')\n    .style('fill', '#3DB665')\n    .text('Green');\n\n  inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][2].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][2].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle')\n    .style('fill', '#3F7FBC')\n    .text('Blue');\n}\n\n/**\n * Update canvas values when user changes input image\n */\nexport const updateCNN = () => {\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n      .domain(cnnLayerRanges.output)\n      .range([0, nodeLength]);\n\n  // Rebind the cnn data to layer groups layer by layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    let layerGroup = svg.select(`g#cnn-layer-group-${l}`);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n      .data(curLayer);\n\n    if (l < cnn.length - 1) {\n      // Redraw the canvas and output node\n      nodeGroups.transition('disappear')\n        .duration(300)\n        .ease(d3.easeCubicOut)\n        .style('opacity', 0)\n        .on('end', function() {\n          d3.select(this)\n            .select('image.node-image')\n            .each((d, i, g) => drawOutput(d, i, g, range));\n          d3.select(this).transition('appear')\n            .duration(700)\n            .ease(d3.easeCubicIn)\n            .style('opacity', 1);\n        });\n    } else {\n      nodeGroups.each(\n        (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\n      );\n    }\n  }\n\n  // Update the color scale legend\n  // Local legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n      .range([0, 2 * nodeLength + hSpaceAroundGap])\n      .domain([-range1 / 2, range1 / 2]);\n    \n    let localLegendScale2 = d3.scaleLinear()\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap])\n      .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n      .scale(localLegendScale1)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range1 / 2, 0, range1 / 2]);\n    \n    let localLegendAxis2 = d3.axisBottom()\n      .scale(localLegendScale2)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range2 / 2, 0, range2 / 2]);\n    \n    svg.select(`g#local-legend-${i}-1`).select('g').call(localLegendAxis1);\n    svg.select(`g#local-legend-${i}-2`).select('g').call(localLegendAxis2);\n  }\n\n  // Module legend\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.local[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range, range]);\n\n    let moduleLegendAxis = d3.axisBottom()\n      .scale(moduleLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range, -(range / 2), 0, range/2, range]);\n    \n    svg.select(`g#module-legend-${i}`).select('g').call(moduleLegendAxis);\n  }\n\n  // Global legend\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n    .domain([-range, range]);\n\n  let globalLegendAxis = d3.axisBottom()\n    .scale(globalLegendScale)\n    .tickFormat(d3.format('.2f'))\n    .tickValues([-range, -(range / 2), 0, range/2, range]);\n\n  svg.select(`g#global-legend`).select('g').call(globalLegendAxis);\n\n  // Output legend\n  let outputLegendAxis = d3.axisBottom()\n    .scale(outputRectScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, cnnLayerRanges.output[1]]);\n  \n  svg.select('g#output-legend').select('g').call(outputLegendAxis);\n}\n\n/**\n * Update the ranges for current CNN layers\n */\nexport const updateCNNLayerRanges = () => {\n  // Iterate through all nodes to find a output ranges for each layer\n  let cnnLayerRangesLocal = [1];\n  let curRange = undefined;\n\n  // Also track the min/max of each layer (avoid computing during intermediate\n  // layer)\n  cnnLayerMinMax = [];\n\n  for (let l = 0; l < cnn.length - 1; l++) {\n    let curLayer = cnn[l];\n\n    // Compute the min max\n    let outputExtents = curLayer.map(l => getExtent(l.output));\n    let aggregatedExtent = outputExtents.reduce((acc, cur) => {\n      return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n    })\n    cnnLayerMinMax.push({min: aggregatedExtent[0], max: aggregatedExtent[1]});\n\n    // conv layer refreshes curRange counting\n    if (curLayer[0].type === 'conv' || curLayer[0].type === 'fc') {\n      aggregatedExtent = aggregatedExtent.map(Math.abs);\n      // Plus 0.1 to offset the rounding error (avoid black color)\n      curRange = 2 * (0.1 + \n        Math.round(Math.max(...aggregatedExtent) * 1000) / 1000);\n    }\n\n    if (curRange !== undefined){\n      cnnLayerRangesLocal.push(curRange);\n    }\n  }\n\n  // Finally, add the output layer range\n  cnnLayerRangesLocal.push(1);\n  cnnLayerMinMax.push({min: 0, max: 1});\n\n  // Support different levels of scales (1) lcoal, (2) component, (3) global\n  let cnnLayerRangesComponent = [1];\n  let numOfComponent = (numLayers - 2) / 5;\n  for (let i = 0; i < numOfComponent; i++) {\n    let curArray = cnnLayerRangesLocal.slice(1 + 5 * i, 1 + 5 * i + 5);\n    let maxRange = Math.max(...curArray);\n    for (let j = 0; j < 5; j++) {\n      cnnLayerRangesComponent.push(maxRange);\n    }\n  }\n  cnnLayerRangesComponent.push(1);\n\n  let cnnLayerRangesGlobal = [1];\n  let maxRange = Math.max(...cnnLayerRangesLocal.slice(1,\n    cnnLayerRangesLocal.length - 1));\n  for (let i = 0; i < numLayers - 2; i++) {\n    cnnLayerRangesGlobal.push(maxRange);\n  }\n  cnnLayerRangesGlobal.push(1);\n\n  // Update the ranges dictionary\n  cnnLayerRanges.local = cnnLayerRangesLocal;\n  cnnLayerRanges.module = cnnLayerRangesComponent;\n  cnnLayerRanges.global = cnnLayerRangesGlobal;\n  cnnLayerRanges.output = [0, d3.max(cnn[cnn.length - 1].map(d => d.output))];\n\n  cnnLayerRangesStore.set(cnnLayerRanges);\n  cnnLayerMinMaxStore.set(cnnLayerMinMax);\n}","/* global d3 */\n\nimport { svgStore, vSpaceAroundGapStore } from '../stores.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst svgPaddings = overviewConfig.svgPaddings;\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\n/**\n * Move one layer horizontally\n * @param {object} arg Multiple arguments {\n *   layerIndex: current layer index\n *   targetX: destination x\n *   disable: make this layer unresponsible\n *   delay: animation delay\n *   opacity: change the current layer's opacity\n *   specialIndex: avoid manipulating `specialIndex`th node\n *   onEndFunc: call this function when animation finishes\n *   transitionName: animation ID\n * }\n */\nexport const moveLayerX = (arg) => {\n  let layerIndex = arg.layerIndex;\n  let targetX = arg.targetX;\n  let disable = arg.disable;\n  let delay = arg.delay;\n  let opacity = arg.opacity;\n  let specialIndex = arg.specialIndex;\n  let onEndFunc = arg.onEndFunc;\n  let transitionName = arg.transitionName === undefined ? 'move' : arg.transitionName;\n  let duration = arg.duration === undefined ? 500 : arg.duration;\n\n  // Move the selected layer\n  let curLayer = svg.select(`g#cnn-layer-group-${layerIndex}`);\n  curLayer.selectAll('g.node-group').each((d, i, g) => {\n    d3.select(g[i])\n      .style('cursor', disable && i !== specialIndex ? 'default' : 'pointer')\n      .style('pointer-events', disable && i !== specialIndex ? 'none' : 'all')\n      .select('image')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    if (opacity !== undefined && i !== specialIndex) {\n      d3.select(g[i])\n        .select('image')\n        .style('opacity', opacity);\n    }\n  });\n  \n  // Also move the layer labels\n  svg.selectAll(`g#layer-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n\n  svg.selectAll(`g#layer-detailed-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n}\n\n/**\n * Append a gradient definition to `group`\n * @param {string} gradientID CSS ID for the gradient def\n * @param {[{offset: number, color: string, opacity: number}]} stops Gradient stops\n * @param {element} group Element to append def to\n */\nexport const addOverlayGradient = (gradientID, stops, group) => {\n  if (group === undefined) {\n    group = svg;\n  }\n\n  // Create a gradient\n  let defs = group.append(\"defs\")\n    .attr('class', 'overlay-gradient');\n\n  let gradient = defs.append(\"linearGradient\")\n    .attr(\"id\", gradientID)\n    .attr(\"x1\", \"0%\")\n    .attr(\"x2\", \"100%\")\n    .attr(\"y1\", \"100%\")\n    .attr(\"y2\", \"100%\");\n  \n  stops.forEach(s => {\n    gradient.append('stop')\n      .attr('offset', s.offset)\n      .attr('stop-color', s.color)\n      .attr('stop-opacity', s.opacity);\n  })\n}\n\n/**\n * Draw the legend for intermediate layer\n * @param {object} arg \n * {\n *   legendHeight: height of the legend rectangle\n *   curLayerIndex: the index of selected layer\n *   range: colormap range\n *   group: group to append the legend\n *   minMax: {min: min value, max: max value}\n *   width: width of the legend\n *   x: x position of the legend\n *   y: y position of the legend\n *   isInput: if the legend is for the input layer (special handle black to\n *      white color scale)\n *   colorScale: d3 color scale\n *   gradientAppendingName: name of the appending gradient\n *   gradientGap: gap to make the color lighter\n * }\n */\nexport const drawIntermediateLayerLegend = (arg) => {\n  let legendHeight = arg.legendHeight,\n    curLayerIndex = arg.curLayerIndex,\n    range = arg.range,\n    group = arg.group,\n    minMax = arg.minMax,\n    width = arg.width,\n    x = arg.x,\n    y = arg.y,\n    isInput = arg.isInput,\n    colorScale = arg.colorScale,\n    gradientAppendingName = arg.gradientAppendingName,\n    gradientGap = arg.gradientGap;\n  \n  if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n  if (gradientGap === undefined) { gradientGap = 0; }\n  \n  // Add a legend color gradient\n  let gradientName = 'url(#inputGradient)';\n  let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n  if (!isInput) {\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    if (gradientAppendingName === undefined) {\n      addOverlayGradient('intermediate-legend-gradient', stops, group);\n      gradientName = 'url(#intermediate-legend-gradient)';\n    } else {\n      addOverlayGradient(`${gradientAppendingName}`, stops, group);\n      gradientName = `url(#${gradientAppendingName})`;\n    }\n  }\n\n  let legendScale = d3.scaleLinear()\n    .range([0, width - 1.2])\n    .domain(isInput ? [0, range] : [minMax.min, minMax.max]);\n\n  let legendAxis = d3.axisBottom()\n    .scale(legendScale)\n    .tickFormat(d3.format(isInput ? 'd' : '.2f'))\n    .tickValues(isInput ? [0, range] : [minMax.min, 0, minMax.max]);\n  \n  let intermediateLegend = group.append('g')\n    .attr('class', `intermediate-legend-${curLayerIndex - 1}`)\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  let legendGroup = intermediateLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(legendAxis);\n  \n  legendGroup.selectAll('text')\n    .style('font-size', '9px')\n    .style('fill', intermediateColor);\n  \n  legendGroup.selectAll('path, line')\n    .style('stroke', intermediateColor);\n\n  intermediateLegend.append('rect')\n    .attr('width', width)\n    .attr('height', legendHeight)\n    .attr('transform', `rotate(${isInput ? 180 : 0},\n      ${width / 2}, ${legendHeight / 2})`)\n    .style('fill', gradientName);\n}\n\n/**\n * Draw an very neat arrow!\n * @param {object} arg \n * {\n *   group: element to append this arrow to\n *   sx: source x\n *   sy: source y\n *   tx: target x\n *   ty: target y\n *   dr: radius of curve (I'm using a circle)\n *   hFlip: the direction to choose the circle (there are always two ways)\n * }\n */\nexport const drawArrow = (arg) => {\n  let group = arg.group,\n    sx = arg.sx,\n    sy = arg.sy,\n    tx = arg.tx,\n    ty = arg.ty,\n    dr = arg.dr,\n    hFlip = arg.hFlip,\n    marker = arg.marker === undefined ? 'marker' : arg.marker;\n\n  /* Cool graphics trick -> merge translate and scale together\n  translateX = (1 - scaleX) * tx,\n  translateY = (1 - scaleY) * ty;\n  */\n  \n  let arrow = group.append('g')\n    .attr('class', 'arrow-group');\n\n  arrow.append('path')\n    .attr(\"d\", `M${sx},${sy}A${dr},${dr} 0 0,${hFlip ? 0 : 1} ${tx},${ty}`)\n    .attr('marker-end', `url(#${marker})`)\n    .style('stroke', 'gray')\n    .style('fill', 'none');\n}\n","/* global d3 */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  needRedrawStore, cnnLayerMinMaxStore, shouldIntermediateAnimateStore,\n  hoverInfoStore, detailedModeStore, intermediateLayerPositionStore\n} from '../stores.js';\nimport {\n  getExtent, getOutputKnot, getInputKnot, gappedColorScale\n} from './draw-utils.js';\nimport {\n  drawOutput\n} from './overview-draw.js';\nimport {\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { singleConv } from '../utils/cnn.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\nconst numLayers = overviewConfig.numLayers;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst kernelRectLength = overviewConfig.kernelRectLength;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst overlayRectOffset = overviewConfig.overlayRectOffset;\nconst formater = d3.format('.4f');\nlet isEndOfAnimation = false;\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet needRedraw = [undefined, undefined];\nneedRedrawStore.subscribe( value => {needRedraw = value;} )\n\nlet shouldIntermediateAnimate = undefined;\nshouldIntermediateAnimateStore.subscribe(value => {\n  shouldIntermediateAnimate = value;\n})\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet intermediateLayerPosition = undefined;\nintermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n\n// let curRightX = 0;\n\n/**\n * Draw the intermediate layer activation heatmaps\n * @param {element} image Neuron heatmap image\n * @param {number} range Colormap range\n * @param {function} colorScale Colormap\n * @param {number} length Image length\n * @param {[[number]]} dataMatrix Heatmap matrix\n */\nconst drawIntermidiateImage = (image, range, colorScale, length,\n  dataMatrix) => {\n  // Set up a buffer convas in order to resize image\n  let imageLength = length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n    let color = d3.rgb(colorScale((dataMatrix[row][column] + range / 2) / range));\n\n    imageSingleArray[i] = color.r;\n    imageSingleArray[i + 1] = color.g;\n    imageSingleArray[i + 2] = color.b;\n    imageSingleArray[i + 3] = 255;\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  image.attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create a node group for the intermediate layer\n * @param {number} curLayerIndex Intermediate layer index\n * @param {number} selectedI Clicked node index\n * @param {element} groupLayer Group element\n * @param {number} x Node's x\n * @param {number} y Node's y\n * @param {number} nodeIndex Node's index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n * @param {bool} interaction Whether support interaction\n */\nconst createIntermediateNode = (curLayerIndex, selectedI, groupLayer, x, y,\n  nodeIndex, stride, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked, interaction) => {\n  let newNode = groupLayer.append('g')\n    .datum(cnn[curLayerIndex - 1][nodeIndex])\n    .attr('class', 'intermediate-node')\n    .attr('cursor', interaction ? 'pointer': 'default')\n    .attr('pointer-events', interaction ? 'all': 'none')\n    .attr('node-index', nodeIndex)\n    .on('mouseover', intermediateNodeMouseOverHandler)\n    .on('mouseleave', intermediateNodeMouseLeaveHandler)\n    .on('click', (d, g, i) => intermediateNodeClicked(d, g, i, selectedI,\n      curLayerIndex));\n  \n  newNode.append('image')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y);\n\n  // Overlay the image with a mask of many small rectangles\n  let strideTime = Math.floor(nodeLength / stride);\n  let overlayGroup = newNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      overlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Add a rectangle to show the border\n  newNode.append('rect')\n    .attr('class', 'bounding')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor)\n    .style('stroke-width', 1);\n  \n  return newNode;\n}\n\nconst startOutputAnimation = (kernelGroup, tickTime1D, stride, delay,\n  curLayerIndex) => {\n  const slidingAnimation = () => {\n    let originX = +kernelGroup.attr('data-origin-x');\n    let originY = +kernelGroup.attr('data-origin-y');\n    let oldTick = +kernelGroup.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n      kernelGroup.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`)\n      .on('end', () => {\n        if (newTick === 0) {\n          /* Uncomment to wrap the sliding\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n          */\n\n          // Stop the animation\n          // Be careful with animation racing so call this function here instead\n          // of under selectALL\n          if (!isEndOfAnimation) {\n            animationButtonClicked(curLayerIndex);\n          }\n        }\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst startIntermediateAnimation = (kernelGroupInput, kernelGroupResult,\n  tickTime1D, stride) => {\n  let delay = 200;\n  const slidingAnimation = () => {\n    let originX = +kernelGroupInput.attr('data-origin-x');\n    let originY = +kernelGroupInput.attr('data-origin-y');\n    let originXResult = +kernelGroupResult.attr('data-origin-x');\n    let oldTick = +kernelGroupInput.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let xResult = originXResult + (oldTick % tickTime1D) * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n    kernelGroupInput.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`);\n\n    kernelGroupResult.attr('data-tick', newTick)\n      .transition('window-sliding-result')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${xResult}, ${y})`)\n      .on('end', () => {\n        /* Uncomment to wrap the sliding\n        if (newTick === 0) {\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n        }\n        */\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst animationButtonClicked = (curLayerIndex) => {\n  if (d3.event !== null) {\n    d3.event.stopPropagation();\n  }\n  \n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n  let stride = kernelRectLength * 3; \n\n  if (isEndOfAnimation) {\n    // Start the animation\n    shouldIntermediateAnimateStore.set(true);\n\n    // Show kernel\n    svg.selectAll('.kernel-clone')\n      .transition()\n      .duration(300)\n      .style('opacity', 1)\n\n    // Restore the mask\n    svg.selectAll(`rect.mask-overlay`)\n      .transition()\n      .duration(300)\n      .style('opacity', 1);\n\n    // Start the intermediate animation\n    for (let i  = 0; i < nodeCoordinate[curLayerIndex - 1].length; i++) {\n      startIntermediateAnimation(d3.select(`.kernel-input-${i}`),\n        d3.select(`.kernel-result-${i}`), tickTime1D, stride);\n    }\n\n    // Start the output animation\n    startOutputAnimation(d3.select('.kernel-output'),\n      tickTime1D, stride, delay, curLayerIndex);\n    \n    // Change the flow edge style\n    svg.selectAll('path.flow-edge')\n      .attr('stroke-dasharray', '4 2')\n      .attr('stroke-dashoffset', 0)\n      .each((d, i, g) => animateEdge(d, i, g, 0 - 1000));\n\n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/copycat-cnn-explainer/assets/img/fast_forward.svg');\n    \n    isEndOfAnimation = false;\n\n  } else {\n    // End the animation\n    shouldIntermediateAnimateStore.set(false);\n    \n    // Show all intermediate and output results\n    svg.selectAll(`rect.mask-overlay`)\n      .transition('skip')\n      .duration(600)\n      .style('opacity', 0);\n    \n    // Move kernel to the beginning to prepare for the next animation\n    let kernelClones = svg.selectAll('.kernel-clone');\n    kernelClones.attr('data-tick', 0)\n      .transition('skip')\n      .duration(300)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        let element = d3.select(g[i]);\n        let originX = +element.attr('data-origin-x');\n        let originY = +element.attr('data-origin-y');\n        element.attr('transform', `translate(${originX}, ${originY})`);\n      });\n    \n    // Change flow edge style\n    svg.selectAll('path.flow-edge')\n      .interrupt()\n      .attr('stroke-dasharray', '0 0');\n    \n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/copycat-cnn-explainer/assets/img/redo.svg');\n    \n    isEndOfAnimation = true;\n  }\n}\n\nconst animateEdge = (d, i, g, dashoffset) => {\n  let curPath = d3.select(g[i]);\n  curPath.transition()\n    .duration(60000)\n    .ease(d3.easeLinear)\n    .attr('stroke-dashoffset', dashoffset)\n    .on('end', (d, i, g) => {\n      if (shouldIntermediateAnimate) {\n        animateEdge(d, i, g, dashoffset - 2000);\n      }\n    });\n}\n\n/**\n * Draw one intermediate layer\n * @param {number} curLayerIndex \n * @param {number} leftX X value of intermediate layer left border\n * @param {number} rightX X value of intermediate layer right border\n * @param {number} rightStart X value of right component starting anchor\n * @param {number} intermediateGap The inner gap\n * @param {number} d Clicked node bounded data\n * @param {number} i Clicked node index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst drawIntermediateLayer = (curLayerIndex, leftX, rightX, rightStart,\n  intermediateGap, d, i, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  \n  // curRightX = rightStart;\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'intermediate-layer')\n    .style('opacity', 0);\n  \n  // Recovert the animation counter\n  isEndOfAnimation = false;\n  \n  // Tried to add a rectangle to block the intermediate because of webkit's\n  // horrible support (decade old bug) for foreignObject. It doesnt work either.\n  // https://bugs.webkit.org/show_bug.cgi?id=23113\n  // (1). ForeignObject's inside position is wrong on webkit\n  // (2). 'opacity' of ForeignObject doesn't work on webkit\n  // (3). ForeignObject always show up at the front regardless the svg\n  //      stacking order on webkit\n\n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + nodeLength + intermediateGap * 1.5;\n\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let colorScale = layerColorScales[d.type];\n  let intermediateMinMax = [];\n  \n  // Copy the previsious layer to construct foreignObject placeholder\n  // Also add edges from/to the intermediate layer in this loop\n  let linkData = [];\n\n  // Accumulate the intermediate sum\n  // let itnermediateSumMatrix = init2DArray(d.output.length,\n  //  d.output.length, 0);\n\n  // Compute the min max of all kernel weights in the intermediate layer\n  let kernelExtents = d.inputLinks.map(link => getExtent(link.weight));\n  let kernelExtent = kernelExtents.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let kernelRange = 2 * (Math.round(\n    Math.max(...kernelExtent.map(Math.abs)) * 1000) / 1000);\n  let kernelColorGap = 0.2;\n\n  // Compute stride for the kernel animation\n  let stride = kernelRectLength * 3; \n\n  // Also add the overlay mask on the output node\n  let outputY = nodeCoordinate[curLayerIndex][i].y;\n  let curNode = svg.select(`#layer-${curLayerIndex}-node-${i}`);\n  let outputOverlayGroup = curNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  let strideTime = Math.floor(nodeLength / stride);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      outputOverlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Make sure the bounding box is on top of other things\n  curNode.select('rect.bounding').raise();\n\n  // Add sliding kernel for the output node\n  let kernelGroup = intermediateLayer.append('g')\n    .attr('class', `kernel kernel-output kernel-clone`)\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  kernelGroup.append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', kernelRectLength * 3)\n    .attr('height', kernelRectLength * 3)\n    .attr('fill', 'none')\n    .attr('stroke', intermediateColor);\n  \n  kernelGroup.attr('data-tick', 0)\n    .attr('data-origin-x', rightX)\n    .attr('data-origin-y', outputY);\n\n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n\n  startOutputAnimation(kernelGroup, tickTime1D, stride, delay, curLayerIndex);\n\n  // First intermediate layer\n  nodeCoordinate[curLayerIndex - 1].forEach((n, ni) => {\n\n    // Compute the intermediate value\n    let inputMatrix = cnn[curLayerIndex - 1][ni].output;\n    let kernelMatrix = cnn[curLayerIndex][i].inputLinks[ni].weight;\n    let interMatrix = singleConv(inputMatrix, kernelMatrix);\n\n    // Compute the intermediate layer min max\n    intermediateMinMax.push(getExtent(interMatrix));\n\n    // Update the intermediate sum\n    // itnermediateSumMatrix = matrixAdd(itnermediateSumMatrix, interMatrix);\n\n    // Layout the canvas and rect\n    let newNode = createIntermediateNode(curLayerIndex, i, intermediateLayer,\n      intermediateX1, n.y, ni, stride, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked, true);\n    \n    // Draw the image\n    let image = newNode.select('image');\n    drawIntermidiateImage(image, range, colorScale, d.output.length,\n      interMatrix);      \n\n    // Edge: input -> intermediate1\n    linkData.push({\n      source: getOutputKnot({x: leftX, y: n.y}),\n      target: getInputKnot({x: intermediateX1, y: n.y}),\n      name: `input-${ni}-inter1-${ni}`\n    });\n\n    // Edge: intermediate1 -> intermediate2-1\n    linkData.push({\n      source: getOutputKnot({x: intermediateX1, y: n.y}),\n      target: getInputKnot({x: intermediateX2,\n        y: nodeCoordinate[curLayerIndex][i].y}),\n      name: `inter1-${ni}-inter2-1`\n    });\n\n    // Create a small kernel illustration\n    // Here we minus 2 because of no padding\n    // let tickTime1D = nodeLength / (kernelRectLength) - 2;\n    let kernelRectX = leftX - kernelRectLength * 3 * 2;\n    let kernelGroup = intermediateLayer.append('g')\n      .attr('class', `kernel kernel-${ni}`)\n      .attr('transform', `translate(${kernelRectX}, ${n.y})`);\n\n    let weightText = 'Kernel weights: [';\n    let f2 = d3.format('.2f');\n    for (let r = 0; r < kernelMatrix.length; r++) {\n      for (let c = 0; c < kernelMatrix[0].length; c++) {\n        kernelGroup.append('rect')\n          .attr('class', 'kernel')\n          .attr('x', kernelRectLength * c)\n          .attr('y', kernelRectLength * r)\n          .attr('width', kernelRectLength)\n          .attr('height', kernelRectLength)\n          .attr('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n            kernelMatrix[r][c], kernelColorGap));\n\n        let sep = '';\n        if (c === 0 && r == 0) { sep = ''; }\n        else if (c === 0) { sep = '; '; }\n        else { sep = ', '; }\n        weightText = weightText.concat(sep, `${f2(kernelMatrix[r][c])}`);\n      }\n    }\n    weightText = weightText.concat(']');\n\n    kernelGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', kernelRectLength * 3)\n      .attr('height', kernelRectLength * 3)\n      .attr('fill', 'none')\n      .attr('stroke', intermediateColor);\n    \n    kernelGroup.style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => {\n        hoverInfoStore.set( {show: true, text: weightText} );\n      })\n      .on('mouseleave', () => {\n        hoverInfoStore.set( {show: false, text: weightText} );\n      })\n      .on('click', () => {d3.event.stopPropagation()});\n\n    // Sliding the kernel on the input channel and result channel at the same\n    // time\n    let kernelGroupInput = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-input-${ni}`, true);\n\n    kernelGroupInput.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('opacity', 0.7);\n\n    kernelGroupInput.attr('transform', `translate(${leftX}, ${n.y})`)\n      .attr('data-tick', 0)\n      .attr('data-origin-x', leftX)\n      .attr('data-origin-y', n.y);\n\n    let kernelGroupResult = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-result-${ni}`, true);\n\n    kernelGroupResult.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('fill', 'none');\n\n    kernelGroupResult.attr('transform',\n      `translate(${intermediateX1}, ${n.y})`)\n      .attr('data-origin-x', intermediateX1)\n      .attr('data-origin-y', n.y);\n    \n    startIntermediateAnimation(kernelGroupInput, kernelGroupResult, tickTime1D,\n      stride);\n  });\n\n  // Aggregate the intermediate min max\n  let aggregatedExtent = intermediateMinMax.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let aggregatedMinMax = {min: aggregatedExtent[0], max: aggregatedExtent[1]};\n\n  // Draw the plus operation symbol\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = intermediateLayer.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${intermediateX2 + plusSymbolRadius}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', 2 * plusSymbolRadius)\n    .attr('height', 2 * plusSymbolRadius)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the firrst\n  // conv node\n  if (i == 0) {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n        .attr('cx', 0)\n        .attr('cy', nodeLength / 2 + kernelRectLength)\n        .attr('r', 4)\n        .style('stroke', intermediateColor)\n        .style('cursor', 'crosshair')\n        .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n          d.bias, kernelColorGap))\n        .on('mouseover', () => {\n          hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n        })\n        .on('mouseleave', () => {\n          hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n        });\n\n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius},\n      name: `bias-plus`\n    });\n  } else {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n      .attr('cx', 0)\n      .attr('cy', -nodeLength / 2 - kernelRectLength)\n      .attr('r', 4)\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n        d.bias, kernelColorGap))\n      .on('mouseover', () => {\n        hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n      })\n      .on('mouseleave', () => {\n        hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n      });\n    \n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius},\n      name: `bias-plus`\n    });\n  }\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`\n  });\n  \n  // Output -> next layer\n  linkData.push({\n    source: getOutputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightStart,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `output-next`\n  });\n\n  // Draw the layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('font-weight', 800)\n    .style('opacity', '0.8')\n    .text('intermediate');\n  \n  intermediateLayer.append('g')\n    .attr('class', 'animation-control')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 4;\n      return `translate(${x}, ${y})`;\n    })\n    .on('click', () => animationButtonClicked(curLayerIndex))\n    .append('image')\n    .attr('class', 'animation-control-button')\n    .attr('xlink:href', 'PUBLIC_URL/copycat-cnn-explainer/assets/img/fast_forward.svg')\n    .attr('x', 50)\n    .attr('y', 0)\n    .attr('height', 13)\n    .attr('width', 13);\n\n  // Draw the detailed model layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-detailed-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', !detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('intermediate')\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(`(${cnn[curLayerIndex][0].output.length},\n      ${cnn[curLayerIndex][0].output[0].length},\n      ${cnn[curLayerIndex].length})`);\n\n  // Draw the edges\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let edgeGroup = intermediateLayer.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  let dashoffset = 0;\n\n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .classed('flow-edge', d => d.name !== 'output-next')\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', 1)\n    .style('stroke', intermediateColor);\n\n  edgeGroup.select('#edge-output-next')\n    .style('opacity', 0.1);\n  \n  edgeGroup.selectAll('path.flow-edge')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke-dashoffset', 0)\n    .each((d, i, g) => animateEdge(d, i, g, dashoffset - 1000));\n  \n  return {intermediateLayer: intermediateLayer,\n    intermediateMinMax: aggregatedMinMax,\n    kernelRange: kernelRange,\n    kernelMinMax: {min: kernelExtent[0], max: kernelExtent[1]}};\n}\n\n/**\n * Add an annotation for the kernel and the sliding\n * @param {object} arg \n * {\n *  leftX: X value of the left border of intermedaite layer\n *  group: element group\n *  intermediateGap: the inner gap of intermediate layer\n *  isFirstConv: if this intermediate layer is after the first layer\n *  i: index of the selected node\n * }\n */\nconst drawIntermediateLayerAnnotation = (arg) => {\n  let leftX = arg.leftX,\n    curLayerIndex = arg.curLayerIndex,\n    group = arg.group,\n    intermediateGap = arg.intermediateGap,\n    isFirstConv = arg.isFirstConv,\n    i = arg.i;\n\n  let kernelAnnotation = group.append('g')\n    .attr('class', 'kernel-annotation');\n  \n  kernelAnnotation.append('text')\n    .text('Kernel')\n    .attr('class', 'annotation-text')\n    .attr('x', leftX - 2.5 * kernelRectLength * 3)\n    .attr('y', nodeCoordinate[curLayerIndex - 1][0].y + kernelRectLength * 3)\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'end');\n\n  let sliderX, sliderY, arrowSX, arrowSY, dr;\n  let sliderX2, sliderY2, arrowSX2, arrowSY2, dr2, arrowTX2, arrowTY2;\n  \n  if (isFirstConv) {\n    sliderX = leftX;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3;\n    arrowSX = leftX - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3 + 5;\n    dr = 20;\n\n    sliderX2 = leftX;\n      sliderY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength +\n    kernelRectLength * 3;\n    arrowSX2 = leftX - kernelRectLength * 3;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength + 15;\n    arrowTX2 = leftX - 13;\n    arrowTY2 =  nodeCoordinate[curLayerIndex - 1][1].y + 15;\n    dr2 = 35;\n  } else {\n    sliderX = leftX - 3 * kernelRectLength * 3;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 3;\n    arrowSX = leftX - 2 * kernelRectLength * 3 - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength - 10;\n    dr = 50;\n\n    sliderX2 = leftX - 3 * kernelRectLength * 3;\n    sliderY2 = nodeCoordinate[curLayerIndex - 1][2].y - 3;\n    arrowTX2 = leftX - kernelRectLength * 3 - 4;\n    arrowTY2 = nodeCoordinate[curLayerIndex - 1][2].y + kernelRectLength * 3 + 6;\n    arrowSX2 = leftX - kernelRectLength * 3 - 13;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][2].y + 26;\n    dr2 = 20;\n  }\n\n  let slideText = kernelAnnotation.append('text')\n    .attr('x', sliderX)\n    .attr('y', sliderY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Slide kernel over input channel');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('to get intermediate result');\n\n  // slideText.append('tspan')\n  //   .attr('x', sliderX)\n  //   .attr('dy', '1em')\n  //   .style('dominant-baseline', 'hanging')\n  //   .text('');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.2em')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Click ');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 400)\n    .text('to learn more')\n\n  drawArrow({\n    group: group,\n    tx: leftX - 7,\n    ty: nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2,\n    sx: arrowSX,\n    sy: arrowSY,\n    hFlip: !isFirstConv,\n    dr: dr,\n    marker: 'marker'\n  });\n\n  // Add kernel annotation\n  let slideText2 = kernelAnnotation.append('text')\n    .attr('x', sliderX2)\n    .attr('y', sliderY2)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n\n  slideText2.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Each input chanel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('gets a different kernel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.3em')\n    .style('font-weight', 700)\n    .style('dominant-baseline', 'hanging')\n    .text('Hover over ');\n\n  slideText2.append('tspan')\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('to see value!')\n\n  drawArrow({\n    group: group,\n    tx: arrowTX2,\n    ty: arrowTY2,\n    sx: arrowSX2,\n    sy: arrowSY2,\n    dr: dr2,\n    hFlip: !isFirstConv,\n    marker: 'marker'\n  });\n\n\n  // Add annotation for the sum operation\n  let plusAnnotation = group.append('g')\n    .attr('class', 'plus-annotation');\n  \n  let intermediateX2 = leftX + 2 * nodeLength + 2.5 * intermediateGap;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n      kernelRectLength * 3;\n  \n  // Special case 1: first node\n  if (i === 0) { textX += 30; }\n\n  // Special case 2: last node \n  if (i === 9) {\n    textX = intermediateX2 + plusSymbolRadius - 10;\n    textY -= 2.5 * nodeLength;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'start');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all intermediate');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('results and then add bias');\n  \n  if (i === 9) {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 50,\n      sy: nodeCoordinate[curLayerIndex][i].y - (nodeLength / 2 + kernelRectLength * 2),\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius,\n      dr: 50,\n      hFlip: false,\n      marker: 'marker-alt'\n    });\n  } else {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 35,\n      sy: nodeCoordinate[curLayerIndex][i].y + nodeLength + kernelRectLength * 2,\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius,\n      dr: 30,\n      hFlip: true,\n      marker: 'marker-alt'\n    });\n  }\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  if (i === 0) {\n    biasTextY += nodeLength + 3 * kernelRectLength;\n  } else {\n    biasTextY -= 2 * kernelRectLength + 5;\n  }\n  plusAnnotation.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', i === 0 ? 'hanging' : 'baseline')\n    .text('Bias');\n}\n\n/**\n * Append a filled rectangle under a pair of nodes.\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n * @param {number} leftX X value of the left border of intermediate layer\n * @param {number} intermediateGap Inner gap of this intermediate layer\n * @param {number} padding Padding around the rect\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst addUnderneathRect = (curLayerIndex, i, leftX,\n  intermediateGap, padding, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  // Add underneath rects\n  let underGroup = svg.select('g.underneath');\n\n  for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n    underGroup.append('rect')\n      .attr('class', 'underneath-gateway')\n      .attr('id', `underneath-gateway-${n}`)\n      .attr('x', leftX - padding)\n      .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n      .attr('width', (2 * nodeLength + intermediateGap) + 2 * padding)\n      .attr('height', nodeLength + 2 * padding)\n      .attr('rx', 10)\n      .style('fill', 'rgba(160, 160, 160, 0.2)')\n      .style('opacity', 0);\n    \n    // Register new events for input layer nodes\n    svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n      .style('pointer-events', 'all')\n      .style('cursor', 'pointer')\n      .on('mouseover', intermediateNodeMouseOverHandler)\n      .on('mouseleave', intermediateNodeMouseLeaveHandler)\n      .on('click', (d, ni, g) => intermediateNodeClicked(d, ni, g,\n        i, curLayerIndex));\n      // .on('click', (d, i) => {console.log(i)});\n  }\n  underGroup.lower();\n}\n\n/**\n * Add an overlaying rect\n * @param {string} gradientName Gradient name of overlay rect\n * @param {number} x X value of the overlaying rect\n * @param {number} y Y value of the overlaying rect\n * @param {number} width Rect width\n * @param {number} height Rect height\n */\nexport const addOverlayRect = (gradientName, x, y, width, height) => {\n  if (svg.select('.intermediate-layer-overlay').empty()) {\n    svg.append('g').attr('class', 'intermediate-layer-overlay');\n  }\n\n  let intermediateLayerOverlay = svg.select('.intermediate-layer-overlay');\n\n  let overlayRect = intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', `url(#${gradientName})`)\n    .style('stroke', 'none')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', x)\n    .attr('y', y)\n    .style('opacity', 0);\n  \n  overlayRect.transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Redraw the layer if needed (entering the intermediate view to make sure\n * all layers have the same color scale)\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n */\nconst redrawLayerIfNeeded = (curLayerIndex, i) => {\n  // Determine the range for this layerview, and redraw the layer with\n  // smaller range so all layers have the same range\n  let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let range = Math.max(rangePre, rangeCur);\n\n  if (rangePre > rangeCur) {\n    // Redraw the current layer (selected node)\n    svg.select(`g#layer-${curLayerIndex}-node-${i}`)\n      .select('image.node-image')\n      .each((d, g, i) => drawOutput(d, g, i, range));\n    \n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex, i];\n    needRedrawStore.set(needRedraw);\n    \n  } else if (rangePre < rangeCur) {\n    // Redraw the previous layer (whole layer)\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('image.node-image')\n      .each((d, g, i) => drawOutput(d, g, i, range));\n\n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex - 1, undefined];\n    needRedrawStore.set(needRedraw);\n  }\n\n  // Compute the min, max value of all nodes in pre-layer and the selected\n  // node of cur-layer\n  let min = cnnLayerMinMax[curLayerIndex - 1].min,\n    max = cnnLayerMinMax[curLayerIndex - 1].max;\n\n  // Selected node\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n    for (let c = 0; c < n.output[0].length; c++) {\n      if (n.output[r][c] < min) { min = n.output[r][c]; }\n      if (n.output[r][c] > max) { max = n.output[r][c]; }\n    }\n  }\n\n  return {range: range, minMax: {min: min, max: max}};\n}\n\n/**\n * Draw the intermediate layer before conv_1_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv1 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  // Compute the target location\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_1'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 10 * nodeLength) / 10;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay gradient and rect\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n  {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n  {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient', stops);\n\n  addOverlayRect('overlay-gradient', rightStart - overlayRectOffset / 2,\n  0, width - rightStart + overlayRectOffset,\n  height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n  drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n    intermediateGap, d, i, intermediateNodeMouseOverHandler,\n    intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 8,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // Compute the selected node's min max\n  // Selected node\n  let min = Infinity, max = -Infinity;\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n  for (let c = 0; c < n.output[0].length; c++) {\n    if (n.output[r][c] < min) { min = n.output[r][c]; }\n    if (n.output[r][c] > max) { max = n.output[r][c]; }\n  }\n  }\n\n  let finalMinMax = {\n  min: Math.min(min, intermediateMinMax.min),\n  max: Math.max(max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n  .attr('class', 'intermediate-layer-annotation')\n  .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    isFirstConv: true,\n    i: i\n  });\n\n  let range = cnnLayerRanges.local[curLayerIndex];\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: 1,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    isInput: true,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10 - 25\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: nodeCoordinate[curLayerIndex - 1][2].x,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_1_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv2 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_2'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 8 * nodeLength) / 8;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  let leftRightRatio = (2 * nodeLength + hSpaceAroundGap * gapRatio) /\n    (8 * nodeLength + intermediateGap * 7);\n  let endingGradient = 0.85 + (0.95 - 0.85) * leftRightRatio;\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: endingGradient},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, nodeLength * 2 + hSpaceAroundGap * gapRatio + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n      intermediateGap, d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv3 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_1'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 5 * nodeLength) / 5;\n  let rightStart = nodeCoordinate[curLayerIndex][0].x +\n    nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    minMax: finalMinMax,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv4 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_2'] = leftX;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 7 * nodeLength) / 7;\n  let rightStart = targetX + nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    minMax: finalMinMax,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n","/* global d3, SmoothScroll */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  cnnLayerMinMaxStore, isInSoftmaxStore, softmaxDetailViewStore,\n  hoverInfoStore, allowsSoftmaxAnimationStore, detailedModeStore\n} from '../stores.js';\nimport {\n  getOutputKnot, getInputKnot, gappedColorScale, getMidCoords\n} from './draw-utils.js';\nimport {\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst kernelRectLength = overviewConfig.kernelRectLength;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst classList = overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet isInSoftmax = undefined;\nisInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n\nlet allowsSoftmaxAnimation = undefined;\nallowsSoftmaxAnimationStore.subscribe( value => {allowsSoftmaxAnimation = value;} )\n\nlet softmaxDetailViewInfo = undefined;\nsoftmaxDetailViewStore.subscribe( value => {softmaxDetailViewInfo = value;} )\n\nlet hoverInfo = undefined;\nhoverInfoStore.subscribe( value => {hoverInfo = value;} )\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet layerIndexDict = {\n  'input': 0,\n  'conv_1_1': 1,\n  'relu_1_1': 2,\n  'conv_1_2': 3,\n  'relu_1_2': 4,\n  'max_pool_1': 5,\n  'conv_2_1': 6,\n  'relu_2_1': 7,\n  'conv_2_2': 8,\n  'relu_2_2': 9,\n  'max_pool_2': 10,\n  'output': 11\n}\n\nlet hasInitialized = false;\nlet logits = [];\nlet flattenFactoredFDict = {};\n\nconst moveLegend = (d, i, g, moveX, duration, restore) => {\n  let legend = d3.select(g[i]);\n\n  if (!restore) {\n    let previousTransform = legend.attr('transform');\n    let previousLegendX = +previousTransform.replace(/.*\\(([\\d\\.]+),.*/, '$1');\n    let previousLegendY = +previousTransform.replace(/.*,\\s([\\d\\.]+)\\)/, '$1');\n  \n    legend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX - moveX}, ${previousLegendY})`);\n    \n    // If not in restore mode, we register the previous location to the DOM element\n    legend.attr('data-preX', previousLegendX);\n    legend.attr('data-preY', previousLegendY);\n  } else {\n    // Restore the recorded location\n    let previousLegendX = +legend.attr('data-preX');\n    let previousLegendY = +legend.attr('data-preY');\n\n    legend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX}, ${previousLegendY})`);\n  }\n}\n\nconst logitCircleMouseOverHandler = (i) => {\n  // Update the hover info UI\n  hoverInfoStore.set({\n    show: true,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Highlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = i;\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.intermediate-layer');\n\n  // Highlight the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 2);\n\n  // Highlight the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 1)\n    .select('circle')\n    .style('fill', d => d.fill);\n  \n  // Raise the associated edge group\n  logitLayerLower.select(`#logit-lower-${i}`).raise();\n\n  // Highlight the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.8)\n    .style('stroke', '#E0E0E0');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 1)\n    .style('stroke', '#E0E0E0');\n  \n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n\n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n}\n\nconst logitCircleMouseLeaveHandler = (i) => {\n  // screenshot\n  // return;\n\n  // Update the hover info UI\n  hoverInfoStore.set({\n    show: false,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Dehighlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = -1;\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.intermediate-layer');\n\n  // Restore the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 1);\n\n  // Restore the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 0.2);\n\n  // Restore the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#EDEDED');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#F1F1F1');\n\n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n  \n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n}\n\n// This function is binded to the detail view in Overview.svelte\nexport const softmaxDetailViewMouseOverHandler = (event) => {\n  logitCircleMouseOverHandler(event.detail.curI);\n}\n\n// This function is binded to the detail view in Overview.svelte\nexport const softmaxDetailViewMouseLeaveHandler = (event) => {\n  logitCircleMouseLeaveHandler(event.detail.curI);\n}\n\nconst drawLogitLayer = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    softmaxX = arg.softmaxX,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    symbolGroup = arg.symbolGroup,\n    symbolX = arg.symbolX,\n    flattenRange = arg.flattenRange;\n\n  let logitLayer = svg.select('.intermediate-layer')\n    .append('g')\n    .attr('class', 'logit-layer')\n    .raise();\n  \n  // Minotr layer ordering change\n  let tempClone = svg.select('.intermediate-layer')\n    .select('.flatten-layer')\n    .select('.plus-symbol')\n    .clone(true)\n    .attr('class', 'temp-clone-plus-symbol')\n    .attr('transform', `translate(${symbolX - moveX},\n      ${nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2})`)\n    // Cool hack -> d3 clone doesnt clone events, make the front object pointer\n    // event transparent so users can trigger the underlying object's event!\n    .style('pointer-events', 'none')\n    .remove();\n\n  let tempPlusSymbol = logitLayer.append(() => tempClone.node());\n  \n  svg.select('.softmax-symbol').raise();\n\n  let logitLayerLower = svg.select('.underneath')\n    .append('g')\n    .attr('class', 'logit-layer-lower')\n    .lower();\n  \n  // Use circles to encode logit values\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n\n  // Get all logits\n  logits = [];\n  for (let i = 0; i < cnn[layerIndexDict['output']].length; i++) {\n    logits.push(cnn[layerIndexDict['output']][i].logit);\n  }\n\n  // Construct a color scale for the logit values\n  let logitColorScale = d3.scaleLinear()\n    .domain(d3.extent(logits))\n    .range([0.2, 1]);\n  \n  // Draw the current logit circle before animation\n  let logitRadius = 8;\n  logitLayer.append('circle')\n    .attr('class', 'logit-circle')\n    .attr('id', `logit-circle-${selectedI}`)\n    .attr('cx', centerX)\n    .attr('cy', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('r', logitRadius)\n    .style('fill', layerColorScales.logit(logitColorScale(logits[selectedI])))\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .style('stroke', intermediateColor)\n    .on('mouseover', () => logitCircleMouseOverHandler(selectedI))\n    .on('mouseleave', () => logitCircleMouseLeaveHandler(selectedI))\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Show the logit circle corresponding label\n  let softmaxDetailAnnotation = svg.select('.intermediate-layer-annotation')\n    .select('.softmax-detail-annoataion');\n\n  softmaxDetailAnnotation.select(`#logit-text-${selectedI}`)\n    .style('opacity', 1);\n\n  tempPlusSymbol.raise();\n\n  // Draw another line from plus symbol to softmax symbol\n  logitLayer.append('line')\n    .attr('class', `logit-output-edge-${selectedI}`)\n    .attr('x1', intermediateX2 - moveX + plusSymbolRadius * 2)\n    .attr('x2', softmaxX)\n    .attr('y1', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('y2', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .style('fill', 'none')\n    .style('stroke', '#EAEAEA')\n    .style('stroke-width', '1.2')\n    .lower();\n\n  // Add the flatten to logit links\n  let linkData = [];\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let underneathIs = [...Array(cnn[layerIndexDict['output']].length).keys()]\n    .filter(d => d != selectedI);\n  let curIIndex = 0;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  const drawOneEdgeGroup = () => {\n    // Only draw the new group if it is in the softmax mode\n    if (!allowsSoftmaxAnimation) {\n      svg.select('.underneath')\n        .selectAll(`.logit-lower`)\n        .remove();\n      return;\n    }\n\n    let curI = underneathIs[curIIndex];\n\n    let curEdgeGroup = svg.select('.underneath')\n      .select(`#logit-lower-${curI}`);\n    \n    if (curEdgeGroup.empty()) {\n      curEdgeGroup = svg.select('.underneath')\n        .append('g')\n        .attr('class', 'logit-lower')\n        .attr('id', `logit-lower-${curI}`)\n        .style('opacity', 0);\n\n      // Hack: now show all edges, only draw 1/3 of the actual edges\n      for (let f = 0; f < flattenLength; f += 3) {\n        let loopFactors = [0, 9];\n        loopFactors.forEach(l => {\n          let factoredF = f + l * flattenLength;\n    \n          // Flatten -> output\n          linkData.push({\n            source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n              y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n            target: {x: intermediateX2 - moveX,\n              y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n            index: factoredF,\n            weight: cnn.flatten[factoredF].outputLinks[curI].weight,\n            color: '#F1F1F1',\n            width: 0.5,\n            opacity: 1,\n            class: `softmax-edge-${curI}`\n          });\n        });\n      }\n\n      // Draw middle rect to logits\n      for (let vi = 0; vi < cnn[layerIndexDict['output']].length - 2; vi++) {\n        linkData.push({\n          source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n            y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n            middleRectHeight * (vi + 0.5)},\n          target: {x: intermediateX2 - moveX,\n            y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n          index: -1,\n          color: '#EDEDED',\n          width: 0.5,\n          opacity: 1,\n          class: `softmax-abstract-edge-${curI}`\n        });\n      }\n\n      // Render the edges on the underneath layer\n      curEdgeGroup.selectAll(`path.softmax-edge-${curI}`)\n        .data(linkData)\n        .enter()\n        .append('path')\n        .attr('class', d => d.class)\n        .attr('id', d => `edge-${d.name}`)\n        .attr('d', d => linkGen({source: d.source, target: d.target}))\n        .style('fill', 'none')\n        .style('stroke-width', d => d.width)\n        .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n        .style('opacity', d => d.opacity)\n        .style('pointer-events', 'none');\n    }\n    \n    let curNodeGroup = logitLayer.append('g')\n      .attr('class', `logit-layer-${curI}`)\n      .style('opacity', 0);\n    \n    // Draw the plus symbol\n    let symbolClone = symbolGroup.clone(true)\n      .style('opacity', 0);\n\n    // Change the style of the clone\n    symbolClone.attr('class', 'plus-symbol-clone')\n      .attr('id', `plus-symbol-clone-${curI}`)\n      .select('circle')\n      .datum({fill: gappedColorScale(layerColorScales.weight,\n        flattenRange, cnn[layerIndexDict['output']][curI].bias, 0.35)})\n      .style('pointer-events', 'none')\n      .style('fill', '#E5E5E5');\n\n    symbolClone.attr('transform', `translate(${symbolX},\n      ${nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2})`);\n    \n    // Draw the outter link using only merged path\n    let outputEdgeD1 = linkGen({\n      source: {\n        x: intermediateX2 - moveX + plusSymbolRadius * 2,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      }\n    });\n\n    let outputEdgeD2 = linkGen({\n      source: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: softmaxX,\n        y: nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2\n      }\n    });\n\n    // There are ways to combine these two paths into one. However, the animation\n    // for merged path is not continuous, so we use two saperate paths here.\n\n    let outputEdge1 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD1)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n\n    let outputEdge2 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD2)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n    \n    let outputEdgeLength1 = outputEdge1.node().getTotalLength();\n    let outputEdgeLength2 = outputEdge2.node().getTotalLength();\n    let totalLength = outputEdgeLength1 + outputEdgeLength2;\n    let totalDuration = hasInitialized ? 500 : 800;\n    let opacityDuration = hasInitialized ? 400 : 600;\n\n    outputEdge1.attr('stroke-dasharray', outputEdgeLength1 + ' ' + outputEdgeLength1)\n      .attr('stroke-dashoffset', outputEdgeLength1);\n    \n    outputEdge2.attr('stroke-dasharray', outputEdgeLength2 + ' ' + outputEdgeLength2)\n      .attr('stroke-dashoffset', outputEdgeLength2);\n\n    outputEdge1.transition('softmax-output-edge')\n      .duration(outputEdgeLength1 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n\n    outputEdge2.transition('softmax-output-edge')\n      .delay(outputEdgeLength1 / totalLength * totalDuration)\n      .duration(outputEdgeLength2 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n    \n    // Draw the logit circle\n    curNodeGroup.append('circle')\n      .attr('class', 'logit-circle')\n      .attr('id', `logit-circle-${curI}`)\n      .attr('cx', centerX)\n      .attr('cy', nodeCoordinate[curLayerIndex - 1][curI].y + nodeLength / 2)\n      .attr('r', 7)\n      .style('fill', layerColorScales.logit(logitColorScale(logits[curI])))\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => logitCircleMouseOverHandler(curI))\n      .on('mouseleave', () => logitCircleMouseLeaveHandler(curI))\n      .on('click', () => { d3.event.stopPropagation() });\n    \n    // Show the element in the detailed view\n    softmaxDetailViewInfo.startAnimation = {\n      i: curI,\n      duration: opacityDuration,\n      // Always show the animation\n      hasInitialized: false\n    };\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n    // Show the elements with animation    \n    curNodeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n\n    if ((selectedI < 3 && curI == 9) || (selectedI >= 3 && curI == 0)) {\n      // Show the hover text\n      softmaxDetailAnnotation.select('.softmax-detail-hover-annotation')\n        .transition('softmax-edge')\n        .duration(opacityDuration)\n        .style('opacity', 1);\n    }\n\n    softmaxDetailAnnotation.select(`#logit-text-${curI}`)\n      .transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n    \n    curEdgeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1)\n      .on('end', () => {\n        // Recursive animaiton\n        curIIndex ++;\n        if (curIIndex < underneathIs.length) {\n          linkData = [];\n          drawOneEdgeGroup();\n        } else {\n          hasInitialized = true;\n          softmaxDetailViewInfo.hasInitialized = true;\n          softmaxDetailViewStore.set(softmaxDetailViewInfo);\n        }\n      });\n    \n    symbolClone.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 0.2);\n  }\n\n  // Show the softmax detail view\n  let anchorElement = svg.select('.intermediate-layer')\n    .select('.layer-label').node();\n  let pos = getMidCoords(svg, anchorElement);\n  let wholeSvg = d3.select('#cnn-svg');\n  let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n  let detailViewTop = 100 + svgYMid - 192 / 2;\n\n  const detailview = document.getElementById('detailview');\n  detailview.style.top = `${detailViewTop}px`;\n  detailview.style.left = `${pos.left - 490 - 50}px`;\n  detailview.style.position = 'absolute';\n\n  softmaxDetailViewStore.set({\n    show: true,\n    logits: logits,\n    logitColors: logits.map(d => layerColorScales.logit(logitColorScale(d))),\n    selectedI: selectedI,\n    highlightI: -1,\n    outputName: classList[selectedI],\n    outputValue: cnn[layerIndexDict['output']][selectedI].output,\n    startAnimation: {i: -1, duration: 0, hasInitialized: hasInitialized}\n  })\n\n  drawOneEdgeGroup();\n\n  // Draw logit circle color scale\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: d3.extent(logits)[1] - d3.extent(logits)[0],\n    minMax: {min: d3.extent(logits)[0], max: d3.extent(logits)[1]},\n    group: logitLayer,\n    width: softmaxX - (intermediateX2 + plusSymbolRadius * 2 - moveX + 5),\n    gradientAppendingName: 'flatten-logit-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.logit,\n    x: intermediateX2 + plusSymbolRadius * 2 - moveX + 5,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Draw logit layer label\n  let logitLabel = logitLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = centerX;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    });\n\n  logitLabel.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('logit');\n}\n\nconst removeLogitLayer = () => {\n  svg.select('.logit-layer').remove();\n  svg.select('.logit-layer-lower').remove();\n  svg.selectAll('.plus-symbol-clone').remove();\n\n  // Instead of removing the paths, we hide them, so it is faster to load in\n  // the future\n  svg.select('.underneath')\n    .selectAll('.logit-lower')\n    .style('opacity', 0);\n\n  softmaxDetailViewStore.set({\n      show: false,\n      logits: []\n  })\n}\n\nconst softmaxClicked = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    symbolX = arg.symbolX,\n    symbolY = arg.symbolY,\n    outputX = arg.outputX,\n    outputY = arg.outputY,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    softmaxX = arg.softmaxX,\n    softmaxTextY = arg.softmaxTextY,\n    softmaxWidth = arg.softmaxWidth,\n    symbolGroup = arg.symbolGroup,\n    flattenRange = arg.flattenRange;\n\n  let duration = 600;\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n  d3.event.stopPropagation();\n\n  // Clean up the logit elemends before moving anything\n  if (isInSoftmax) {\n    allowsSoftmaxAnimationStore.set(false);\n    removeLogitLayer();\n  } else {\n    allowsSoftmaxAnimationStore.set(true);\n  }\n\n  // Move the overlay gradient\n  svg.select('.intermediate-layer-overlay')\n    .select('rect.overlay')\n    .transition('softmax')\n    .ease(d3.easeCubicInOut)\n    .duration(duration)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`);\n\n  // Move the legends\n  svg.selectAll(`.intermediate-legend-${curLayerIndex - 1}`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.intermediate-layer')\n    .select(`.layer-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.intermediate-layer')\n    .select(`.layer-detailed-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  // Also move all layers on the left\n  for (let i = curLayerIndex - 1; i >= 0; i--) {\n    let curLayer = svg.select(`g#cnn-layer-group-${i}`);\n    let previousX = +curLayer.select('image').attr('x');\n    let newX = isInSoftmax ? previousX + moveX : previousX - moveX;\n    moveLayerX({\n      layerIndex: i,\n      targetX: newX,\n      disable: true,\n      delay: 0,\n      transitionName: 'softmax',\n      duration: duration\n    });\n  }\n\n  // Hide the sum up annotation\n  svg.select('.plus-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Hide the softmax annotation\n  let softmaxAnnotation = svg.select('.softmax-annotation')\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n  \n  let softmaxDetailAnnotation = softmaxAnnotation.selectAll('.softmax-detail-annoataion')\n    .data([0])\n    .enter()\n    .append('g')\n    .attr('class', 'softmax-detail-annoataion');\n\n  // Remove the detailed annoatioan when quitting the detail view\n  if (isInSoftmax) {\n    softmaxAnnotation.selectAll('.softmax-detail-annoataion').remove();\n  }\n\n  softmaxAnnotation.select('.arrow-group')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0);\n\n  softmaxAnnotation.select('.annotation-text')\n    .style('cursor', 'help')\n    .style('pointer-events', 'all')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-softmax`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    })\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .on('end', () => {\n      if (!isInSoftmax) {\n        // Add new annotation for the softmax button\n        let textX = softmaxX + softmaxWidth / 2;\n        let textY = softmaxTextY - 10;\n\n        if (selectedI === 0) {\n          textY = softmaxTextY + 70;\n        }\n\n        let text = softmaxDetailAnnotation.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text')\n          .style('dominant-baseline', 'baseline')\n          .style('text-anchor', 'middle')\n          .text('Normalize ');\n        \n        text.append('tspan') \n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logits');\n        \n        text.append('tspan')\n          .attr('dx', 1)\n          .text(' into');\n\n        text.append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1.1em')\n          .text('class probabilities');\n\n        if (selectedI === 0) {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 44,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: textY - 12,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        } else {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 4,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: symbolY - plusSymbolRadius - 4,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        }\n\n        // Add annotation for the logit layer label\n        textX = centerX + 45;\n        textY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n        let arrowTX = centerX + 20;\n        let arrowTY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n\n        softmaxDetailAnnotation.append('g')\n          .attr('class', 'layer-detailed-label')\n          .attr('transform', () => {\n            let x = centerX;\n            let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n            return `translate(${x}, ${y})`;\n          })\n          .classed('hidden', !detailedMode)\n          .append('text')\n          // .attr('x', centerX)\n          // .attr('y',  (svgPaddings.top + vSpaceAroundGap) / 2 - 6)\n          .style('opacity', 0.7)\n          .style('dominant-baseline', 'middle')\n          .style('font-size', '12px')\n          .style('font-weight', '800')\n          .append('tspan')\n          .attr('x', 0)\n          .text('logit')\n          .append('tspan')\n          .attr('x', 0)\n          .style('font-size', '8px')\n          .style('font-weight', 'normal')\n          .attr('dy', '1.5em')\n          .text('(10)');\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', textX)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'start')\n          .text('Before')\n          .append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('normalization')\n\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: arrowTX,\n          ty: arrowTY,\n          sx: textX - 6,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false,\n          marker: 'marker-alt'\n        });\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'end')\n          .text('After')\n          .append('tspan')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('dy', '1em')\n          .text('normalization')\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: nodeCoordinate[layerIndexDict['output']][0].x - 8,\n          ty: arrowTY,\n          sx: nodeCoordinate[layerIndexDict['output']][0].x - 27,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: true,\n          marker: 'marker-alt'\n        });\n\n        // Add annotation for the logit circle\n        for (let i = 0; i < 10; i++) {\n          softmaxDetailAnnotation.append('text')\n            .attr('x', centerX)\n            .attr('y', nodeCoordinate[curLayerIndex - 1][i].y + nodeLength / 2 + 8)\n            .attr('class', 'annotation-text softmax-detail-text')\n            .attr('id', `logit-text-${i}`)\n            .style('text-anchor', 'middle')\n            .style('dominant-baseline', 'hanging')\n            .style('opacity', 0)\n            .text(`${classList[i]}`);\n        }\n\n        let hoverTextGroup = softmaxDetailAnnotation.append('g')\n          .attr('class', 'softmax-detail-hover-annotation')\n          .style('opacity', 0);\n\n        textX = centerX + 50;\n        textY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2;\n\n        if (selectedI < 3) {\n          textY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength / 2;\n        }\n\n        // Add annotation to prompt user to check the logit value\n        let hoverText = hoverTextGroup.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text softmax-hover-text')\n          .style('text-anchor', 'start')\n          .style('dominant-baseline', 'baseline')\n          .append('tspan')\n          .style('font-weight', 700)\n          .style('dominant-baseline', 'baseline')\n          .text(`Hover over `)\n          .append('tspan')\n          .style('font-weight', 400)\n          .style('dominant-baseline', 'baseline')\n          .text('to see');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('its ');\n\n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logit');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .text(' value');\n        \n        drawArrow({\n          group: hoverTextGroup,\n          tx: centerX + 15,\n          ty: textY,\n          sx: textX - 8,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false\n        });\n      }\n    })\n\n  // Hide the annotation\n  svg.select('.flatten-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Move the left part of faltten layer elements\n  let flattenLeftPart = svg.select('.flatten-layer-left');\n  flattenLeftPart.transition('softmax')\n    .duration(duration)\n    .ease(d3.easeCubicInOut)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`)\n    .on('end', () => {\n      // Add the logit layer\n      if (!isInSoftmax) {\n        let logitArg = {\n          curLayerIndex: curLayerIndex,\n          moveX: moveX,\n          softmaxLeftMid: softmaxLeftMid,\n          selectedI: selectedI,\n          intermediateX1: intermediateX1,\n          intermediateX2: intermediateX2,\n          pixelWidth: pixelWidth,\n          pixelHeight: pixelHeight,\n          topY: topY,\n          bottomY: bottomY,\n          middleGap: middleGap,\n          middleRectHeight: middleRectHeight,\n          softmaxX: softmaxX,\n          symbolGroup: symbolGroup,\n          symbolX: symbolX,\n          flattenRange: flattenRange\n        };\n        drawLogitLayer(logitArg);\n      }\n\n      // Redraw the line from the plus symbol to the output node\n      if (!isInSoftmax) {\n        let newLine = flattenLeftPart.select('.edge-group')\n          .append('line')\n          .attr('class', 'symbol-output-line')\n          .attr('x1', symbolX)\n          .attr('y1', symbolY)\n          .attr('x2', outputX + moveX)\n          .attr('y2', outputY)\n          .style('stroke-width', 1.2)\n          .style('stroke', '#E5E5E5')\n          .style('opacity', 0);\n        \n        newLine.transition('softmax')\n          .delay(duration / 3)\n          .duration(duration * 2 / 3)\n          .style('opacity', 1);\n      } else {\n        flattenLeftPart.select('.symbol-output-line').remove();\n      }\n      \n      isInSoftmax = !isInSoftmax;\n      isInSoftmaxStore.set(isInSoftmax);\n    })\n}\n\n/**\n * Draw the flatten layer before output layer\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n */\nexport const drawFlatten = (curLayerIndex, d, i, width, height) => {\n  // Show the output legend\n  svg.selectAll('.output-legend')\n    .classed('hidden', false);\n\n  let pixelWidth = nodeLength / 2;\n  let pixelHeight = 1.1;\n  let totalLength = (2 * nodeLength +\n    5.5 * hSpaceAroundGap * gapRatio + pixelWidth);\n  let leftX = nodeCoordinate[curLayerIndex][0].x - totalLength;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 4) / 2;\n  const minimumGap = 20;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  // Disable the current layer (output layer)\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: nodeCoordinate[curLayerIndex][0].x, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n  \n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 10 * nodeLength) / 10;\n\n  // Different from other intermediate view, we push the left part dynamically\n  // 1. If there is enough space, we fix the first layer position and move all\n  // other layers;\n  // 2. If there is not enough space, we maintain the minimum gap and push all\n  // left layers to the left (could be out-of-screen)\n  if (leftGap > minimumGap) {\n    // Move the left layers\n    for (let i = 0; i < curLayerIndex - 1; i++) {\n      let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n      moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n    }\n  } else {\n    leftGap = minimumGap;\n    let curLeftBound = leftX - leftGap * 2 - nodeLength;\n    // Move the left layers\n    for (let i = curLayerIndex - 2; i >= 0; i--) {\n      moveLayerX({layerIndex: i, targetX: curLeftBound, disable: true, delay: 0});\n      curLeftBound = curLeftBound - leftGap - nodeLength;\n    }\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  let intermediateLayerOverlay = svg.append('g')\n    .attr('class', 'intermediate-layer-overlay');\n\n  intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', 'url(#overlay-gradient-left)')\n    .style('stroke', 'none')\n    .attr('width', leftX + svgPaddings.left - (leftGap * 2) + 3)\n    .attr('height', height + svgPaddings.top + svgPaddings.bottom)\n    .attr('x', -svgPaddings.left)\n    .attr('y', 0)\n    .style('opacity', 0);\n  \n  intermediateLayerOverlay.selectAll('rect.overlay')\n    .transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'intermediate-layer')\n    .style('opacity', 0);\n  \n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + intermediateGap + pixelWidth;\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let colorScale = layerColorScales.conv;\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let linkData = [];\n\n  let flattenLayer = intermediateLayer.append('g')\n    .attr('class', 'flatten-layer');\n  \n  let flattenLayerLeftPart = flattenLayer.append('g')\n    .attr('class', 'flatten-layer-left');\n  \n  let topY = nodeCoordinate[curLayerIndex - 1][0].y;\n  let bottomY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength -\n        flattenLength * pixelHeight;\n  \n  // Compute the pre-layer gap\n  let preLayerDimension = cnn[curLayerIndex - 1][0].output.length;\n  let preLayerGap = nodeLength / (2 * preLayerDimension);\n\n  // Compute bounding box length\n  let boundingBoxLength = nodeLength / preLayerDimension;\n\n  // Compute the weight color scale\n  let flattenExtent = d3.extent(cnn.flatten.slice(flattenLength)\n    .map(d => d.outputLinks[i].weight)\n    .concat(cnn.flatten.slice(9 * flattenLength, 10 * flattenLength)\n      .map(d => d.outputLinks[i].weight)));\n\n  let flattenRange = 2 * (Math.round(\n    Math.max(...flattenExtent.map(Math.abs)) * 1000) / 1000);\n\n  let flattenMouseOverHandler = (d) => {\n    let index = d.index;\n    // Screenshot\n    // console.log(index);\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: true,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: true,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .raise()\n      .style('stroke', intermediateColor)\n      .style('stroke-width', 1);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .raise()\n      .style('stroke-width', 1)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.1));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 1);\n  }\n\n  let flattenMouseLeaveHandler = (d) => {\n    let index = d.index;\n\n    // screenshot\n    // if (index === 32) {return;}\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: false,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: false,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .style('stroke-width', 0.6)\n      .style('stroke', '#E5E5E5')\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .style('stroke-width', 0.6)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.35));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 0);\n  }\n\n  flattenFactoredFDict = {};\n  for (let f = 0; f < flattenLength; f++) {\n    let loopFactors = [0, 9];\n    loopFactors.forEach(l => {\n      let factoredF = f + l * flattenLength;\n      flattenFactoredFDict[factoredF] = cnn.flatten[factoredF].output;\n      flattenLayerLeftPart.append('rect')\n        .attr('x', intermediateX1)\n        .attr('y', l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight)\n        .attr('width', pixelWidth)\n        .attr('height', pixelHeight)\n        .style('cursor', 'crosshair')\n        .style('fill', colorScale((cnn.flatten[factoredF].output + range / 2) / range))\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => { d3.event.stopPropagation() });\n\n      // Flatten -> output\n      linkData.push({\n        source: {x: intermediateX1 + pixelWidth + 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        target: {x: intermediateX2,\n          //nodeCoordinate[curLayerIndex][i].x - nodeLength,\n          y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n        index: factoredF,\n        weight: cnn.flatten[factoredF].outputLinks[i].weight,\n        name: `flatten-${factoredF}-output`,\n        color: gappedColorScale(layerColorScales.weight,\n          flattenRange, cnn.flatten[factoredF].outputLinks[i].weight, 0.35),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten-output`\n      });\n\n      // Pre-layer -> flatten\n      let row = Math.floor(f / preLayerDimension);\n      linkData.push({\n        target: {x: intermediateX1 - 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        source: {x: leftX + nodeLength + 3,\n          y: nodeCoordinate[curLayerIndex - 1][l].y + (2 * row + 1) * preLayerGap},\n        index: factoredF,\n        name: `flatten-${factoredF}`,\n        color: '#E5E5E5',\n        // color: gappedColorScale(layerColorScales.conv,\n        //   2 * Math.max(Math.abs(cnnLayerMinMax[10].max), Math.abs(cnnLayerMinMax[10].min)),\n        //   cnn.flatten[factoredF].output, 0.2),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten`\n      });\n\n      // Add original pixel bounding box\n      let loc = cnn.flatten[factoredF].inputLinks[0].weight;\n      flattenLayerLeftPart.append('rect')\n        .attr('id', `bounding-${factoredF}`)\n        .attr('class', 'flatten-bounding')\n        .attr('x', leftX + loc[1] * boundingBoxLength)\n        .attr('y', nodeCoordinate[curLayerIndex - 1][l].y + loc[0] * boundingBoxLength)\n        .attr('width', boundingBoxLength)\n        .attr('height', boundingBoxLength)\n        .style('fill', 'none')\n        .style('stroke', intermediateColor)\n        .style('stroke-length', '0.5')\n        .style('pointer-events', 'all')\n        .style('cursor', 'crosshair')\n        .style('opacity', 0)\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => {d3.event.stopPropagation()});\n    }) \n  }\n  \n  // Use abstract symbol to represent the flatten nodes in between (between\n  // the first and the last nodes)\n  // Compute the average value of input node and weights\n  let meanValues = [];\n  for (let n = 1; n < cnn[curLayerIndex - 1].length - 1; n++) {\n    /*\n    let meanOutput = d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.output));\n    let meanWeight= d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.outputLinks[i].weight));\n    meanValues.push({index: n, output: meanOutput, weight: meanWeight});\n    */\n    meanValues.push({index: n});\n  }\n\n  // Compute the middle gap\n  let middleGap = 5;\n  let middleRectHeight = (10 * nodeLength + (10 - 1) * vSpaceAroundGap -\n    pixelHeight * flattenLength * 2 - 5 * (8 + 1)) / 8;\n\n  // Add middle nodes\n  meanValues.forEach((v, vi) => {\n    // Add a small rectangle\n    flattenLayerLeftPart.append('rect')\n      .attr('x', intermediateX1 + pixelWidth / 4)\n      .attr('y', topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * vi)\n      .attr('width', pixelWidth / 2)\n      .attr('height', middleRectHeight)\n      // .style('fill', colorScale((v.output + range / 2) / range));\n      .style('fill', '#E5E5E5');\n    \n    // Add a triangle next to the input node\n    flattenLayerLeftPart.append('polyline')\n      .attr('points',\n        `${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y},\n        ${leftX + nodeLength + 10}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n        ${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength}`)\n      .style('fill', '#E5E5E5')\n      .style('opacity', 1);\n    \n    // Input -> flatten\n    linkData.push({\n      source: {x: leftX + nodeLength + 10,\n        y: nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n      target: {x: intermediateX1 - 3,\n        y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n          middleRectHeight * (vi + 0.5)},\n      index: -1,\n      width: 1,\n      opacity: 1,\n      name: `flatten-abstract-${v.index}`,\n      color: '#E5E5E5',\n      class: `flatten-abstract`\n    });\n\n    // Flatten -> output\n    linkData.push({\n      source: {x: intermediateX1 + pixelWidth + 3,\n      y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * (vi + 0.5)},\n      target: {x: intermediateX2,\n      y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n      index: -1,\n      name: `flatten-abstract-${v.index}-output`,\n      // color: gappedColorScale(layerColorScales.weight, flattenRange,\n      //   v.weight, 0.35),\n      color: '#E5E5E5',\n      weight: v.weight,\n      width: 1,\n      opacity: 1,\n      class: `flatten-abstract-output`\n    });\n  })\n\n  // Draw the plus operation symbol\n  let symbolX = intermediateX2 + plusSymbolRadius;\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${symbolX}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', plusSymbolRadius * 2)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the first\n  // conv node (no need now, since we added annotaiton for softmax to make it\n  // look better aligned)\n  // Add bias symbol to the plus symbol\n  symbolGroup.append('circle')\n    .attr('cx', 0)\n    .attr('cy', -nodeLength / 2 - 0.5 * kernelRectLength)\n    .attr('r', kernelRectLength * 1.5)\n    .style('stroke', intermediateColor)\n    .style('cursor', 'crosshair')\n    .style('fill', gappedColorScale(layerColorScales.weight,\n        flattenRange, d.bias, 0.35))\n    .on('mouseover', () => {\n      hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('mouseleave', () => {\n      hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('click', () => { d3.event.stopPropagation(); });\n  \n  // Link from bias to the plus symbol\n  symbolGroup.append('path')\n    .attr('d', linkGen({\n      source: { x: 0, y: 0 },\n      target: { x: 0, y: -nodeLength / 2 - 0.5 * kernelRectLength }\n    }))\n    .attr('id', 'bias-plus')\n    .attr('stroke-width', 1.2)\n    .attr('stroke', '#E5E5E5')\n    .lower();\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: nodeCoordinate[curLayerIndex][i].x - 3,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`,\n    width: 1.2,\n    color: '#E5E5E5'\n  });\n\n  // Draw softmax operation symbol\n  let softmaxWidth = 55;\n  let emptySpace = ((totalLength - 2 * nodeLength - 2 * intermediateGap)\n    - softmaxWidth) / 2;\n  let symbolEndX = intermediateX2 + plusSymbolRadius * 2;\n  let softmaxX = emptySpace + symbolEndX;\n  let softmaxLeftMid = emptySpace / 2 + symbolEndX;\n  let softmaxTextY = nodeCoordinate[curLayerIndex][i].y - 2 * kernelRectLength - 6;\n  let moveX = (intermediateX2 - (intermediateX1 + pixelWidth + 3)) * 2 / 3;\n\n  let softmaxArg = {\n    curLayerIndex: curLayerIndex,\n    moveX: moveX,\n    symbolX: symbolX,\n    symbolY: symbolY,\n    outputX: nodeCoordinate[curLayerIndex][i].x,\n    outputY: symbolY,\n    softmaxLeftMid: softmaxLeftMid,\n    selectedI: i,\n    intermediateX1: intermediateX1,\n    intermediateX2: intermediateX2,\n    pixelWidth: pixelWidth,\n    pixelHeight: pixelHeight,\n    topY: topY,\n    bottomY: bottomY,\n    middleGap: middleGap,\n    middleRectHeight: middleRectHeight,\n    softmaxX: softmaxX,\n    softmaxWidth: softmaxWidth,\n    softmaxTextY: softmaxTextY,\n    symbolGroup: symbolGroup,\n    flattenRange: flattenRange\n  };\n\n  let softmaxSymbol = intermediateLayer.append('g')\n    .attr('class', 'softmax-symbol')\n    .attr('transform', `translate(${softmaxX}, ${symbolY})`)\n    .style('pointer-event', 'all')\n    .style('cursor', 'pointer')\n    .on('click', () => softmaxClicked(softmaxArg));\n  \n  softmaxSymbol.append('rect')\n    .attr('x', 0)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', softmaxWidth)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('stroke', intermediateColor)\n    .attr('rx', 2)\n    .attr('ry', 2)\n    .attr('fill', '#FAFAFA');\n  \n  softmaxSymbol.append('text')\n    .attr('x', 5)\n    .attr('y', 1)\n    .style('dominant-baseline', 'middle')\n    .style('font-size', '12px')\n    .style('opacity', 0.5)\n    .text('softmax');\n\n  // Draw the layer label\n  let layerLabel = intermediateLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio +\n        pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-flatten`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    });\n  \n  layerLabel.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('flatten');\n\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    \n  let detailedLabelGroup = intermediateLayer.append('g')\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio + pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .attr('class', 'layer-detailed-label')\n    .classed('hidden', !detailedMode)\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      let anchor = document.querySelector(`#article-flatten`);\n      scroll.animateScroll(anchor);\n    });\n  \n  detailedLabelGroup.append('title')\n    .text('Move to article section');\n\n  let detailedLabelText = detailedLabelGroup.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('flatten');\n  \n  let dimension = cnn[layerIndexDict['max_pool_2']].length * \n    cnn[layerIndexDict['max_pool_2']][0].output.length *\n    cnn[layerIndexDict['max_pool_2']][0].output[0].length;\n\n  detailedLabelText.append('tspan')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .text(`(${dimension})`);\n\n  // Add edges between nodes\n  let edgeGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d => d.class)\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', d => d.width)\n    .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n    .style('opacity', d => d.opacity);\n  \n  edgeGroup.selectAll('path.flatten-abstract-output')\n    .lower();\n\n  edgeGroup.selectAll('path.flatten,path.flatten-output')\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .on('mouseover', flattenMouseOverHandler)\n    .on('mouseleave', flattenMouseLeaveHandler)\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Add legend\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: cnnLayerMinMax[10],\n    group: intermediateLayer,\n    width: intermediateGap + nodeLength - 3,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: flattenRange,\n    minMax: {min: flattenExtent[0], max: flattenExtent[1]},\n    group: intermediateLayer,\n    width: intermediateGap - 3 - 5,\n    gradientAppendingName: 'flatten-weight-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.weight,\n    x: leftX + intermediateGap + nodeLength + pixelWidth + 3,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  // Add annotation for the sum operation\n  let plusAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'plus-annotation');\n  \n  // let textX = nodeCoordinate[curLayerIndex][i].x - 50;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 3;\n  let arrowSY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 2;\n  let arrowTY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 +\n    plusSymbolRadius;\n\n  if (i == 9) {\n    textY -= 110;\n    arrowSY -= 70;\n    arrowTY -= 18;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all products');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('(');\n\n  plusText.append('tspan')\n    .style('fill', '#66a3c8')\n    .style('dominant-baseline', 'hanging')\n    .text('element');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' × ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#b58946')\n    .text('weight');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(')');\n\n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('and then ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#479d94')\n    .text('bias');\n  \n  drawArrow({\n    group: plusAnnotation,\n    sx: intermediateX2 - 2 * plusSymbolRadius - 3,\n    sy: arrowSY,\n    tx: intermediateX2 - 5,\n    ty: arrowTY,\n    dr: 30,\n    hFlip: i === 9,\n    marker: 'marker-alt'\n  });\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  biasTextY -= 2 * kernelRectLength + 4;\n  \n  flattenLayerLeftPart.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'baseline')\n    .text('Bias');\n  \n  // Add annotation for the softmax symbol\n  let softmaxAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'softmax-annotation');\n  \n  softmaxAnnotation.append('text')\n    .attr('x', softmaxX + softmaxWidth / 2)\n    .attr('y', softmaxTextY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'middle')\n    .style('font-weight', 700)\n    .text('Click ')\n    .append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .text('to learn more');\n\n  drawArrow({\n    group: softmaxAnnotation,\n    sx: softmaxX + softmaxWidth / 2 - 5,\n    sy: softmaxTextY + 4,\n    tx: softmaxX + softmaxWidth / 2,\n    ty: symbolY - plusSymbolRadius - 4,\n    dr: 50,\n    hFlip: true\n  });\n\n  // Add annotation for the flatten layer\n  let flattenAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'flatten-annotation');\n  \n  textX = leftX - 80;\n  textY = nodeCoordinate[curLayerIndex - 1][0].y;\n\n  let flattenText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  let tempTspan = flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Hover over ');\n  \n  tempTspan.append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('matrix to');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('see how it is flattened');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('into a 1D array!');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 45,\n    sy: textY + nodeLength * 0.4 + 12,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2,\n    dr: 80,\n    hFlip: true\n  });\n\n  // Add annotation to explain the middle images\n  textY = nodeCoordinate[curLayerIndex - 1][1].y;\n\n  let middleText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Same flattening');\n  \n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('operation for');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('each neuron');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 39,\n    sy: textY + 25,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2 - 2,\n    dr: 80,\n    hFlip: true,\n    marker: 'marker-alt'\n  });\n\n\n  // Add annotation for the output neuron\n  let outputAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'output-annotation');\n  \n  outputAnnotation.append('text')\n    .attr('x', nodeCoordinate[layerIndexDict['output']][i].x)\n    .attr('y', nodeCoordinate[layerIndexDict['output']][i].y + 10)\n    .attr('class', 'annotation-text')\n    .text(`(${d3.format('.4f')(cnn[layerIndexDict['output']][i].output)})`);\n\n\n  /* Prototype of using arc to represent the flatten layer (future)\n  let pie = d3.pie()\n    .padAngle(0)\n    .sort(null)\n    .value(d => d.output)\n    .startAngle(0)\n    .endAngle(-Math.PI);\n\n  let radius = 490 / 2;\n  let arc = d3.arc()\n    .innerRadius(radius - 20)\n    .outerRadius(radius);\n\n  let arcs = pie(cnn.flatten);\n  console.log(arcs);\n\n  let test = svg.append('g')\n    .attr('class', 'test')\n    .attr('transform', 'translate(500, 250)');\n\n  test.selectAll(\"path\")\n    .data(arcs)\n    .join(\"path\")\n      .attr('class', 'arc')\n      .attr(\"fill\", d => colorScale((d.value + range/2) / range))\n      .attr(\"d\", arc);\n  */\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}","<script>\n    // Svelte functions\n    import { onMount } from 'svelte';\n    import {\n      cnnStore, svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore,\n      nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n      needRedrawStore, cnnLayerMinMaxStore, detailedModeStore,\n      shouldIntermediateAnimateStore, isInSoftmaxStore, softmaxDetailViewStore,\n      hoverInfoStore, allowsSoftmaxAnimationStore, modalStore,\n      intermediateLayerPositionStore\n    } from '../stores.js';\n  \n    // Svelte views\n    import ConvolutionView from '../detail-view/Convolutionview.svelte';\n    import ActivationView from '../detail-view/Activationview.svelte';\n    import PoolView from '../detail-view/Poolview.svelte';\n    import SoftmaxView from '../detail-view/Softmaxview.svelte';\n    import Modal from './Modal.svelte'\n  \n    // Overview functions\n    import { loadTrainedModel, constructCNN } from '../utils/cnn-tf.js';\n    import { overviewConfig } from '../config.js';\n  \n    import {\n      addOverlayRect, drawConv1, drawConv2, drawConv3, drawConv4\n    } from './intermediate-draw.js';\n  \n    import {\n      moveLayerX, addOverlayGradient\n    } from './intermediate-utils.js';\n  \n    import {\n      drawFlatten, softmaxDetailViewMouseOverHandler, softmaxDetailViewMouseLeaveHandler\n    } from './flatten-draw.js';\n  \n    import {\n      drawOutput, drawCNN, updateCNN, updateCNNLayerRanges, drawCustomImage\n    } from './overview-draw.js';\n  \n  \n    // View bindings\n    let overviewComponent;\n    let scaleLevelSet = new Set(['local', 'module', 'global']);\n    let selectedScaleLevel = 'local';\n    selectedScaleLevelStore.set(selectedScaleLevel);\n    let previousSelectedScaleLevel = selectedScaleLevel;\n    let wholeSvg = undefined;\n    let svg = undefined;\n  \n    $: selectedScaleLevel, selectedScaleLevelChanged();\n  \n    // Configs\n    const layerColorScales = overviewConfig.layerColorScales;\n    const nodeLength = overviewConfig.nodeLength;\n    const plusSymbolRadius = overviewConfig.plusSymbolRadius;\n    const numLayers = overviewConfig.numLayers;\n    const edgeOpacity = overviewConfig.edgeOpacity;\n    const edgeInitColor = overviewConfig.edgeInitColor;\n    const edgeHoverColor = overviewConfig.edgeHoverColor;\n    const edgeHoverOuting = overviewConfig.edgeHoverOuting;\n    const edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\n    const intermediateColor = overviewConfig.intermediateColor;\n    const kernelRectLength = overviewConfig.kernelRectLength;\n    const svgPaddings = overviewConfig.svgPaddings;\n    const gapRatio = overviewConfig.gapRatio;\n    const overlayRectOffset = overviewConfig.overlayRectOffset;\n    const classLists = overviewConfig.classLists;\n  \n    // Shared properties\n    let needRedraw = [undefined, undefined];\n    needRedrawStore.subscribe( value => {needRedraw = value;} );\n  \n    let nodeCoordinate = undefined;\n    nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n  \n    let cnnLayerRanges = undefined;\n    cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n  \n    let cnnLayerMinMax = undefined;\n    cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n  \n    let detailedMode = undefined;\n    detailedModeStore.subscribe( value => {detailedMode = value;} )\n  \n    let shouldIntermediateAnimate = undefined;\n    shouldIntermediateAnimateStore.subscribe(value => {\n      shouldIntermediateAnimate = value;\n    })\n  \n    let vSpaceAroundGap = undefined;\n    vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n  \n    let hSpaceAroundGap = undefined;\n    hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n  \n    let isInSoftmax = undefined;\n    isInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n  \n    let softmaxDetailViewInfo = undefined;\n    softmaxDetailViewStore.subscribe( value => {\n      softmaxDetailViewInfo = value;\n    } )\n  \n    let modalInfo = undefined;\n    modalStore.subscribe( value => {modalInfo = value;} )\n  \n    let hoverInfo = undefined;\n    hoverInfoStore.subscribe( value => {hoverInfo = value;} )\n  \n    let intermediateLayerPosition = undefined;\n    intermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n  \n    let width = undefined;\n    let height = undefined;\n    let model = undefined;\n    let selectedNode = {layerName: '', index: -1, data: null};\n    let isInIntermediateView = false;\n    let isInActPoolDetailView = false;\n    let actPoolDetailViewNodeIndex = -1;\n    let actPoolDetailViewLayerIndex = -1;\n    let detailedViewNum = undefined;\n    let disableControl = false;\n  \n    // Wait to load\n    let cnn = undefined;\n  \n    let detailedViewAbsCoords = {\n      1 : [600, 270, 490, 290],\n      2: [500, 270, 490, 290],\n      3 : [700, 270, 490, 290],\n      4: [600, 270, 490, 290],\n      5: [650, 270, 490, 290],\n      6 : [775, 270, 490, 290],\n      7 : [100, 270, 490, 290],\n      8 : [60, 270, 490, 290],\n      9 : [200, 270, 490, 290],\n      10 : [300, 270, 490, 290],\n    }\n  \n    const layerIndexDict = {\n      'input': 0,\n      'conv_1_1': 1,\n      'relu_1_1': 2,\n      'conv_1_2': 3,\n      'relu_1_2': 4,\n      'max_pool_1': 5,\n      'conv_2_1': 6,\n      'relu_2_1': 7,\n      'conv_2_2': 8,\n      'relu_2_2': 9,\n      'max_pool_2': 10,\n      'output': 11\n    }\n  \n    const layerLegendDict = {\n      0: {local: 'input-legend', module: 'input-legend', global: 'input-legend'},\n      1: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\n      2: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\n      3: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n      4: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n      5: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n      6: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\n      7: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\n      8: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n      9: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n      10: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n      11: {local: 'output-legend', module: 'output-legend', global: 'output-legend'}\n    }\n  \n    let imageOptions = [\n      {file: 'boat_1.jpeg', class: 'lifeboat'},\n      {file: 'bug_1.jpeg', class: 'ladybug'},\n      {file: 'pizza_1.jpeg', class: 'pizza'},\n      {file: 'pepper_1.jpeg', class: 'bell pepper'},\n      {file: 'bus_1.jpeg', class: 'bus'},\n      {file: 'koala_1.jpeg', class: 'koala'},\n      {file: 'espresso_1.jpeg', class: 'espresso'},\n      {file: 'panda_1.jpeg', class: 'red panda'},\n      {file: 'orange_1.jpeg', class: 'orange'},\n      {file: 'car_1.jpeg', class: 'sport car'}\n    ];\n    let selectedImage = imageOptions[6].file;\n  \n    let nodeData;\n    let selectedNodeIndex = -1;\n    let isExitedFromDetailedView = true;\n    let isExitedFromCollapse = true;\n    let customImageURL = null;\n  \n    // Helper functions\n    const selectedScaleLevelChanged = () => {\n      if (svg !== undefined) {\n        if (!scaleLevelSet.add(selectedScaleLevel)) {\n          console.error('Encounter unknown scale level!');\n        }\n  \n        // Update nodes and legends\n        if (selectedScaleLevel != previousSelectedScaleLevel){\n          // We can simply redraw all nodes using the new color scale, or we can\n          // make it faster by only redraw certian nodes\n          let updatingLayerIndexDict = {\n            local: {\n              module: [1, 2, 8, 9, 10],\n              global: [1, 2, 3, 4, 5, 8, 9, 10]\n            },\n            module: {\n              local: [1, 2, 8, 9, 10],\n              global: [1, 2, 3, 4, 5, 8, 9, 10]\n            },\n            global: {\n              local: [1, 2, 3, 4, 5, 8, 9, 10],\n              module: [1, 2, 3, 4, 5]\n            }\n          };\n  \n          let updatingLayerIndex = updatingLayerIndexDict[\n            previousSelectedScaleLevel][selectedScaleLevel];\n  \n          updatingLayerIndex.forEach(l => {\n            let range = cnnLayerRanges[selectedScaleLevel][l];\n            svg.select(`#cnn-layer-group-${l}`)\n              .selectAll('.node-image')\n              .each((d, i, g) => drawOutput(d, i, g, range));\n          });\n   \n          // Hide previous legend\n          svg.selectAll(`.${previousSelectedScaleLevel}-legend`)\n            .classed('hidden', true);\n  \n          // Show selected legends\n          svg.selectAll(`.${selectedScaleLevel}-legend`)\n            .classed('hidden', !detailedMode);\n        }\n        previousSelectedScaleLevel = selectedScaleLevel;\n        selectedScaleLevelStore.set(selectedScaleLevel);\n      }\n    }\n  \n    const intermediateNodeMouseOverHandler = (d, i, g) => {\n      if (detailedViewNum !== undefined) { return; }\n      svg.select(`rect#underneath-gateway-${d.index}`)\n        .style('opacity', 1);\n    }\n  \n    const intermediateNodeMouseLeaveHandler = (d, i, g) => {\n      // screenshot\n      // return;\n      if (detailedViewNum !== undefined) { return; }\n      svg.select(`rect#underneath-gateway-${d.index}`)\n        .style('opacity', 0);\n    }\n  \n    const intermediateNodeClicked = (d, i, g, selectedI, curLayerIndex) => {\n      d3.event.stopPropagation();\n      isExitedFromCollapse = false;\n      // Use this event to trigger the detailed view\n      if (detailedViewNum === d.index) {\n        // Setting this for testing purposes currently.\n        selectedNodeIndex = -1; \n        // User clicks this node again -> rewind\n        detailedViewNum = undefined;\n        svg.select(`rect#underneath-gateway-${d.index}`)\n          .style('opacity', 0);\n      } \n      // We need to show a new detailed view (two cases: if we need to close the\n      // old detailed view or not)\n      else {\n        // Setting this for testing purposes currently.\n        selectedNodeIndex = d.index;\n        let inputMatrix = d.output;\n        let kernelMatrix = d.outputLinks[selectedI].weight;\n        // let interMatrix = singleConv(inputMatrix, kernelMatrix);\n        let colorScale = layerColorScales.conv;\n  \n        // Compute the color range\n        let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n        let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n        let range = Math.max(rangePre, rangeCur);\n  \n        // User triggers a different detailed view\n        if (detailedViewNum !== undefined) {\n          // Change the underneath highlight\n          svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n            .style('opacity', 0);\n          svg.select(`rect#underneath-gateway-${d.index}`)\n            .style('opacity', 1);\n        }\n        \n        // Dynamically position the detail view\n        let wholeSvg = d3.select('#cnn-svg');\n        let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n        let svgWidth = +wholeSvg.style('width').replace('px', '');\n        let detailViewTop = 100 + svgYMid - 250 / 2;\n        let positionX = intermediateLayerPosition[Object.keys(layerIndexDict)[curLayerIndex]];\n  \n        let posX = 0;\n        if (curLayerIndex > 6) {\n          posX = (positionX - svgPaddings.left) / 2;\n          posX = svgPaddings.left + posX - 486 / 2;\n        } else {\n          posX = (svgWidth + svgPaddings.right - positionX) / 2;\n          posX = positionX + posX - 486 / 2;\n        }\n  \n        const detailview = document.getElementById('detailview');\n        detailview.style.top = `${detailViewTop}px`;\n        detailview.style.left = `${posX}px`;\n        detailview.style.position = 'absolute';\n  \n        detailedViewNum = d.index;\n  \n        // Send the currently used color range to detailed view\n        nodeData.colorRange = range;\n        nodeData.inputIsInputLayer = curLayerIndex <= 1;\n      }\n    }\n  \n    // The order of the if/else statements in this function is very critical\n    const emptySpaceClicked = () => {\n      // If detail view -> rewind to intermediate view\n      if (detailedViewNum !== undefined) {\n            // Setting this for testing purposes currently.\n        selectedNodeIndex = -1; \n        // User clicks this node again -> rewind\n        svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n          .style('opacity', 0);\n        detailedViewNum = undefined;\n      }\n  \n      // If softmax view -> rewind to flatten layer view\n      else if (isInSoftmax) {\n        svg.select('.softmax-symbol')\n          .dispatch('click');\n      }\n  \n      // If intermediate view -> rewind to overview\n      else if (isInIntermediateView) {\n        let curLayerIndex = layerIndexDict[selectedNode.layerName];\n        quitIntermediateView(curLayerIndex, selectedNode.domG, selectedNode.domI);\n        d3.select(selectedNode.domG[selectedNode.domI])\n          .dispatch('mouseleave');\n      }\n  \n      // If pool/act detail view -> rewind to overview\n      else if (isInActPoolDetailView) {\n        quitActPoolDetailView();\n      }\n    }\n  \n    const prepareToEnterIntermediateView = (d, g, i, curLayerIndex) => {\n      isInIntermediateView = true;\n      // Hide all legends\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\n        .classed('hidden', true);\n      svg.selectAll('.input-legend').classed('hidden', true);\n      svg.selectAll('.output-legend').classed('hidden', true);\n  \n      // Hide the input annotation\n      svg.select('.input-annotation')\n        .classed('hidden', true);\n  \n      // Highlight the previous layer and this node\n      svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n        .selectAll('rect.bounding')\n        .style('stroke-width', 2);\n      \n      d3.select(g[i])\n        .select('rect.bounding')\n        .style('stroke-width', 2);\n      \n      // Disable control panel UI\n      // d3.select('#level-select').property('disabled', true);\n      // d3.selectAll('.image-container')\n      //   .style('cursor', 'not-allowed')\n      //   .on('mouseclick', () => {});\n      disableControl = true;\n      \n      // Allow infinite animation loop\n      shouldIntermediateAnimateStore.set(true);\n  \n      // Highlight the labels\n      svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n        g#layer-detailed-label-${curLayerIndex - 1},\n        g#layer-label-${curLayerIndex},\n        g#layer-detailed-label-${curLayerIndex}`)\n        .style('font-weight', '800');\n      \n      // Register a handler on the svg element so user can click empty space to quit\n      // the intermediate view\n      d3.select('#cnn-svg')\n        .on('click', emptySpaceClicked);\n    }\n  \n    const quitActPoolDetailView = () => {\n      isInActPoolDetailView = false;\n      actPoolDetailViewNodeIndex = -1;\n  \n      let layerIndex = layerIndexDict[selectedNode.layerName];\n      let nodeIndex = selectedNode.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', true);\n  \n      selectedNode.data.inputLinks.forEach(link => {\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', true);\n      })\n  \n      // Clean up the underneath rects\n      svg.select('g.underneath')\n        .selectAll('rect')\n        .remove();\n  \n      // Show all edges\n      let unimportantEdges = svg.select('g.edge-group')\n        .selectAll('.edge')\n        .filter(d => {\n          return d.targetLayerIndex !== actPoolDetailViewLayerIndex;\n        })\n        .style('visibility', null);\n      \n      // Recover control UI\n      disableControl = false;\n  \n      // Show legends if in detailed mode\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\n        .classed('hidden', !detailedMode);\n      svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n      svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n  \n      // Also dehighlight the edge\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .duration(200)\n        .style('stroke', edgeInitColor)\n        .style('stroke-width', edgeStrokeWidth)\n        .style('opacity', edgeOpacity);\n  \n      // Remove the overlay rect\n      svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\n        .transition('remove')\n        .duration(500)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .on('end', (d, i, g) => {\n          svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\n          svg.selectAll('defs.overlay-gradient').remove();\n          svg.select('.input-annotation').classed('hidden', false);\n        });\n  \n      // Turn the fade out nodes back\n      svg.select(`g#cnn-layer-group-${layerIndex}`)\n        .selectAll('g.node-group')\n        .each((sd, si, sg) => {\n          d3.select(sg[si])\n            .style('pointer-events', 'all');\n      });\n  \n      svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n        .selectAll('g.node-group')\n        .each((sd, si, sg) => {\n          // Recover the old events\n          d3.select(sg[si])\n            .style('pointer-events', 'all')\n            .on('mouseover', nodeMouseOverHandler)\n            .on('mouseleave', nodeMouseLeaveHandler)\n            .on('click', nodeClickHandler);\n      });\n  \n      // Deselect the node\n      selectedNode.layerName = '';\n      selectedNode.index = -1;\n      selectedNode.data = null;\n  \n      actPoolDetailViewLayerIndex = -1;\n    }\n  \n    const actPoolDetailViewPreNodeMouseOverHandler = (d, i, g) => {\n      // Highlight the edges\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n      edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n        .raise()\n        .transition()\n        .ease(d3.easeCubicInOut)\n        .duration(400)\n        .style('stroke', edgeHoverColor)\n        .style('stroke-width', '1')\n        .style('opacity', 1);\n      \n      // Highlight its border\n      d3.select(g[i]).select('rect.bounding')\n        .classed('hidden', false);\n      \n      // Highlight node's pair\n      let associatedLayerIndex = layerIndex - 1;\n      if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n        associatedLayerIndex = layerIndex + 1;\n      }\n  \n      svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', false);\n    }\n  \n    const actPoolDetailViewPreNodeMouseLeaveHandler = (d, i, g) => {\n      // De-highlight the edges\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n  \n      edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .duration(200)\n        .style('stroke', edgeInitColor)\n        .style('stroke-width', edgeStrokeWidth)\n        .style('opacity', edgeOpacity);\n      \n      // De-highlight its border\n      d3.select(g[i]).select('rect.bounding')\n        .classed('hidden', true);\n      \n      // De-highlight node's pair\n      let associatedLayerIndex = layerIndex - 1;\n      if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n        associatedLayerIndex = layerIndex + 1;\n      }\n  \n      svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', true);\n    }\n  \n    const actPoolDetailViewPreNodeClickHandler = (d, i, g) => {\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n  \n      // Click the pre-layer node in detail view has the same effect as clicking\n      // the cur-layer node, which is to open a new detail view window\n      svg.select(`g#layer-${layerIndex + 1}-node-${nodeIndex}`)\n        .node()\n        .dispatchEvent(new Event('click'));\n    }\n  \n    const enterDetailView = (curLayerIndex, i) => {\n      isInActPoolDetailView = true;\n      actPoolDetailViewNodeIndex = i;\n      actPoolDetailViewLayerIndex = curLayerIndex;\n  \n      // Dynamically position the detail view\n      let wholeSvg = d3.select('#cnn-svg');\n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n      let svgWidth = +wholeSvg.style('width').replace('px', '');\n      let detailViewTop = 100 + svgYMid - 260 / 2;\n  \n      let posX = 0;\n      if (curLayerIndex > 5) {\n        posX = nodeCoordinate[curLayerIndex - 1][0].x + 50;\n        posX = posX / 2 - 500 / 2;\n      } else {\n        posX = (svgWidth - nodeCoordinate[curLayerIndex][0].x - nodeLength) / 2;\n        posX = nodeCoordinate[curLayerIndex][0].x + nodeLength + posX - 500 / 2;\n  \n      }\n  \n      const detailview = document.getElementById('detailview');\n      detailview.style.top = `${detailViewTop}px`;\n      detailview.style.left = `${posX}px`;\n      detailview.style.position = 'absolute';\n  \n      // Hide all edges\n      let unimportantEdges = svg.select('g.edge-group')\n        .selectAll('.edge')\n        .filter(d => {\n          return d.targetLayerIndex !== curLayerIndex;\n        })\n        .style('visibility', 'hidden');\n      \n      // Disable UI\n      disableControl = true;\n      \n      // Hide input annotaitons\n      svg.select('.input-annotation')\n        .classed('hidden', true);\n  \n      // Hide legends\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\n        .classed('hidden', true);\n      svg.selectAll('.input-legend').classed('hidden', true);\n      svg.selectAll('.output-legend').classed('hidden', true);\n      svg.select(`#${layerLegendDict[curLayerIndex][selectedScaleLevel]}`)\n        .classed('hidden', false);\n  \n      // Add overlay rects\n      let leftX = nodeCoordinate[curLayerIndex - 1][i].x;\n      // +5 to cover the detailed mode long label\n      let rightStart = nodeCoordinate[curLayerIndex][i].x + nodeLength + 5;\n  \n      // Compute the left and right overlay rect width\n      let rightWidth = width - rightStart - overlayRectOffset / 2;\n      let leftWidth = leftX - nodeCoordinate[0][0].x;\n  \n      // The overlay rects should be symmetric\n      if (rightWidth > leftWidth) {\n        let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n          {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n        addOverlayGradient('overlay-gradient-right', stops);\n        \n        let leftEndOpacity = 0.85 + (0.95 - 0.85) * (leftWidth / rightWidth);\n        stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: leftEndOpacity},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n        addOverlayGradient('overlay-gradient-left', stops);\n      } else {\n        let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n          {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n        addOverlayGradient('overlay-gradient-left', stops);\n  \n        let rightEndOpacity = 0.85 + (0.95 - 0.85) * (rightWidth / leftWidth);\n        stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: rightEndOpacity}];\n        addOverlayGradient('overlay-gradient-right', stops);\n      }\n      \n      addOverlayRect('overlay-gradient-right',\n        rightStart + overlayRectOffset / 2 + 0.5,\n        0, rightWidth, height + svgPaddings.top);\n      \n      addOverlayRect('overlay-gradient-left',\n        nodeCoordinate[0][0].x - overlayRectOffset / 2,\n        0, leftWidth, height + svgPaddings.top);\n  \n      svg.selectAll('rect.overlay')\n        .on('click', emptySpaceClicked);\n      \n      // Add underneath rectangles\n      let underGroup = svg.select('g.underneath');\n      let padding = 7;\n      for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n        underGroup.append('rect')\n          .attr('class', 'underneath-gateway')\n          .attr('id', `underneath-gateway-${n}`)\n          .attr('x', nodeCoordinate[curLayerIndex - 1][n].x - padding)\n          .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n          .attr('width', (2 * nodeLength + hSpaceAroundGap) + 2 * padding)\n          .attr('height', nodeLength + 2 * padding)\n          .attr('rx', 10)\n          .style('fill', 'rgba(160, 160, 160, 0.3)')\n          .style('opacity', 0);\n        \n        // Update the event functions for these two layers\n        svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n          .style('pointer-events', 'all')\n          .style('cursor', 'pointer')\n          .on('mouseover', actPoolDetailViewPreNodeMouseOverHandler)\n          .on('mouseleave', actPoolDetailViewPreNodeMouseLeaveHandler)\n          .on('click', actPoolDetailViewPreNodeClickHandler);\n      }\n      underGroup.lower();\n  \n      // Highlight the selcted pair\n      underGroup.select(`#underneath-gateway-${i}`)\n        .style('opacity', 1);\n    }\n  \n    const quitIntermediateView = (curLayerIndex, g, i) => {\n      // If it is the softmax detail view, quit that view first\n      if (isInSoftmax) {\n        svg.select('.logit-layer').remove();\n        svg.select('.logit-layer-lower').remove();\n        svg.selectAll('.plus-symbol-clone').remove();\n  \n        // Instead of removing the paths, we hide them, so it is faster to load in\n        // the future\n        svg.select('.underneath')\n          .selectAll('.logit-lower')\n          .style('opacity', 0);\n  \n        softmaxDetailViewStore.set({\n            show: false,\n            logits: []\n        })\n  \n        allowsSoftmaxAnimationStore.set(false);\n      }\n      isInSoftmaxStore.set(false);\n      isInIntermediateView = false;\n  \n      // Show the legend\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\n        .classed('hidden', !detailedMode);\n      svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n      svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n  \n      // Recover control panel UI\n      disableControl = false;\n  \n      // Recover the input layer node's event\n      for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n        svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n          .on('mouseover', nodeMouseOverHandler)\n          .on('mouseleave', nodeMouseLeaveHandler)\n          .on('click', nodeClickHandler);\n      }\n  \n      // Clean up the underneath rects\n      svg.select('g.underneath')\n        .selectAll('rect')\n        .remove();\n      detailedViewNum = undefined;\n  \n      // Highlight the previous layer and this node\n      svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n        .selectAll('rect.bounding')\n        .style('stroke-width', 1);\n      \n      d3.select(g[i])\n        .select('rect.bounding')\n        .style('stroke-width', 1);\n  \n      // Highlight the labels\n      svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n        g#layer-detailed-label-${curLayerIndex - 1},\n        g#layer-label-${curLayerIndex},\n        g#layer-detailed-label-${curLayerIndex}`)\n        .style('font-weight', 'normal');\n  \n      // Also unclick the node\n      // Record the current clicked node\n      selectedNode.layerName = '';\n      selectedNode.index = -1;\n      selectedNode.data = null;\n      isExitedFromCollapse = true;\n  \n      // Remove the intermediate layer\n      let intermediateLayer = svg.select('g.intermediate-layer');\n  \n      // Kill the infinite animation loop\n      shouldIntermediateAnimateStore.set(false);\n  \n      intermediateLayer.transition('remove')\n        .duration(500)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .on('end', (d, i, g) => { d3.select(g[i]).remove()});\n      \n      // Remove the output node overlay mask\n      svg.selectAll('.overlay-group').remove();\n      \n      // Remove the overlay rect\n      svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\n        .transition('remove')\n        .duration(500)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .on('end', (d, i, g) => {\n          svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\n          svg.selectAll('defs.overlay-gradient').remove();\n        });\n      \n      // Recover the layer if we have drdrawn it\n      if (needRedraw[0] !== undefined) {\n        let redrawRange = cnnLayerRanges[selectedScaleLevel][needRedraw[0]];\n        if (needRedraw[1] !== undefined) {\n          svg.select(`g#layer-${needRedraw[0]}-node-${needRedraw[1]}`)\n            .select('image.node-image')\n            .each((d, i, g) => drawOutput(d, i, g, redrawRange));\n        } else {\n          svg.select(`g#cnn-layer-group-${needRedraw[0]}`)\n            .selectAll('image.node-image')\n            .each((d, i, g) => drawOutput(d, i, g, redrawRange));\n        }\n      }\n      \n      // Move all layers to their original place\n      for (let i = 0; i < numLayers; i++) {\n        moveLayerX({layerIndex: i, targetX: nodeCoordinate[i][0].x,\n          disable:false, delay:500, opacity: 1});\n      }\n  \n      moveLayerX({layerIndex: numLayers - 2,\n        targetX: nodeCoordinate[numLayers - 2][0].x, opacity: 1,\n        disable:false, delay:500, onEndFunc: () => {\n          // Show all edges on the last moving animation end\n          svg.select('g.edge-group')\n            .style('visibility', 'visible');\n  \n          // Recover the input annotation\n          svg.select('.input-annotation')\n            .classed('hidden', false);\n        }});\n    }\n  \n    const nodeClickHandler = (d, i, g) => {\n      d3.event.stopPropagation();\n      let nodeIndex = d.index;\n  \n      // Record the current clicked node\n      selectedNode.layerName = d.layerName;\n      selectedNode.index = d.index;\n      selectedNode.data = d;\n      selectedNode.domI = i;\n      selectedNode.domG = g;\n  \n      // Record data for detailed view.\n      if (d.type === 'conv' || d.type === 'relu' || d.type === 'pool') {\n        let data = [];\n        for (let j = 0; j < d.inputLinks.length; j++) {\n          data.push({\n            input: d.inputLinks[j].source.output,\n            kernel: d.inputLinks[j].weight,\n            output: d.inputLinks[j].dest.output,\n          })\n        }\n        let curLayerIndex = layerIndexDict[d.layerName];\n        data.colorRange = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n        data.isInputInputLayer = curLayerIndex <= 1;\n        nodeData = data;\n      }\n  \n      let curLayerIndex = layerIndexDict[d.layerName];\n  \n      if (d.type == 'relu' || d.type == 'pool') {\n        isExitedFromDetailedView = false;\n        if (!isInActPoolDetailView) {\n          // Enter the act pool detail view\n          enterDetailView(curLayerIndex, d.index);\n        } else {\n          if (d.index === actPoolDetailViewNodeIndex) {\n            // Quit the act pool detail view\n            quitActPoolDetailView();\n          } else {\n            // Switch the detail view input to the new clicked pair\n  \n            // Remove the previous selection effect\n            svg.select(`g#layer-${curLayerIndex}-node-${actPoolDetailViewNodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', true);\n  \n            svg.select(`g#layer-${curLayerIndex - 1}-node-${actPoolDetailViewNodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', true);\n            \n            let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n        \n            edgeGroup.selectAll(`path.edge-${curLayerIndex}-${actPoolDetailViewNodeIndex}`)\n              .transition()\n              .ease(d3.easeCubicOut)\n              .duration(200)\n              .style('stroke', edgeInitColor)\n              .style('stroke-width', edgeStrokeWidth)\n              .style('opacity', edgeOpacity);\n            \n            let underGroup = svg.select('g.underneath');\n            underGroup.select(`#underneath-gateway-${actPoolDetailViewNodeIndex}`)\n              .style('opacity', 0);\n          \n            // Add selection effect on the new selected pair\n            svg.select(`g#layer-${curLayerIndex}-node-${nodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', false);\n  \n            svg.select(`g#layer-${curLayerIndex - 1}-node-${nodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', false);\n  \n            edgeGroup.selectAll(`path.edge-${curLayerIndex}-${nodeIndex}`)\n              .raise()\n              .transition()\n              .ease(d3.easeCubicInOut)\n              .duration(400)\n              .style('stroke', edgeHoverColor)\n              .style('stroke-width', '1')\n              .style('opacity', 1);\n  \n            underGroup.select(`#underneath-gateway-${nodeIndex}`)\n              .style('opacity', 1);\n  \n            actPoolDetailViewNodeIndex = nodeIndex;\n          }\n        }\n      }\n  \n      // Enter the second view (layer-view) when user clicks a conv node\n      if ((d.type === 'conv' || d.layerName === 'output') && !isInIntermediateView) {\n        prepareToEnterIntermediateView(d, g, nodeIndex, curLayerIndex);\n  \n        if (d.layerName === 'conv_1_1') {\n          drawConv1(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n  \n        else if (d.layerName === 'conv_1_2') {\n          drawConv2(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n  \n        else if (d.layerName === 'conv_2_1') {\n          drawConv3(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n        \n        else if (d.layerName === 'conv_2_2') {\n          drawConv4(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n      \n        else if (d.layerName === 'output') {\n          drawFlatten(curLayerIndex, d, nodeIndex, width, height);\n        }\n      }\n      // Quit the layerview\n      else if ((d.type === 'conv' || d.layerName === 'output') && isInIntermediateView) {\n        quitIntermediateView(curLayerIndex, g, i);\n      }\n    }\n  \n    const nodeMouseOverHandler = (d, i, g) => {\n      // if (isInIntermediateView || isInActPoolDetailView) { return; }\n      if (isInIntermediateView) { return; }\n  \n      // Highlight the edges\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n        .raise()\n        .transition()\n        .ease(d3.easeCubicInOut)\n        .duration(400)\n        .style('stroke', edgeHoverColor)\n        .style('stroke-width', '1')\n        .style('opacity', 1);\n      \n      // Highlight its border\n      d3.select(g[i]).select('rect.bounding')\n        .classed('hidden', false);\n      \n      // Highlight source's border\n      if (d.inputLinks.length === 1) {\n        let link = d.inputLinks[0];\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', false);\n      } else {\n        svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n          .selectAll('g.node-group')\n          .selectAll('rect.bounding')\n          .classed('hidden', false);\n      }\n  \n      // Highlight the output text\n      if (d.layerName === 'output') {\n        d3.select(g[i])\n          .select('.output-text')\n          .style('opacity', 0.8)\n          .style('text-decoration', 'underline');\n      }\n  \n      /* Use the following commented code if we have non-linear model\n      d.inputLinks.forEach(link => {\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', false);\n      });\n      */\n    }\n  \n    const nodeMouseLeaveHandler = (d, i, g) => {\n      // Screenshot\n      // return;\n  \n      if (isInIntermediateView) { return; }\n      \n      // Keep the highlight if user has clicked\n      if (isInActPoolDetailView || (\n        d.layerName !== selectedNode.layerName ||\n        d.index !== selectedNode.index)){\n        let layerIndex = layerIndexDict[d.layerName];\n        let nodeIndex = d.index;\n        let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n        \n        edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n          .transition()\n          .ease(d3.easeCubicOut)\n          .duration(200)\n          .style('stroke', edgeInitColor)\n          .style('stroke-width', edgeStrokeWidth)\n          .style('opacity', edgeOpacity);\n  \n        d3.select(g[i]).select('rect.bounding').classed('hidden', true);\n  \n        if (d.inputLinks.length === 1) {\n          let link = d.inputLinks[0];\n          let layerIndex = layerIndexDict[link.source.layerName];\n          let nodeIndex = link.source.index;\n          svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n        } else {\n          svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n            .selectAll('g.node-group')\n            .selectAll('rect.bounding')\n            .classed('hidden', d => d.layerName !== selectedNode.layerName ||\n              d.index !== selectedNode.index);\n        }\n  \n        // Dehighlight the output text\n        if (d.layerName === 'output') {\n          d3.select(g[i])\n            .select('.output-text')\n            .style('fill', 'black')\n            .style('opacity', 0.5)\n            .style('text-decoration', 'none');\n        }\n  \n        /* Use the following commented code if we have non-linear model\n        d.inputLinks.forEach(link => {\n          let layerIndex = layerIndexDict[link.source.layerName];\n          let nodeIndex = link.source.index;\n          svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n        });\n        */\n      }\n    }\n    let logits = [-4.28, 2.96, -0.38, 5.24, -7.56, -3.43, 8.63, 2.63, 6.30, 0.68];\n    let selectedI = 4;\n  \n    onMount(async () => {\n      // Create SVG\n      wholeSvg = d3.select(overviewComponent)\n        .select('#cnn-svg');\n      svg = wholeSvg.append('g')\n        .attr('class', 'main-svg')\n        .attr('transform', `translate(${svgPaddings.left}, 0)`);\n      svgStore.set(svg);\n  \n      width = Number(wholeSvg.style('width').replace('px', '')) -\n        svgPaddings.left - svgPaddings.right;\n      height = Number(wholeSvg.style('height').replace('px', '')) -\n        svgPaddings.top - svgPaddings.bottom;\n  \n      let cnnGroup = svg.append('g')\n        .attr('class', 'cnn-group');\n      \n      let underGroup = svg.append('g')\n        .attr('class', 'underneath');\n  \n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n      detailedViewAbsCoords = {\n        1 : [600, 100 + svgYMid - 220 / 2, 490, 290],\n        2: [500, 100 + svgYMid - 220 / 2, 490, 290],\n        3 : [700, 100 + svgYMid - 220 / 2, 490, 290],\n        4: [600, 100 + svgYMid - 220 / 2, 490, 290],\n        5: [650, 100 + svgYMid - 220 / 2, 490, 290],\n        6 : [850, 100 + svgYMid - 220 / 2, 490, 290],\n        7 : [100, 100 + svgYMid - 220 / 2, 490, 290],\n        8 : [60, 100 + svgYMid - 220 / 2, 490, 290],\n        9 : [200, 100 + svgYMid - 220 / 2, 490, 290],\n        10 : [300, 100 + svgYMid - 220 / 2, 490, 290],\n      }\n      \n      // Define global arrow marker end\n      svg.append(\"defs\")\n        .append(\"marker\")\n        .attr(\"id\", 'marker')\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 6)\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .style('stroke-width', 1.2)\n        .style('fill', 'gray')\n        .style('stroke', 'gray')\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\n  \n      // Alternative arrow head style for non-interactive annotation\n      svg.append(\"defs\")\n        .append(\"marker\")\n        .attr(\"id\", 'marker-alt')\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 6)\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .style('fill', 'none')\n        .style('stroke', 'gray')\n        .style('stroke-width', 2)\n        .attr(\"d\", \"M-5,-10L10,0L-5,10\");\n      \n      console.time('Construct cnn');\n      model = await loadTrainedModel('PUBLIC_URL/copycat-cnn-explainer/assets/data/copycat-model.json');\n      cnn = await constructCNN(`PUBLIC_URL/copycat-cnn-explainer/assets/img/${selectedImage}`, model);\n      console.timeEnd('Construct cnn');\n      cnnStore.set(cnn);\n  \n      // Ignore the flatten layer for now\n      let flatten = cnn[cnn.length - 2];\n      cnn.splice(cnn.length - 2, 1);\n      cnn.flatten = flatten;\n      console.log(cnn);\n  \n      updateCNNLayerRanges();\n  \n      // Create and draw the CNN view\n      drawCNN(width, height, cnnGroup, nodeMouseOverHandler,\n        nodeMouseLeaveHandler, nodeClickHandler);\n    })\n  \n    const detailedButtonClicked = () => {\n      detailedMode = !detailedMode;\n      detailedModeStore.set(detailedMode);\n  \n      if (!isInIntermediateView){\n        // Show the legend\n        svg.selectAll(`.${selectedScaleLevel}-legend`)\n          .classed('hidden', !detailedMode);\n        \n        svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n        svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n      }\n      \n      // Switch the layer name\n      svg.selectAll('.layer-detailed-label')\n        .classed('hidden', !detailedMode);\n      \n      svg.selectAll('.layer-label')\n        .classed('hidden', detailedMode);\n    }\n  \n    const imageOptionClicked = async (e) => {\n      let newImageName = d3.select(e.target).attr('data-imageName');\n  \n      if (newImageName !== selectedImage) {\n        selectedImage = newImageName;\n  \n        // Re-compute the CNN using the new input image\n        cnn = await constructCNN(`PUBLIC_URL/copycat-cnn-explainer/assets/img/${selectedImage}`, model);\n  \n        // Ignore the flatten layer for now\n        let flatten = cnn[cnn.length - 2];\n        cnn.splice(cnn.length - 2, 1);\n        cnn.flatten = flatten;\n        cnnStore.set(cnn);\n  \n        // Update all scales used in the CNN view\n        updateCNNLayerRanges();\n        updateCNN();\n      }\n    }\n  \n    const customImageClicked = () => {\n  \n      // Case 1: there is no custom image -> show the modal to get user input\n      if (customImageURL === null) {\n        modalInfo.show = true;\n        modalInfo.preImage = selectedImage;\n        modalStore.set(modalInfo);\n      }\n  \n      // Case 2: there is an existing custom image, not the focus -> switch to this image\n      else if (selectedImage !== 'custom') {\n        let fakeEvent = {detail: {url: customImageURL}};\n        handleCustomImage(fakeEvent);\n      }\n  \n      // Case 3: there is an existing custom image, and its the focus -> let user\n      // upload a new image\n      else {\n        modalInfo.show = true;\n        modalInfo.preImage = selectedImage;\n        modalStore.set(modalInfo);\n      }\n  \n      if (selectedImage !== 'custom') {\n        selectedImage = 'custom';\n      }\n  \n    }\n  \n    const handleModalCanceled = (event) => {\n      // User cancels the modal without a successful image, so we restore the\n      // previous selected image as input\n      selectedImage = event.detail.preImage;\n    }\n  \n    const handleCustomImage = async (event) => {\n      // User gives a valid image URL\n      customImageURL = event.detail.url;\n  \n      // Re-compute the CNN using the new input image\n      cnn = await constructCNN(customImageURL, model);\n  \n      // Ignore the flatten layer for now\n      let flatten = cnn[cnn.length - 2];\n      cnn.splice(cnn.length - 2, 1);\n      cnn.flatten = flatten;\n      cnnStore.set(cnn);\n  \n      // Update the UI\n      let customImageSlot = d3.select(overviewComponent)\n        .select('.custom-image').node();\n      drawCustomImage(customImageSlot, cnn[0]);\n  \n      // Update all scales used in the CNN view\n      updateCNNLayerRanges();\n      updateCNN();\n    }\n  \n    function handleExitFromDetiledConvView(event) {\n      if (event.detail.text) {\n        detailedViewNum = undefined;\n        svg.select(`rect#underneath-gateway-${selectedNodeIndex}`)\n          .style('opacity', 0);\n        selectedNodeIndex = -1; \n      }\n    }\n  \n    function handleExitFromDetiledPoolView(event) {\n      if (event.detail.text) {\n        quitActPoolDetailView();\n        isExitedFromDetailedView = true;\n      }\n    }\n  \n    function handleExitFromDetiledActivationView(event) {\n      if (event.detail.text) {\n        quitActPoolDetailView();\n        isExitedFromDetailedView = true;\n      }\n    }\n  \n    function handleExitFromDetiledSoftmaxView(event) {\n      softmaxDetailViewInfo.show = false;\n      softmaxDetailViewStore.set(softmaxDetailViewInfo);\n    }\n  \n  </script>\n  \n  <style>\n    .overview {\n      padding: 0;\n      height: 100%;\n      width: 100%;\n      display: flex;\n      position: relative;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: flex-start;\n    }\n  \n    .control-container {\n      padding: 5px 20px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n    }\n  \n    .right-control {\n      display: flex;\n    }\n  \n    .left-control {\n      display: flex;\n      align-items: center;\n    }\n  \n    .control > .select > #level-select {\n      padding-left: 2em;\n      padding-right: 2em;\n    }\n  \n    .cnn {\n      width: 100%;\n      padding: 0;\n      background: var(--light-gray);\n      display: flex;\n    }\n  \n    svg {\n      margin: 0 auto;\n      min-height: 490px;\n      max-height: 700px;\n      height: calc(100vh - 100px);\n      width: 100vw;\n    }\n  \n    .is-very-small {\n      font-size: 12px;\n    }\n  \n    #detailed-button {\n      margin-right: 10px;\n      color: #dbdbdb;\n      transition: border-color 300ms ease-in-out, color 200ms ease-in-out;\n    }\n  \n    #detailed-button.is-activated, #detailed-button.is-activated:hover {\n      color: #3273dc;\n      border-color: #3273dc;\n    }\n  \n    #detailed-button:hover {\n      color: #b5b5b5;\n    }\n  \n    #hover-label {\n      transition: opacity 300ms ease-in-out;\n      text-overflow: ellipsis;\n      pointer-events: none;\n      margin-left: 5px;\n    }\n  \n    .image-container {\n      width: 40px;\n      height: 40px;\n      border-radius: 4px;\n      display: inline-block;\n      position: relative;\n      border: 2.5px solid #1E1E1E;\n      margin-right: 10px;\n      cursor: pointer;\n      pointer-events: all;\n      transition: border 300ms ease-in-out;\n    }\n  \n    .image-container img {\n      object-fit: cover;\n      max-width: 100%;\n      max-height: 100%;\n      z-index: -1;\n      transition: opacity 300ms ease-in-out;\n    }\n  \n    .image-container.inactive {\n      border: 2.5px solid rgb(220, 220, 220);\n    }\n  \n    .image-container.inactive > img {\n      opacity: 0.3;\n    }\n  \n    .image-container.inactive:hover > img {\n      opacity: 0.6;\n    }\n  \n    .image-container.inactive.disabled {\n      border: 2.5px solid rgb(220, 220, 220);\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive.disabled:hover {\n      border: 2.5px solid rgb(220, 220, 220);\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive.disabled > img {\n      opacity: 0.3;\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive.disabled:hover > img {\n      opacity: 0.3;\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive > .edit-icon {\n      color: #BABABA;\n    }\n  \n    .image-container.inactive:hover > .edit-icon {\n      color: #777777;\n    }\n  \n    .image-container.inactive:hover {\n      border: 2.5px solid #1E1E1E;\n    }\n  \n    .edit-icon {\n      position: absolute;\n      bottom: -6px;\n      right: -7px;\n      font-size: 7px;\n      color: #1E1E1E;\n      transition: color 300ms ease-in-out;\n    }\n  \n    :global(canvas) {\n      image-rendering: crisp-edges;\n    }\n  \n    :global(.layer-label), :global(.layer-detailed-label), :global(.layer-intermediate-label) {\n      font-size: 12px;\n      opacity: 0.8;\n      text-anchor: middle;\n    }\n  \n    :global(.colorLegend) {\n      font-size: 10px;\n    }\n  \n    :global(.legend) {\n      transition: opacity 400ms ease-in-out;\n    }\n  \n    :global(.legend > rect) {\n      opacity: 1;\n    }\n  \n    :global(.legend text), :global(.legend line), :global(.legend path) {\n      opacity: 0.7;\n    }\n  \n    :global(.legend#output-legend > rect) {\n      opacity: 1;\n    }\n  \n    :global(.hidden) {\n      opacity: 0;\n      pointer-events: none;\n    }\n  \n    :global(.very-strong) {\n      stroke-width: 3px;\n    }\n  \n    :global(.bounding), :global(.edge), :global(.edge-group),\n    :global(foreignObject), :global(.bounding-flatten),\n    :global(.underneath-gateway), :global(.input-annotation) {\n      transition: opacity 300ms ease-in-out;\n    }\n  \n    :global(rect.bounding) {\n      transition: stroke-width 800ms ease-in-out, opacity 300ms ease-in-out;\n    }\n  \n    :global(.annotation-text) {\n      pointer-events: none;\n      font-size: 10px;\n      font-style: italic;\n      fill: gray;\n    }\n  \n    /* Change the cursor style on the detailed view input and output matrices */\n    :global(rect.square) {\n      cursor: crosshair;\n    }\n  \n    :global(.animation-control-button) {\n      font-family: FontAwesome;\n      opacity: 0.8;\n      cursor: pointer;\n    }\n  \n    .model-name {\n      font-size: 23px;\n      fill: rgb(255, 255, 255);\n      dominant-baseline: baseline;\n      font-family: 'Neucha';\n      margin-right: 10px;\n\t  }\n  </style>\n  \n  <div class=\"overview\"\n    bind:this={overviewComponent}>\n  \n    <div class=\"control-container\">\n  \n      <div class=\"left-control\">\n        <span class='model-name'>Oracle Model:</span>\n\n        {#each imageOptions as image, i}\n          <div class=\"image-container\"\n            on:click={disableControl ? () => {} : imageOptionClicked}\n            class:inactive={selectedImage !== image.file}\n            class:disabled={disableControl}\n            data-imageName={image.file}>\n            <img src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/{image.file}\"\n              alt=\"image option\"\n              title=\"{image.class}\"\n              data-imageName={image.file}/>\n          </div>\n        {/each}\n  \n        <!-- The plus button -->\n          <div class=\"image-container\"\n            class:inactive={selectedImage !== 'custom'}\n            class:disabled={disableControl}\n            data-imageName={'custom'}\n            on:click={disableControl ? () => {} : customImageClicked}>\n  \n            <img class=\"custom-image\"\n              src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/plus.svg\"\n              alt=\"plus button\"\n              title=\"Add new input image\"\n              data-imageName=\"custom\"/>\n  \n            <span class=\"fa-stack edit-icon\"\n              class:hidden={customImageURL === null}>\n              <i class=\"fas fa-circle fa-stack-2x\"></i>\n              <i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i>\n            </span>\n  \n          </div>\n  \n        <button class=\"button is-very-small is-link is-light\"\n          id=\"hover-label\"\n          style=\"opacity:{hoverInfo.show ? 1 : 0}\">\n          <span class=\"icon\" style=\"margin-right: 5px;\">\n            <i class=\"fas fa-crosshairs \"></i>\n          </span>\n          <span id=\"hover-label-text\">\n            {hoverInfo.text}\n          </span>\n        </button>\n      </div>\n  \n      <div class=\"right-control\">\n  \n        <button class=\"button is-very-small\"\n          id=\"detailed-button\"\n          disabled={disableControl}\n          class:is-activated={detailedMode}\n          on:click={detailedButtonClicked}>\n          <span class=\"icon\">\n            <i class=\"fas fa-eye\"></i>\n          </span>\n          <span id=\"hover-label-text\">\n            Show detail\n          </span>\n        </button>\n  \n        <div class=\"control is-very-small has-icons-left\"\n          title=\"Change color scale range\">\n          <span class=\"icon is-left\">\n            <i class=\"fas fa-palette\"></i>\n          </span>\n  \n          <div class=\"select\">\n            <select bind:value={selectedScaleLevel} id=\"level-select\"\n              disabled={disableControl}>\n              <option value=\"local\">Unit</option>\n              <option value=\"module\">Module</option>\n              <option value=\"global\">Global</option>\n            </select>\n          </div>\n        </div>\n  \n      </div>\n      \n    </div>\n  \n    <div class=\"cnn\">\n      <svg id=\"cnn-svg\"></svg>\n    </div>\n  </div>\n  \n  <div id='detailview'>\n    {#if selectedNode.data && selectedNode.data.type === 'conv' && selectedNodeIndex != -1}\n      <ConvolutionView on:message={handleExitFromDetiledConvView} input={nodeData[selectedNodeIndex].input} \n                        kernel={nodeData[selectedNodeIndex].kernel}\n                        dataRange={nodeData.colorRange}\n                        colorScale={nodeData.inputIsInputLayer ?\n                          layerColorScales.input[0] : layerColorScales.conv}\n                        isInputInputLayer={nodeData.inputIsInputLayer}\n                        isExited={isExitedFromCollapse}/>\n    {:else if selectedNode.data && selectedNode.data.type === 'relu'}\n      <ActivationView on:message={handleExitFromDetiledActivationView} input={nodeData[0].input} \n                      output={nodeData[0].output}\n                      dataRange={nodeData.colorRange}\n                      isExited={isExitedFromDetailedView}/>\n    {:else if selectedNode.data && selectedNode.data.type === 'pool'}\n      <PoolView on:message={handleExitFromDetiledPoolView} input={nodeData[0].input} \n                kernelLength={2}\n                dataRange={nodeData.colorRange}\n                isExited={isExitedFromDetailedView}/>\n    {:else if softmaxDetailViewInfo.show}\n      <SoftmaxView logits={softmaxDetailViewInfo.logits}\n                   logitColors={softmaxDetailViewInfo.logitColors}\n                   selectedI={softmaxDetailViewInfo.selectedI}\n                   highlightI={softmaxDetailViewInfo.highlightI}\n                   outputName={softmaxDetailViewInfo.outputName}\n                   outputValue={softmaxDetailViewInfo.outputValue}\n                   startAnimation={softmaxDetailViewInfo.startAnimation}\n                   on:xClicked={handleExitFromDetiledSoftmaxView}\n                   on:mouseOver={softmaxDetailViewMouseOverHandler}\n                   on:mouseLeave={softmaxDetailViewMouseLeaveHandler}/>\n    {/if}\n  </div>\n  \n  <Modal on:xClicked={handleModalCanceled}\n    on:urlTyped={handleCustomImage}/>\n","// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   * \n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \n   * @param {number} bias The bias assocated to this node.\n   * @param {[[number]]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\nconst constructNNFromJSON = (nnJSON, inputImageArray) => {\n  console.log(nnJSON);\n  console.log(inputImageArray);\n  let nn = [];\n\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = nnJSON[0].input_shape;\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n                                                                                                                   \n  nn.push(inputLayer);\n  let curLayerIndex = 1;\n\n  nnJSON.forEach(layer => {\n    let curLayerNodes = [];\n    let curLayerType;\n\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    let shape = layer.output_shape.slice(0, 2);\n    let bias = 0;\n    let output;\n    if (curLayerType === nodeType.FLATTEN || curLayerType === nodeType.FC) {\n      output = 0;\n    } else {\n      output = init2DArray(shape[0], shape[1], 0);\n    }\n\n    // Add neurons into this layer\n    for (let i = 0; i < layer.num_neurons; i++) {\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        bias = layer.weights[i].bias;\n      }\n      let node = new Node(layer.name, i, curLayerType, bias, output)\n\n      // Connect this node to all previous nodes (create links)\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        // CONV and FC layers have weights in links. Links are one-to-multiple\n        for (let j = 0; j < nn[curLayerIndex - 1].length; j++) {\n          let preNode = nn[curLayerIndex - 1][j];\n          let curLink = new Link(preNode, node, layer.weights[i].weights[j]);\n          preNode.outputLinks.push(curLink);\n          node.inputLinks.push(curLink);\n        }\n      } else if (curLayerType === nodeType.RELU || curLayerType === nodeType.POOL) {\n        // RELU and POOL layers have no weights. Links are one-to-one\n        let preNode = nn[curLayerIndex - 1][i];\n        let link = new Link(preNode, node, null);\n        preNode.outputLinks.push(link);\n        node.inputLinks.push(link);\n      } else if (curLayerType === nodeType.FLATTEN) {\n        // Flatten layer has no weights. Links are multiple-to-one.\n        // Use dummy weights to store the corresponding entry in the previsou\n        // node as (row, column)\n        // The flatten() in tf2.keras has order: channel -> row -> column\n        let preNodeWidth = nn[curLayerIndex - 1][0].output.length,\n          preNodeNum = nn[curLayerIndex - 1].length,\n          preNodeIndex = i % preNodeNum,\n          preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n          preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n          link = new Link(nn[curLayerIndex - 1][preNodeIndex],\n            node, [preNodeRow, preNodeCol]);\n\n        nn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n        node.inputLinks.push(link);\n      }\n      curLayerNodes.push(node);\n    }\n\n    // Add current layer to the NN\n    nn.push(curLayerNodes);\n    curLayerIndex++;\n  });\n\n  return nn;\n}\n\nexport const constructNN = (inputImageFile) => {\n  // Load the saved model file\n  return new Promise((resolve, reject) => {\n    fetch('PUBLIC_URL/copycat-cnn-explainer/assets/data/copycat-nn_10.json')\n      .then(response => {\n        response.json().then(nnJSON => {\n          getInputImageArray(inputImageFile)\n            .then(inputImageArray => {\n              let nn = constructNNFromJSON(nnJSON, inputImageArray);\n              resolve(nn);\n            })\n        });\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n\n// Helper functions\n\n/**\n * Create a 2D array (matrix) with given size and default value.\n * \n * @param {int} height Height (number of rows) for the matrix\n * @param {int} width Width (number of columns) for the matrix\n * @param {int} fill Default value to fill this matrix\n */\nexport const init2DArray = (height, width, fill) => {\n  let array = [];\n  // Itereate through rows\n  for (let r = 0; r < height; r++) {\n    let row = new Array(width).fill(fill);\n    array.push(row);\n  }\n  return array;\n}\n\n/**\n * Dot product of two matrices.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nconst matrixDot = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = 0;\n  for (let i = 0; i < mat1.length; i++){\n    for (let j = 0; j < mat1[0].length; j++){\n      result += mat1[i][j] * mat2[i][j];\n    }\n  }\n  \n  return result;\n}\n\n/**\n * Matrix elementwise addition.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nexport const matrixAdd = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = init2DArray(mat1.length, mat1.length, 0);\n\n  for (let i = 0; i < mat1.length; i++) {\n    for (let j = 0; j < mat1.length; j++) {\n      result[i][j] = mat1[i][j] + mat2[i][j];\n    }\n  }\n\n  return result;\n}\n\n/**\n * 2D slice on a matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} xs First dimension (row) starting index\n * @param {int} xe First dimension (row) ending index\n * @param {int} ys Second dimension (column) starting index\n * @param {int} ye Second dimension (column) ending index\n */\nexport const matrixSlice = (mat, xs, xe, ys, ye) => {\n  return mat.slice(xs, xe).map(s => s.slice(ys, ye));\n}\n\n/**\n * Compute the maximum of a matrix.\n * @param {[[number]]} mat Matrix\n */\nconst matrixMax = (mat) => {\n  let curMax = -Infinity;\n  for (let i = 0; i < mat.length; i++) {\n    for (let j = 0; j < mat[0].length; j++) {\n      if (mat[i][j] > curMax) {\n        curMax = mat[i][j];\n      }\n    }\n  }\n  return curMax;\n}\n\n/**\n * Convert canvas image data into a 3D array with dimension [height, width, 3].\n * Each pixel is in 0-255 scale.\n * @param {[int8]} imageData Canvas image data\n */\nconst imageDataTo3DArray = (imageData) => {\n  // Get image dimension (assume square image)\n  let width = Math.sqrt(imageData.length / 4);\n\n  // Create array placeholder for each channel\n  let imageArray = [init2DArray(width, width, 0), init2DArray(width, width, 0),\n    init2DArray(width, width, 0)];\n  \n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n      channelIndex = i % 4,\n      row = Math.floor(pixelIndex / width),\n      column = pixelIndex % width;\n    \n    if (channelIndex < 3) {\n      imageArray[channelIndex][row][column] = imageData[i];\n    }\n  }\n\n  return imageArray;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.src = imgFile;\n    inputImage.onload = () => {\n      context.drawImage(inputImage, 0, 0,);\n      // Get image data and convert it to a 3D array\n      let imageData = context.getImageData(0, 0, inputImage.width,\n        inputImage.height).data;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      console.log(imageDataTo3DArray(imageData));\n      resolve(imageDataTo3DArray(imageData));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Compute convolutions of one kernel on one matrix (one slice of a tensor).\n * @param {[[number]]} input Input, square matrix\n * @param {[[number]]} kernel Kernel weights, square matrix\n * @param {int} stride Stride size\n * @param {int} padding Padding size\n */\nexport const singleConv = (input, kernel, stride=1, padding=0) => {\n  // TODO: implement padding\n\n  // Only support square input and kernel\n  console.assert(input.length === input[0].length,\n     'Conv input is not square');\n  console.assert(kernel.length === kernel[0].length,\n    'Conv kernel is not square');\n\n  let stepSize = (input.length - kernel.length) / stride + 1;\n\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  // Window sliding\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(input, r * stride, r * stride + kernel.length,\n        c * stride, c * stride + kernel.length);\n      let dot = matrixDot(curWindow, kernel);\n      result[r][c] = dot;\n    }\n  }\n  return result;\n}\n\n/**\n * Convolution operation. This function update the outputs property of all nodes\n * in the given layer. Previous layer is accessed by the reference in nodes'\n * links.\n * @param {[Node]} curLayer Conv layer.\n */\nconst convolute = (curLayer) => {\n  console.assert(curLayer[0].type === 'conv', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  curLayer.forEach(node => {\n    /*\n     * Accumulate the single conv result matrices from previous channels.\n     * Previous channels (node) are accessed by the reference in Link objects.\n     */\n    let newOutput = init2DArray(node.output.length, node.output.length, 0);\n\n    for (let i = 0; i < node.inputLinks.length; i++) {\n      let curLink = node.inputLinks[i];\n      let curConvResult = singleConv(curLink.source.output, curLink.weight);\n      newOutput = matrixAdd(newOutput, curConvResult);\n    }\n\n    // Add bias to all element in the output\n    let biasMatrix = init2DArray(newOutput.length, newOutput.length, node.bias);\n    newOutput = matrixAdd(newOutput, biasMatrix);\n\n    node.output = newOutput;\n  })\n}\n\n/**\n * Activate matrix mat using ReLU (max(0, x)).\n * @param {[[number]]} mat Matrix\n */\nconst singleRelu = (mat) => {\n  // Only support square matrix\n  console.assert(mat.length === mat[0].length, 'Activating non-square matrix!');\n\n  let width = mat.length;\n  let result = init2DArray(width, width, 0);\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      result[i][j] = Math.max(0, mat[i][j]);\n    }\n  }\n  return result;\n}\n\n/**\n * Update outputs of all nodes in the current ReLU layer. Values of previous\n * layer nodes are accessed by the links stored in the current layer.\n * @param {[Node]} curLayer ReLU layer\n */\nconst relu = (curLayer) => {\n  console.assert(curLayer[0].type === 'relu', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleRelu(preNode.output);\n  }\n}\n\n/**\n * Max pool one matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} kernelWidth Pooling kernel length (only supports 2)\n * @param {int} stride Pooling sliding stride (only supports 2)\n * @param {string} padding Pading method when encountering odd number mat,\n * currently this function only supports 'VALID'\n */\nexport const singleMaxPooling = (mat, kernelWidth=2, stride=2, padding='VALID') => {\n  console.assert(kernelWidth === 2, 'Only supports kernen = [2,2]');\n  console.assert(stride === 2, 'Only supports stride = 2');\n  console.assert(padding === 'VALID', 'Only support valid padding');\n\n  // Handle odd length mat\n  // 'VALID': ignore edge rows and columns\n  // 'SAME': add zero padding to make the mat have even length\n  if (mat.length % 2 === 1 && padding === 'VALID') {\n    mat = matrixSlice(mat, 0, mat.length - 1, 0, mat.length - 1);\n  }\n\n  let stepSize = (mat.length - kernelWidth) / stride + 1;\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(mat, r * stride, r * stride + kernelWidth,\n        c * stride, c * stride + kernelWidth);\n      result[r][c] = matrixMax(curWindow);\n    }\n }\n return result;\n}\n\n/**\n * Max pooling one layer.\n * @param {[Node]} curLayer MaxPool layer\n */\nconst maxPooling = (curLayer) => {\n  console.assert(curLayer[0].type === 'pool', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleMaxPooling(preNode.output);\n  }\n}\n\n/**\n * Flatten a previous 2D layer (conv2d or maxpool2d). The flatten order matches\n * tf2.keras' implementation: channel -> row -> column.\n * @param {[Node]} curLayer Flatten layer\n */\nconst flatten = (curLayer) => {\n  console.assert(curLayer[0].type === 'flatten', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    let coordinate = curNode.inputLinks[0].weight;\n    // Take advantage of the dummy weights\n    curNode.output = preNode.output[coordinate[0]][coordinate[1]];\n  }\n}\n\nconst fullyConnect = (curLayer) => {\n  console.assert(curLayer[0].type === 'fc', 'Wrong layer type');\n  // TODO\n}\n\nexport const tempMain = async () => {\n  let nn = await constructNN('PUBLIC_URL/copycat-cnn-explainer/assets/img/koala.jpeg');\n  convolute(nn[1]);\n  relu(nn[2])\n  convolute(nn[3]);\n  relu(nn[4]);\n  maxPooling(nn[5]);\n  convolute(nn[6]);\n  relu(nn[7])\n  convolute(nn[8]);\n  relu(nn[9]);\n  maxPooling(nn[10]);\n  convolute(nn[11]);\n  relu(nn[12])\n  convolute(nn[13]);\n  relu(nn[14]);\n  maxPooling(nn[15]);\n  flatten(nn[16]);\n  console.log(nn[16].map(d => d.output));\n}\n","import { matrixSlice } from '../../utils/copycat-cnn.js';\n\nexport function array1d(length, f) {\n  return Array.from({length: length}, f ? ((v, i) => f(i)) : undefined);\n}\n\nfunction array2d(height, width, f) {\n  return Array.from({length: height}, (v, i) => Array.from({length: width}, f ? ((w, j) => f(i, j)) : undefined));\n}\n\nexport function generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation) {\n  const outputMapping = array2d(output.length, output.length, (i, j) => array2d(kernelLength, kernelLength));\n  for (let h_out = 0; h_out < output.length; h_out++) {\n    for (let w_out = 0; w_out < output.length; w_out++) {\n      for (let h_kern = 0; h_kern < kernelLength; h_kern++) {\n        for (let w_kern = 0; w_kern < kernelLength; w_kern++) {\n          const h_im = h_out * stride + h_kern * dilation;\n          const w_im = w_out * stride + w_kern * dilation;\n          outputMapping[h_out][w_out][h_kern][w_kern] = h_im * padded_input_size + w_im;\n        }\n      }\n    }\n  }\n  return outputMapping;\n}\n\nexport function compute_input_multiplies_with_weight(hoverH, hoverW, \n                                              padded_input_size, weight_dims, outputMappings, kernelLength) {\n  \n  const [h_weight, w_weight] = weight_dims;\n  const input_multiplies_with_weight = array1d(padded_input_size * padded_input_size);\n  for (let h_weight = 0; h_weight < kernelLength; h_weight++) {\n    for (let w_weight = 0; w_weight < kernelLength; w_weight++) {\n      const flat_input = outputMappings[hoverH][hoverW][h_weight][w_weight];\n      if (typeof flat_input === \"undefined\") continue;\n      input_multiplies_with_weight[flat_input] = [h_weight, w_weight];\n    }\n  }\n  return input_multiplies_with_weight;\n}\n\nexport function getMatrixSliceFromInputHighlights(matrix, highlights, kernelLength) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != undefined) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + kernelLength, indices[0] % matrix.length, indices[0] % matrix.length + kernelLength);\n}\n\nexport function getMatrixSliceFromOutputHighlights(matrix, highlights) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != false) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + 1, indices[0] % matrix.length, indices[0] % matrix.length + 1);\n}\n\n// Edit these values to change size of low-level conv visualization.\nexport function getVisualizationSizeConstraint(imageLength) {\n  let sizeOfGrid = 150;\n  let maxSizeOfGridCell = 20;\n  return sizeOfGrid / imageLength > maxSizeOfGridCell ? maxSizeOfGridCell : sizeOfGrid / imageLength;\n}\n\nexport function getDataRange(image) {\n  let maxRow = image.map(function(row){ return Math.max.apply(Math, row); });\n  let max = Math.max.apply(null, maxRow);\n  let minRow = image.map(function(row){ return Math.min.apply(Math, row); });\n  let min = Math.min.apply(null, minRow);\n  let range = {\n    range: 2 * Math.max(Math.abs(min), Math.abs(max)),\n    min: min,\n    max: max\n  };\n  return range;\n}\n\nexport function copycatgridData(image, constraint=getVisualizationSizeConstraint(image.length)) {\n  // Constrain copycatgrids based on input image size.\n  var data = new Array();\n  var xpos = 1;\n  var ypos = 1;\n  var width = constraint;\n  var height = constraint;\n  for (var row = 0; row < image.length; row++) {\n    data.push( new Array() );\n    for (var column = 0; column < image[0].length; column++) {\n      data[row].push({\n        text: Math.round(image[row][column] * 100) / 100,\n        row: row,\n        col: column,\n        x: xpos,\n        y: ypos,\n        width: width,\n        height: height\n      })\n      xpos += width;\n    }\n    xpos = 1;\n    ypos += height; \n  }\n  return data;\n}","<script>\n  export let data;\n  export let highlights;\n  export let isKernelMath;\n  export let constraint;\n  export let dataRange;\n  export let outputLength = undefined;\n  export let stride = undefined;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { onDestroy } from 'svelte';\n  import { beforeUpdate, afterUpdate } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  let copycatgrid_final;\n  const textConstraintDivisor = 2.6;\n  const standardCellColor = \"ddd\";\n  const dispatch = createEventDispatcher();\n\n  let oldHighlight = highlights;\n  let oldData = data;\n\n  const redraw = () => {\n    d3.select(copycatgrid_final).selectAll(\"#copycatgrid > *\").remove();\n    const constrainedSvgSize = data.length * constraint + 2;\n    var copycatgrid = d3.select(copycatgrid_final).select(\"#copycatgrid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = copycatgrid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    var column = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.8)\n      .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue);\n      })\n      .on('mouseover', function(d) {\n        if (data.length != outputLength) {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / stride), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / stride), outputLength - 1)\n          });\n        } else {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / 1), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / 1), outputLength - 1)\n          });\n        }\n      });\n    if (isKernelMath) {\n      var text = row.selectAll(\".text\")\n        .data(function(d) { return d; })\n        .enter().append(\"text\")\n        .attr(\"class\",\"text\")\n        .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n        .attr(\"x\", function(d) { return d.x + d.width / 2; })\n        .attr(\"y\", function(d) { return d.y + d.height / 2; })\n        .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n          if (isInputLayer){\n            normalizedValue = 1 - d.text;\n          } else {\n            normalizedValue = (d.text + dataRange / 2) / dataRange;\n          }\n          if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n            return 'white';\n          } else {\n            return 'black';\n          }\n        })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"dominant-baseline\", \"middle\")\n        .text(function(d) {\n          return d.text.toString().replace('-', '－');\n        })\n    }\n  }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n\n    if (highlights != oldHighlight) {\n      var copycatgrid = d3.select(copycatgrid_final).select('#copycatgrid').select(\"svg\")\n      copycatgrid.selectAll(\".square\")\n        .style(\"stroke\", (d) => isKernelMath || (highlights.length && highlights[d.row * data.length + d.col]) ? \"black\" : null )\n      oldHighlight = highlights;\n    }\n\n  });\n\n  onMount(() => {\n    redraw();\n  });\n\n</script>\n\n<div style=\"display: inline-block; vertical-align: middle;\" class=\"copycatgrid\"\n  bind:this={copycatgrid_final}>\n  <svg id=\"copycatgrid\" width=100% height=100%></svg>\n</div>","<script>\n  export let data;\n  export let kernel;\n  export let constraint;\n  export let dataRange;\n  export let kernelRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let kernelColorScale = d3.interpolateBrBG;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { afterUpdate } from 'svelte';\n\n  let copycatgridFinal;\n  let copycatlegendFinal;\n  const textConstraintDivisor = 2.6;\n  const multiplicationSymbolPadding = Math.floor(constraint / 3);\n\n  let oldData = data;\n  let oldKernel = kernel;\n\n  // Legend drawn similarly to copycatlegends in overview/intermediate-view.\n  const addOverlayGradient = (gradientID, stops, group) => {\n    if (group === undefined) {\n      group = svg;\n    }\n\n    // Create a gradient\n    let defs = group.append(\"defs\")\n      .attr('class', 'overlay-gradient');\n\n    let gradient = defs.append(\"linearGradient\")\n      .attr(\"id\", gradientID)\n      .attr(\"x1\", \"0%\")\n      .attr(\"x2\", \"100%\")\n      .attr(\"y1\", \"100%\")\n      .attr(\"y2\", \"100%\");\n    \n    stops.forEach(s => {\n      gradient.append('stop')\n        .attr('offset', s.offset)\n        .attr('stop-color', s.color)\n        .attr('stop-opacity', s.opacity);\n    })\n  }\n\n  // Draw the copycatlegend for intermediate layer\n  const redrawDetailedConvViewLegend = (arg) => {\n    let copycatlegendHeight = arg.copycatlegendHeight,\n      range = arg.range,\n      minMax = arg.minMax,\n      width = arg.width,\n      colorScale = arg.colorScale,\n      gradientGap = arg.gradientGap;\n\n    d3.select(copycatlegendFinal).selectAll(\"#copycatlegend > *\").remove();\n    let copycatlegend = d3.select(copycatlegendFinal).select(\"#copycatlegend\")\n      .attr(\"width\", 150 + \"px\")\n      .attr(\"height\", 25 + \"px\")\n      .attr(\"align\",\"center\")\n      .style(\"dominant-baseline\", \"middle\");\n    let detailedViewKernel = copycatlegend.append('g')\n      .attr('transform', `translate(10, 0)`);\n    \n    if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n    if (gradientGap === undefined) { gradientGap = 0; }\n    \n    // Add a copycatlegend color gradient\n    let gradientName = `url(#detailed-kernel-gradient)`;\n    let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    addOverlayGradient(`detailed-kernel-gradient`, stops, detailedViewKernel);\n\n    let copycatlegendScale = d3.scaleLinear()\n      .range([0, width - 1.2])\n      .domain([minMax.min, minMax.max]);\n\n    let copycatlegendAxis = d3.axisBottom()\n      .scale(copycatlegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([minMax.min, 0, minMax.max]);\n    \n    let detailedLegend = detailedViewKernel.append('g')\n      .attr('id', `detailed-copycatlegend-0`)\n    \n    let copycatlegendGroup = detailedLegend.append('g')\n      .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n      .call(copycatlegendAxis);\n    \n    copycatlegendGroup.selectAll('text')\n      .style('font-size', '9px')\n      .style('fill', \"black\");\n    \n    copycatlegendGroup.selectAll('path, line')\n      .style('stroke', \"black\");\n\n    detailedLegend.append('rect')\n      .attr('width', width)\n      .attr('height', copycatlegendHeight)\n      .style('fill', gradientName);\n  }\n\n  // Draw the elementwise dot-product math.\n  const redraw = () => {\n    d3.select(copycatgridFinal).selectAll(\"#copycatgrid > *\").remove();\n    const constrainedSvgSize = kernel ? 2 * (data.length * constraint) + 2 : data.length * constraint + 2;\n    var copycatgrid = d3.select(copycatgridFinal).select(\"#copycatgrid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = copycatgrid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    \n    var columns = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw cells for slice from input matrix.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding : d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y : d.y * 2 })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.5)\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue); \n      })\n      .style(\"stroke\", \"black\");\n    // Draw cells for the kernel.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding: d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height : d.y * 2 + d.height })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height / 2; })\n      .style(\"opacity\", 0.5)\n      // Same colorscale as is used for the flatten layers.\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        return kernelColorScale(normalizedValueWithGap); \n      })\n\n    var texts = row.selectAll(\".text\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw numbers from input matrix slice.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n          if (isInputLayer && normalizedValue < 0.2) {\n            return 'black';\n          } \n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.text; })\n    // Attempted to use FontAwesome icons for the 'x', '+', and '=', but none of these strategies work: https://github.com/FortAwesome/Font-Awesome/issues/12268\n    // Draw 'x' to signify multiplication.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor)) + \"px\")\n      .attr('font-weight', 600)\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding / 2: d.x * 2 + multiplicationSymbolPadding / 2})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", \"black\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return '×' })\n    // Draw kernel values.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        if (normalizedValueWithGap < 0.2 || normalizedValueWithGap > 0.8) {\n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return kernel[d.row][d.col].text; })\n    // Draw '+' to signify the summing of products except for the last kernel cell where '=' is drawn.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor - 1)) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.row == kernel.length - 1 && d.col == kernel.length - 1 ? '=' : '+'; })\n    }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n    if (kernel != oldKernel) {\n      /*\n      redrawDetailedConvViewLegend({\n          copycatlegendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n      });\n      */\n      oldKernel = kernel;\n    }\n  });\n\n  onMount(() => {\n    redraw();\n    /*\n    redrawDetailedConvViewLegend({\n          copycatlegendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n    });\n    */\n  });\n\n</script>\n\n<div class=\"copycatlegend\"\n  bind:this={copycatlegendFinal}>\n  <!-- <svg id=\"copycatlegend\" width=100% height=100%></svg> -->\n</div>\n\n<div class=\"copycatgrid\"\n  bind:this={copycatgridFinal}>\n  <svg id=\"copycatgrid\" width=100% height=100%></svg>\n</div>","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getDataRange,\n    getVisualizationSizeConstraint, generateOutputMappings,\n    getMatrixSliceFromInputHighlights, copycatgridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n  import KernelMathView from './KernelMathView.svelte';\n  // image: nxn array -- prepadded.\n  // kernel: mxm array.\n  // stride: int\n  export let stride;\n  export let dilation\n  export let kernel;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n  export let colorScale;\n  export let isInputInputLayer = false;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernel.length; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernel.length; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = copycatgridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = copycatgridData([0]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n  // lots of replication between mouseover and start-conv. TODO: fix this.\n  function startConvolution(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n      testInputMatrixSlice = copycatgridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = copycatgridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n    testInputMatrixSlice = copycatgridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = copycatgridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startConvolution(stride);\n  let testImage = copycatgridData(image)\n  let testOutput = copycatgridData(output)\n  let testKernel = copycatgridData(kernel)\n  $ : {\n    startConvolution(stride);\n    testImage = copycatgridData(image)\n    testOutput = copycatgridData(output)\n    testKernel = copycatgridData(kernel)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)}\n      dataRange={dataRange} stride={stride} colorScale={colorScale}\n      isInputLayer={isInputInputLayer}/>\n</div>\n<div class=\"column has-text-centered\">\n  <KernelMathView data={testInputMatrixSlice} kernel={testKernel} constraint={getVisualizationSizeConstraint(kernel.length)}\n                  dataRange={dataRange} kernelRange={getDataRange(kernel)} colorScale={colorScale}\n                  isInputLayer={isInputInputLayer}/>\n  <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernel.length)} dataRange={dataRange}/>\n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false}\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport ConvolutionAnimator from './ConvolutionAnimator.svelte';\n  import { singleConv } from '../../utils/copycat-cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernel;\n  export let dataRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputInputLayer = false;\n  export let isExited = false;\n  // export let output;\n  \n  const dispatch = createEventDispatcher();\n\tlet stride = 1;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleConv(input, kernel, stride);\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleConv(input, kernel, stride);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#copycat-cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-convolution`);\n    scroll.animateScroll(anchor);\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    isExited = true;\n    dispatch('message', {\n      text: isExited\n    });\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\" id=\"copycatdetailview-container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          Convolution\n        </div>\n\n        <div class=\"buttons\">\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container is-centered\">\n        <ConvolutionAnimator on:message={handlePauseFromInteraction} \n          kernel={kernel} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} colorScale={colorScale}\n          isInputInputLayer={isInputInputLayer} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    getVisualizationSizeConstraint, getMatrixSliceFromInputHighlights, copycatgridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  let copycatgridInputMatrixSlice = copycatgridData([[0]]);\n  let copycatgridOutputMatrixSlice = copycatgridData([[0]]);\n  let inputHighlights = array1d(image.length * image.length, (i) => true);\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = array1d(image.length * image.length, (i) => true);\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n\n  // lots of replication between mouseover and start-relu. TODO: fix this.\n  function startRelu() {\n    counter = 0;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      inputHighlights = array1d(image.length * image.length, (i) => undefined);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights[animatedH * output.length + animatedW] = true;\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n      copycatgridInputMatrixSlice = copycatgridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      copycatgridOutputMatrixSlice = copycatgridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = array1d(image.length * image.length, (i) => undefined);\n    inputHighlights[animatedH * output.length + animatedW] = true;\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n    copycatgridInputMatrixSlice = copycatgridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    copycatgridOutputMatrixSlice = copycatgridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startRelu();\n  let copycatgridImage = copycatgridData(image)\n  let copycatgridOutput = copycatgridData(output)\n  $ : {\n    startRelu();\n    copycatgridImage = copycatgridData(image)\n    copycatgridOutput = copycatgridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={copycatgridImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={1}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={copycatgridData([[0]])} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    ,\n    <Dataview data={copycatgridInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={copycatgridOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={20} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={copycatgridOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={1}/>\n</div>","<script>\n\timport ActivationAnimator from './ActivationAnimator.svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let output;\n  export let dataRange;\n  export let isExited;\n\n  const dispatch = createEventDispatcher();\n  let isPaused = false;\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#copycat-cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-relu`);\n    scroll.animateScroll(anchor);\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          ReLU Activation\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n              <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <ActivationAnimator on:message={handlePauseFromInteraction} \n          image={input} output={output} isPaused={isPaused}\n          dataRange={dataRange}/>\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change pixel.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getVisualizationSizeConstraint,\n    generateOutputMappings, getMatrixSliceFromInputHighlights, copycatgridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let stride;\n  export let dilation\n  export let kernelLength;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernelLength; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernelLength; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = copycatgridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = copycatgridData([[0]]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n  \n  let counter;\n\n  // lots of replication between mouseover and start-pool. TODO: fix this.\n  function startMaxPool(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n      testInputMatrixSlice = copycatgridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = copycatgridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n    testInputMatrixSlice = copycatgridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = copycatgridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startMaxPool(stride);\n  let testImage = copycatgridData(image)\n  let testOutput = copycatgridData(output)\n  $ : {\n    startMaxPool(stride);\n    testImage = copycatgridData(image)\n    testOutput = copycatgridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({testImage.length}, {testImage[0].length})\n  </div>\n\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={stride}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={testInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({testOutput.length}, {testOutput[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport PoolAnimator from './PoolAnimator.svelte';\n  import { singleMaxPooling } from '../../utils/copycat-cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernelLength;\n  export let dataRange;\n  export let isExited;\n  \n  const dispatch = createEventDispatcher();\n  // let isExited = false;\n\tlet stride = 2;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleMaxPooling(input);\n  // let dragging = false;\n  // let dragInfo = {x1: 0, x2: 0, y1: 0, y2: 0};\n  // let detailView = d3.select('#copycatdetailview').node();\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleMaxPooling(input);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n    console.log(isPaused)\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#copycat-cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-pooling`);\n    scroll.animateScroll(anchor);\n  }\n\n  // Test dragging detail view, need more work\n  // const detailViewDragStart = (e) => {\n  //   // Record the starting pos\n  //   dragInfo.x1 = 0;\n  //   dragInfo.y1 = 0;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n  \n  //   dragging = true;\n  // }\n\n  // const detailViewDragEnd = (e) => {\n  //   dragging = false;\n  // }\n\n  // const detailViewDragMove = (e) => {\n  //   // Add up move to the starting pos\n  //   dragInfo.x1 = dragInfo.x2 - e.clientX;\n  //   dragInfo.y1 = dragInfo.y2 - e.clientY;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n\n  //   // Move detail view\n  //   detailView.style.top = (detailView.offsetTop - dragInfo.y1) + 'px';\n  //   detailView.style.left = (detailView.offsetLeft - dragInfo.x1) + 'px';\n  // }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n      \n        <div class=\"title-text\">\n          Max Pooling\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <PoolAnimator on:message={handlePauseFromInteraction} \n          kernelLength={kernelLength} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n          <div class=\"annotation-text\">\n            <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n          </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\n  export let logits;\n  export let logitColors;\n  export let selectedI;\n  export let highlightI = -1;\n  export let outputName;\n  export let outputValue;\n  export let startAnimation;\n\n  let softmaxViewComponent;\n  let svg = null;\n  const dispatch = createEventDispatcher();\n  const formater = (n, d) => {\n    if (d === undefined) {\n      return d3.format('.2f')(n);\n    } else {\n      return d3.format(`.${d}f`)(n);\n    }\n  }\n\n  $: highlightI, (() => {\n    if (svg !== null) {\n      svg.selectAll(`.formula-term`)\n        .style('text-decoration', 'none')\n        .style('font-weight', 'normal');\n\n      svg.selectAll(`.formula-term-${highlightI}`)\n      .style('font-weight', 'bold')\n      .style('text-decoration', 'underline');\n    }\n  })();\n\n  $: startAnimation, (() => {\n    if (svg !== null) {\n      svg.select(`.formula-term-${startAnimation.i}`)\n        .transition('softmax-edge')\n        .duration(startAnimation.duration)\n        .style('fill-opacity', 1);\n    }\n  })();\n\n  const mouseOverHandler = (d, i, g, curI) => {\n    highlightI = curI;\n    dispatch('mouseOver', {curI: curI});\n  }\n\n  const mouseLeaveHandler = (d, i, g, curI) => {\n    highlightI = -1;\n    dispatch('mouseLeave', {curI: curI});\n  }\n\n  const handleClickX = () => {\n    dispatch('xClicked', {});\n  }\n\n  function handleScroll() {\n    let svgHeight = Number(d3.select('#copycat-cnn-svg').style('height').replace('px', '')) + 150;\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    let anchor = document.querySelector(`#article-softmax`);\n    scroll.animateScroll(anchor);\n  }\n\n  onMount(() => {\n    svg = d3.select(softmaxViewComponent)\n      .select('#copycatsoftmax-svg');\n\n    let formulaRightGroup = svg.append('g')\n      .attr('class', 'formula-right')\n      .attr('transform', `translate(${10}, ${0})`)\n      .style('font-size', '15px');\n\n    // Denominator\n    let denominatorGroup = formulaRightGroup.append('g')\n      .attr('class', 'denominator')\n      .attr('transform', `translate(${0}, ${58})`);\n      \n    // Add the left (\n    denominatorGroup.append('text')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .text('(');\n\n    // Need to loop through the logits array instead of data-binding because\n    // we want dynamic positioning based on prior '-' occurance\n    let curX = 8;\n    let numOfRows = 4;\n\n    logits.forEach((d, i) => {\n      if (i / numOfRows >= 1 && i % numOfRows === 0) {\n          curX = 8;\n      }\n\n      let curText = denominatorGroup.append('text')\n        .attr('x', curX)\n        .attr('y', Math.floor(i / numOfRows) * 20)\n        .style('cursor', 'crosshair')\n        .style('pointer-events', 'all')\n        .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, i))\n        .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, i))\n        .text(`exp(`);\n      \n      curText.append('tspan')\n        .attr('class', `formula-term-${i} formula-term`)\n        .attr('dx', '1')\n        .style('fill', logitColors[i])\n        .style('fill-opacity', (i === selectedI) || startAnimation.hasInitialized ? 1 : 0)\n        .text(formater(d));\n      \n      curText.append('tspan')\n        .attr('dx', '1')\n        .text(')');\n      \n      let curBBox = curText.node().getBBox();\n      curX += curBBox.width + 4;\n\n      if (i !== logits.length - 1) {\n        denominatorGroup.append('text')\n          .attr('x', curX)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .text('+');\n        curX += 14;\n      } else {\n        denominatorGroup.append('text')\n          .attr('x', curX-2)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .style('fill', 'gray')\n          .text(')');\n      }\n    })\n\n    denominatorGroup.selectAll('text')\n      .data(logits)\n      .enter()\n      .append('text')\n      .attr('x', (d, i) => 40 * i)\n      .attr('y', 0)\n      .text(d => formater(d));\n    \n    // Calculate the dynamic denominator group width\n    let denominatorGroupBBox = denominatorGroup.node().getBBox();\n\n    // Draw the fraction line\n    formulaRightGroup.append('line')\n      .attr('class', 'separation-line')\n      .attr('x1', -5)\n      .attr('x2', denominatorGroupBBox.width + 5)\n      .attr('y1', 32)\n      .attr('y2', 32)\n      .style('stroke-width', 1.2)\n      .style('stroke', 'gray');\n    \n    // Draw the numerator\n    let numeratorGroup = formulaRightGroup.append('g')\n      .attr('class', 'numerator-group')\n      .attr('transform', `translate(${0}, ${20})`);\n    \n    let numeratorText = numeratorGroup.append('text')\n      .attr('x', denominatorGroupBBox.x + denominatorGroupBBox.width / 2)\n      .attr('y', 0)\n      .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, selectedI))\n      .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, selectedI))\n      .style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .style('text-anchor', 'middle')\n      .text('exp(');\n\n    numeratorText.append('tspan')\n      .attr('class', `formula-term-${selectedI} formula-term`)\n      .attr('dx', 1)\n      .style('fill', logitColors[selectedI])\n      .text(`${formater(logits[selectedI])}`);\n\n    numeratorText.append('tspan')\n       .attr('dx', 1)\n      .text(')');\n    \n    // Draw the left part of the formula\n    let formulaLeftGroup = svg.append('g')\n      .attr('class', 'formula-left')\n      .attr('transform', `translate(${395}, ${32})`);\n    \n    let softmaxText = formulaLeftGroup.append('text')\n      .attr('x', 20)\n      .attr('dominant-baseline', 'middle')\n      .text(`${formater(outputValue, 4)}`);\n    \n    let softmaxTextBBox = softmaxText.node().getBBox();\n    \n    formulaLeftGroup.append('text')\n      .attr('dominant-baseline', 'middle')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .style('font-weight', 'bold')\n      .text('=');\n\n  })\n\n</script>\n\n<style>\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 6px;\n    right: 10px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .box {\n    padding: 5px 10px 15px 10px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg {\n    margin: 10px 0 12px 0;\n  }\n</style>\n\n<div class=\"container\" bind:this={softmaxViewComponent}>\n  <div class=\"box\">\n\n    <div class=\"buttons\">\n      <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n        <i class=\"fas fa-info-circle\"></i>\n      </div>\n\n      <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n        <i class=\"fas control-icon fa-times-circle\"></i>\n      </div>\n    </div>\n\n    <div class=\"title-text\">\n      Softmax Score for <i>\"{outputName}\"</i>\n    </div>\n\n    <svg id=\"copycatsoftmax-svg\" width=\"470\" height=\"105\"/>\n\n    <div class=\"annotation\">\n      <img src='PUBLIC_URL/copycat-cnn-explainer/assets/img/pointer.svg' alt='pointer icon'>\n      <div class=\"annotation-text\">\n        <span style=\"font-weight:600\">Hover over</span> the numbers to highlight logit circles.\n      </div>\n    </div>\n\n  </div>\n</div>\n\n","<script>\n  /* global d3 */\n\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { copycat_modalStore } from '../stores.js';\n\n  let modalComponent;\n  let valiImg;\n  let inputValue = '';\n  let showLoading = false;\n  let files;\n  let usingURL = true;\n  let errorInfo = {\n    show: false,\n    error: ''\n  };\n  const dispatch = createEventDispatcher();\n\n  let modalInfo = {\n    show: false\n  };\n  copycat_modalStore.set(modalInfo);\n  copycat_modalStore.subscribe(value => {modalInfo = value});\n\n  const errorCallback = () => {\n    // The URL is invalid, show an error message on the UI\n    showLoading = false;\n    errorInfo.show = true;\n    errorInfo.error = usingURL ? \"We can't find the image at that URL.\" :\n      \"Not a valid image file.\";\n  }\n\n  const loadCallback = () => {\n    // The URL is valid, but we are not sure if loading it to canvas would be\n    // blocked by crossOrigin setting. Try it here before dispatch to parent.\n\n    // https://stackoverflow.com/questions/13674835/canvas-tainted-by-cross-origin-data\n    let canvas = document.createElement(\"canvas\");\n    let context = canvas.getContext(\"2d\");\n\n    canvas.width = valiImg.width;\n    canvas.height = valiImg.height;\n    context.drawImage(valiImg, 0, 0);\n\n    try {\n      context.getImageData(0, 0, valiImg.width, valiImg.height);\n      // If the foreign image does support CORS -> use this image\n      // dispatch to parent component to use the input image\n      showLoading = false;\n      modalInfo.show = false;\n      copycat_modalStore.set(modalInfo);\n      dispatch('urlTyped', {url: valiImg.src});\n      inputValue = null;\n    } catch(err) {\n      // If the foreign image does not support CORS -> use this image\n      showLoading = false;\n      errorInfo.show = true;\n      errorInfo.error = \"No permission to load this image.\"\n    }\n  }\n\n  const imageUpload = () => {\n    usingURL = false;\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      valiImg.src = event.target.result;\n    }\n    reader.readAsDataURL(files[0]);\n  }\n\n  const crossClicked = () => {\n    modalInfo.show = false;\n    copycat_modalStore.set(modalInfo);\n    // Dispatch the parent component\n    dispatch('xClicked', {preImage: modalInfo.preImage});\n  }\n\n  const addClicked = () => {\n    // Validate the input URL\n    showLoading = true;\n    errorInfo.show = false;\n    valiImg.crossOrigin = \"Anonymous\";\n    valiImg.src = inputValue;\n  }\n\n  onMount(() => {\n    let modal = d3.select(modalComponent)\n      .select('#copycatinput-modal');\n  })\n\n</script>\n\n<style>\n  .modal-card {\n    max-width: 500px;\n  }\n\n  .modal-card-title {\n    font-size: 20px;\n  }\n\n  .modal-card-head {\n    padding: 15px 20px;\n  }\n\n  .modal-card-foot {\n    padding: 12px 20px;\n    justify-content: space-between;\n  }\n\n  .is-smaller {\n    font-size: 15px;\n    padding: 0.5em 0.8em;\n    max-height: 2.2em;\n  }\n\n  .small-font {\n    font-size: 15px;\n  }\n\n  .error-message {\n    font-size: 15px;\n    padding: 0.5em 0;\n    color: #F22B61;\n  }\n\n  .control {\n    width: 100%;\n  }\n\n  .or-label {\n    font-size: 15px;\n    margin: 0 10px;\n    padding: 0.5em 0;\n  }\n\n  .field {\n    display: flex;\n    justify-content: space-between;\n  }\n\n</style>\n\n\n<div class=\"modal-component\"\n  bind:this={modalComponent}>\n\n  <div class=\"modal\"\n    id=\"copycatinput-modal\"\n    class:is-active={modalInfo.show}>\n\n    <div class=\"modal-background\" on:click={crossClicked}></div>\n\n    <div class=\"modal-card\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">Add Input Image</p>\n        <button class=\"delete\" aria-label=\"close\" on:click={crossClicked}></button>\n      </header>\n\n      <section class=\"modal-card-body\">\n        <div class=\"field\">\n          <div class=\"control has-icons-left\"\n            class:is-loading={showLoading}>\n\n            <input class=\"input small-font\" type=\"url\"\n              bind:value={inputValue}\n              placeholder=\"Paste URL of image...\">\n\n            <span class=\"icon small-font is-left\">\n              <i class=\"fas fa-link\"></i>\n            </span>\n\n          </div>\n\n          <div class=\"or-label\">or</div>\n\n          <div class=\"file\">\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"image\"\n                accept=\".png,.jpeg,.tiff,.jpg,.png\"\n                bind:files={files}\n                on:change={imageUpload}>\n              <span class=\"file-cta small-font\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">\n                  Upload\n                </span>\n              </span>\n            </label>\n          </div>\n\n        </div>\n\n      </section>\n\n      <footer class=\"modal-card-foot\">\n\n        <div class=\"error-message\"\n          class:hidden={!errorInfo.show}>\n          {errorInfo.error}\n        </div>\n\n        <div class=\"button-container\">\n          <button class=\"button is-smaller\"\n            on:click={crossClicked}>\n            Cancel\n          </button>\n\n          <button class=\"button is-success is-smaller\"\n            on:click={addClicked}>\n            Add\n          </button>\n        </div>\n\n\n      </footer>\n    </div>\n\n  </div>\n\n  <!-- An invisible image to check if the user input URL is valid -->\n  <img style=\"display: none\"\n    id=\"copycatvali-image\"\n    alt=\"hidden image\"\n    bind:this={valiImg}\n    on:error={errorCallback}\n    on:load={loadCallback} />\n\n</div>\n","import { copycat_overviewConfig } from '../config.js';\n\n// Configs\nconst nodeLength = copycat_overviewConfig.nodeLength;\n\n/**\n * Compute the [minimum, maximum] of a 1D or 2D array.\n * @param {[number]} array \n */\nexport  const getExtent = (array) => {\n  let min = Infinity;\n  let max = -Infinity;\n\n  // Scalar\n  if (array.length === undefined) {\n    return [array, array];\n  }\n\n  // 1D array\n  if (array[0].length === undefined) {\n    for (let i = 0; i < array[0].length; i++) {\n      if (array[i] < min) {\n        min = array[i];\n      } else if (array[i] > max) {\n        max = array[i];\n      }\n    }\n    return [min, max];\n  }\n\n  // 2D array\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array[0].length; j++) {\n      if (array[i][j] < min) {\n        min = array[i][j];\n      } else if (array[i][j] > max) {\n        max = array[i][j];\n      }\n    }\n  }\n  return [min, max];\n}\n\n/**\n * Convert the svg element center coord to document absolute value\n * // Inspired by https://github.com/caged/d3-tip/blob/master/index.js#L286\n * @param {elem} elem \n */\nexport const getMidCoords = (svg, elem) => {\n  if (svg !== undefined) {\n    let targetel = elem;\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n    // Get the absolute coordinate of the E point of element bbox\n    let point = svg.node().ownerSVGElement.createSVGPoint();\n    let matrix = targetel.getScreenCTM();\n    let tbbox = targetel.getBBox();\n    // let width = tbbox.width;\n    let height = tbbox.height;\n\n    point.x += 0;\n    point.y -= height / 2;\n    let bbox = point.matrixTransform(matrix);\n    return {\n      top: bbox.y,\n      left: bbox.x\n    };\n  }\n}\n\n/**\n * Return the output knot (right boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getOutputKnot = (point) => {\n  return {\n    x: point.x + nodeLength,\n    y: point.y + nodeLength / 2\n  };\n}\n\n/**\n * Return the output knot (left boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getInputKnot = (point) => {\n  return {\n    x: point.x,\n    y: point.y + nodeLength / 2\n  }\n}\n\n/**\n * Compute edge data\n * @param {[[[number, number]]]} nodeCoordinate Constructed neuron svg locations\n * @param {[object]} cnn Constructed CNN model\n */\nexport const getLinkData = (nodeCoordinate, cnn) => {\n  let linkData = [];\n  // Create links backward (starting for the first conv layer)\n  for (let l = 1; l < cnn.length; l++) {\n    for (let n = 0; n < cnn[l].length; n++) {\n      let isOutput = cnn[l][n].layerName === 'output';\n      let curTarget = getInputKnot(nodeCoordinate[l][n]);\n      for (let p = 0; p < cnn[l][n].inputLinks.length; p++) {\n        // Specially handle output layer (since we are ignoring the flatten)\n        let inputNodeIndex = cnn[l][n].inputLinks[p].source.index;\n        \n        if (isOutput) {\n          let flattenDimension = cnn[l-1][0].output.length *\n            cnn[l-1][0].output.length;\n          if (inputNodeIndex % flattenDimension !== 0){\n              continue;\n          }\n          inputNodeIndex = Math.floor(inputNodeIndex / flattenDimension);\n        }\n        let curSource = getOutputKnot(nodeCoordinate[l-1][inputNodeIndex]);\n        let curWeight = cnn[l][n].inputLinks[p].weight;\n        linkData.push({\n          source: curSource,\n          target: curTarget,\n          weight: curWeight,\n          targetLayerIndex: l,\n          targetNodeIndex: n,\n          sourceNodeIndex: inputNodeIndex\n        });\n      }\n    }\n  }\n  return linkData;\n}\n\n\n/**\n * Color scale wrapper (support artificially lighter color!)\n * @param {function} colorScale D3 color scale function\n * @param {number} range Color range (max - min)\n * @param {number} value Color value\n * @param {number} gap Tail of the color scale to skip\n */\nexport const gappedColorScale = (colorScale, range, value, gap) => {\n  if (gap === undefined) { gap = 0; }\n  let normalizedValue = (value + range / 2) / range;\n  return colorScale(normalizedValue * (1 - 2 * gap) + gap);\n}","/* global d3, SmoothScroll */\n\nimport {\n  copycat_svgStore, copycat_vSpaceAroundGapStore, copycat_hSpaceAroundGapStore, copycat_cnnStore,\n  copycat_nodeCoordinateStore, copycat_selectedScaleLevelStore, copycat_cnnLayerRangesStore,\n  copycat_detailedModeStore, copycat_cnnLayerMinMaxStore, copycat_hoverInfoStore\n} from '../stores.js';\nimport {\n  getExtent, getLinkData\n} from './draw-utils.js';\nimport { copycat_overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = copycat_overviewConfig.layerColorScales;\nconst nodeLength = copycat_overviewConfig.nodeLength;\nconst numLayers = copycat_overviewConfig.numLayers;\nconst edgeOpacity = copycat_overviewConfig.edgeOpacity;\nconst edgeInitColor = copycat_overviewConfig.edgeInitColor;\nconst edgeStrokeWidth = copycat_overviewConfig.edgeStrokeWidth;\nconst svgPaddings = copycat_overviewConfig.svgPaddings;\nconst gapRatio = copycat_overviewConfig.gapRatio;\nconst classLists = copycat_overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\ncopycat_svgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\ncopycat_vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\ncopycat_hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncopycat_cnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\ncopycat_nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\ncopycat_selectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncopycat_cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncopycat_cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet detailedMode = undefined;\ncopycat_detailedModeStore.subscribe( value => {detailedMode = value;} )\n\n/**\n * Use bounded d3 data to draw one canvas\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {number} range color range map (max - min)\n */\nexport const copycat_drawOutput = (d, i, g, range) => {\n  let image = g[i];\n  let colorScale = layerColorScales[d.type];\n\n  if (d.type === 'input') {\n    colorScale = colorScale[d.index];\n  }\n\n  // Set up a second convas in order to resize image\n  let imageLength = d.output.length === undefined ? 1 : d.output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  if (imageLength === 1) {\n    imageSingleArray[0] = d.output;\n  } else {\n    for (let i = 0; i < imageSingleArray.length; i+=4) {\n      let pixeIndex = Math.floor(i / 4);\n      let row = Math.floor(pixeIndex / imageLength);\n      let column = pixeIndex % imageLength;\n      let color = undefined;\n      if (d.type === 'input' || d.type === 'fc' ) {\n        color = d3.rgb(colorScale(1 - d.output[row][column]))\n      } else {\n        color = d3.rgb(colorScale((d.output[row][column] + range / 2) / range));\n      }\n\n      imageSingleArray[i] = color.r;\n      imageSingleArray[i + 1] = color.g;\n      imageSingleArray[i + 2] = color.b;\n      imageSingleArray[i + 3] = 255;\n    }\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  d3.select(image).attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Draw bar chart to encode the output value\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {function} scale map value to length\n */\nconst copycat_drawOutputScore = (d, i, g, scale) => {\n  let group = d3.select(g[i]);\n  group.select('rect.output-rect')\n    .transition('output')\n    .delay(500)\n    .duration(800)\n    .ease(d3.easeCubicIn)\n    .attr('width', scale(d.output))\n}\n\nexport const copycat_drawCustomImage = (image, inputLayer) => {\n\n  let imageWidth = image.width;\n  // Set up a second convas in order to resize image\n  let imageLength = inputLayer[0].output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n\n    let red = inputLayer[0].output[row][column];\n    let green = inputLayer[1].output[row][column];\n    let blue = inputLayer[2].output[row][column];\n\n    imageSingleArray[i] = red * 255;\n    imageSingleArray[i + 1] = green * 255;\n    imageSingleArray[i + 2] = blue * 255;\n    imageSingleArray[i + 3] = 255;\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = imageWidth * 3;\n  largeCanvas.height = imageWidth * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, imageWidth * 3, imageWidth * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  // d3.select(image).attr('xlink:href', imageDataURL);\n  image.src = imageDataURL;\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create color gradient for the copycatlegend\n * @param {[object]} g d3 group\n * @param {function} colorScale Colormap\n * @param {string} gradientName Label for gradient def\n * @param {number} min Min of copycatlegend value\n * @param {number} max Max of copycatlegend value\n */\nconst getLegendGradient = (g, colorScale, gradientName, min, max) => {\n  if (min === undefined) { min = 0; }\n  if (max === undefined) { max = 1; }\n  let gradient = g.append('defs')\n    .append('svg:linearGradient')\n    .attr('id', `${gradientName}`)\n    .attr('x1', '0%')\n    .attr('y1', '100%')\n    .attr('x2', '100%')\n    .attr('y2', '100%')\n    .attr('spreadMethod', 'pad');\n  let interpolation = 10\n  for (let i = 0; i < interpolation; i++) {\n    let curProgress = i / (interpolation - 1);\n    let curColor = colorScale(curProgress * (max - min) + min);\n    gradient.append('stop')\n      .attr('offset', `${curProgress * 100}%`)\n      .attr('stop-color', curColor)\n      .attr('stop-opacity', 1);\n  }\n}\n\n/**\n * Draw all copycatlegends\n * @param {object} copycatlegends Parent group\n * @param {number} copycatlegendHeight Height of the copycatlegend element\n */\nconst drawLegends = (copycatlegends, copycatlegendHeight) => {\n  // Add local copycatlegends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n      .range([0, 2 * nodeLength + hSpaceAroundGap - 1.2])\n      .domain([-range1 / 2, range1 / 2]);\n    \n    let localLegendScale2 = d3.scaleLinear()\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap - 1.2])\n      .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n      .scale(localLegendScale1)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range1 / 2, 0, range1 / 2]);\n    \n    let localLegendAxis2 = d3.axisBottom()\n      .scale(localLegendScale2)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range2 / 2, 0, range2 / 2]);\n\n    let localLegend1 = copycatlegends.append('g')\n      .attr('class', 'copycatlegend local-copycatlegend')\n      .attr('id', `local-copycatlegend-${i}-1`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n    localLegend1.append('g')\n      .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n      .call(localLegendAxis1)\n\n    localLegend1.append('rect')\n      .attr('width', 2 * nodeLength + hSpaceAroundGap)\n      .attr('height', copycatlegendHeight)\n      .style('fill', 'url(#convGradient)');\n\n    let localLegend2 = copycatlegends.append('g')\n      .attr('class', 'copycatlegend local-copycatlegend')\n      .attr('id', `local-copycatlegend-${i}-2`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n      .attr('transform', `translate(${nodeCoordinate[start + 2][0].x}, ${0})`);\n\n    localLegend2.append('g')\n      .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n      .call(localLegendAxis2)\n\n    localLegend2.append('rect')\n      .attr('width', 3 * nodeLength + 2 * hSpaceAroundGap)\n      .attr('height', copycatlegendHeight)\n      .style('fill', 'url(#convGradient)');\n  }\n\n  // Add module copycatlegends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.module[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range / 2, range / 2]);\n\n    let moduleLegendAxis = d3.axisBottom()\n      .scale(moduleLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n    let moduleLegend = copycatlegends.append('g')\n      .attr('class', 'copycatlegend module-copycatlegend')\n      .attr('id', `module-copycatlegend-${i}`)\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'module')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n    \n    moduleLegend.append('g')\n      .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n      .call(moduleLegendAxis)\n\n    moduleLegend.append('rect')\n      .attr('width', 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio)\n      .attr('height', copycatlegendHeight)\n      .style('fill', 'url(#convGradient)');\n  }\n\n  // Add global copycatlegends\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n    .domain([-range / 2, range / 2]);\n\n  let globalLegendAxis = d3.axisBottom()\n    .scale(globalLegendScale)\n    .tickFormat(d3.format('.2f'))\n    .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n  let globalLegend = copycatlegends.append('g')\n    .attr('class', 'copycatlegend global-copycatlegend')\n    .attr('id', 'global-copycatlegend')\n    .classed('hidden', !detailedMode || selectedScaleLevel !== 'global')\n    .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n  globalLegend.append('g')\n    .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n    .call(globalLegendAxis)\n\n  globalLegend.append('rect')\n    .attr('width', 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio)\n    .attr('height', copycatlegendHeight)\n    .style('fill', 'url(#convGradient)');\n\n\n  // Add output copycatlegend\n  let outputRectScale = d3.scaleLinear()\n        .domain(cnnLayerRanges.output)\n        .range([0, nodeLength - 1.2]);\n\n  let outputLegendAxis = d3.axisBottom()\n    .scale(outputRectScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, cnnLayerRanges.output[1]])\n  \n  let outputLegend = copycatlegends.append('g')\n    .attr('class', 'copycatlegend output-copycatlegend')\n    .attr('id', 'output-copycatlegend')\n    .classed('hidden', !detailedMode)\n    .attr('transform', `translate(${nodeCoordinate[11][0].x}, ${0})`);\n  \n  outputLegend.append('g')\n    .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n    .call(outputLegendAxis);\n\n  outputLegend.append('rect')\n    .attr('width', nodeLength)\n    .attr('height', copycatlegendHeight)\n    .style('fill', 'gray');\n  \n  // Add input image copycatlegend\n  let inputScale = d3.scaleLinear()\n    .range([0, nodeLength - 1.2])\n    .domain([0, 1]);\n\n  let inputLegendAxis = d3.axisBottom()\n    .scale(inputScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, 0.5, 1]);\n\n  let inputLegend = copycatlegends.append('g')\n    .attr('class', 'copycatlegend input-copycatlegend')\n    .classed('hidden', !detailedMode)\n    .attr('transform', `translate(${nodeCoordinate[0][0].x}, ${0})`);\n  \n  inputLegend.append('g')\n    .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n    .call(inputLegendAxis);\n\n  inputLegend.append('rect')\n    .attr('x', 0.3)\n    .attr('width', nodeLength - 0.3)\n    .attr('height', copycatlegendHeight)\n    .attr('transform', `rotate(180, ${nodeLength/2}, ${copycatlegendHeight/2})`)\n    .style('stroke', 'rgb(20, 20, 20)')\n    .style('stroke-width', 0.3)\n    .style('fill', 'url(#inputGradient)');\n}\n\n/**\n * Draw the overview\n * @param {number} width Width of the cnn group\n * @param {number} height Height of the cnn group\n * @param {object} cnnGroup Group to appen cnn elements to\n * @param {function} nodeMouseOverHandler Callback func for mouseOver\n * @param {function} nodeMouseLeaveHandler Callback func for mouseLeave\n * @param {function} nodeClickHandler Callback func for click\n */\nexport const copycat_drawCNN = (width, height, cnnGroup, nodeMouseOverHandler,\n  nodeMouseLeaveHandler, nodeClickHandler) => {\n  // Draw the CNN\n  // There are 8 short gaps and 5 long gaps\n  hSpaceAroundGap = (width - nodeLength * numLayers) / (8 + 5 * gapRatio);\n  copycat_hSpaceAroundGapStore.set(hSpaceAroundGap);\n  let leftAccuumulatedSpace = 0;\n\n  // Iterate through the cnn to draw nodes in each layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let isOutput = curLayer[0].layerName === 'output';\n\n    nodeCoordinate.push([]);\n\n    // Compute the x coordinate of the whole layer\n    // Output layer and conv layer has long gaps\n    if (isOutput || curLayer[0].type === 'conv') {\n      leftAccuumulatedSpace += hSpaceAroundGap * gapRatio;\n    } else {\n      leftAccuumulatedSpace += hSpaceAroundGap;\n    }\n\n    // All nodes share the same x coordiante (left in div style)\n    let left = leftAccuumulatedSpace;\n\n    let layerGroup = cnnGroup.append('g')\n      .attr('class', 'cnn-layer-group')\n      .attr('id', `cnn-layer-group-${l}`);\n\n    vSpaceAroundGap = (height - nodeLength * curLayer.length) /\n      (curLayer.length + 1);\n    copycat_vSpaceAroundGapStore.set(vSpaceAroundGap);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n      .data(curLayer, d => d.index)\n      .enter()\n      .append('g')\n      .attr('class', 'node-group')\n      .style('cursor', 'pointer')\n      .style('pointer-events', 'all')\n      .on('click', nodeClickHandler)\n      .on('mouseover', nodeMouseOverHandler)\n      .on('mouseleave', nodeMouseLeaveHandler)\n      .classed('node-output', isOutput)\n      .attr('id', (d, i) => {\n        // Compute the coordinate\n        // Not using transform on the group object because of a decade old\n        // bug on webkit (safari)\n        // https://bugs.webkit.org/show_bug.cgi?id=23113\n        let top = i * nodeLength + (i + 1) * vSpaceAroundGap;\n        top += svgPaddings.top;\n        nodeCoordinate[l].push({x: left, y: top});\n        return `layer-${l}-node-${i}`\n      });\n    \n    // Overwrite the mouseover and mouseleave function for output nodes to show\n    // hover info in the UI\n    layerGroup.selectAll('g.node-output')\n      .on('mouseover', (d, i, g) => {\n        nodeMouseOverHandler(d, i, g);\n        copycat_hoverInfoStore.set( {show: true, text: `Output value: ${formater(d.output)}`} );\n      })\n      .on('mouseleave', (d, i, g) => {\n        nodeMouseLeaveHandler(d, i, g);\n        copycat_hoverInfoStore.set( {show: false, text: `Output value: ${formater(d.output)}`} );\n      });\n    \n    if (curLayer[0].layerName !== 'output') {\n      // Embed raster image in these groups\n      nodeGroups.append('image')\n        .attr('class', 'node-image')\n        .attr('width', nodeLength)\n        .attr('height', nodeLength)\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y);\n      \n      // Add a rectangle to show the border\n      nodeGroups.append('rect')\n        .attr('class', 'bounding')\n        .attr('width', nodeLength)\n        .attr('height', nodeLength)\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y)\n        .style('fill', 'none')\n        .style('stroke', 'gray')\n        .style('stroke-width', 1)\n        .classed('hidden', true);\n    } else {\n      nodeGroups.append('rect')\n        .attr('class', 'output-rect')\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2 + 8)\n        .attr('height', nodeLength / 4)\n        .attr('width', 0)\n        .style('fill', 'gray');\n      nodeGroups.append('text')\n        .attr('class', 'output-text')\n        .attr('x', left)\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2)\n        .style('dominant-baseline', 'middle')\n        .style('font-size', '11px')\n        .style('fill', 'black')\n        .style('opacity', 0.5)\n        .text((d, i) => classLists[i]);\n      \n      // Add annotation text to tell readers the exact output probability\n      // nodeGroups.append('text')\n      //   .attr('class', 'annotation-text')\n      //   .attr('id', (d, i) => `output-prob-${i}`)\n      //   .attr('x', left)\n      //   .attr('y', (d, i) => nodeCoordinate[l][i].y + 10)\n      //   .text(d => `(${d3.format('.4f')(d.output)})`);\n    }\n    leftAccuumulatedSpace += nodeLength;\n  }\n\n  // Share the nodeCoordinate\n  copycat_nodeCoordinateStore.set(nodeCoordinate)\n\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n        .domain(cnnLayerRanges.output)\n        .range([0, nodeLength]);\n\n  // Draw the canvas\n  for (let l = 0; l < cnn.length; l++) {\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    svg.select(`g#cnn-layer-group-${l}`)\n      .selectAll('image.node-image')\n      .each((d, i, g) => copycat_drawOutput(d, i, g, range));\n  }\n\n  svg.selectAll('g.node-output').each(\n    (d, i, g) => copycat_drawOutputScore(d, i, g, outputRectScale)\n  );\n\n  // Add layer label\n  let layerNames = cnn.map(d => {\n    if (d[0].layerName === 'output') {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d.length})`\n      }\n    } else {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d[0].output.length}, ${d[0].output.length}, ${d.length})`\n      }\n    }\n  });\n\n  let svgHeight = Number(d3.select('#copycat-cnn-svg').style('height').replace('px', '')) + 150;\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n  \n  let detailedLabels = svg.selectAll('g.layer-detailed-label')\n    .data(layerNames)\n    .enter()\n    .append('g')\n    .attr('class', 'layer-detailed-label')\n    .attr('id', (d, i) => `layer-detailed-label-${i}`)\n    .classed('hidden', !detailedMode)\n    .attr('transform', (d, i) => {\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n    .on('click', (d) => {\n      let target = '';\n      if (d.name.includes('conv')) { target = 'convolution' }\n      if (d.name.includes('relu')) { target = 'relu' }\n      if (d.name.includes('max_pool')) { target = 'pooling'}\n      if (d.name.includes('input')) { target = 'input'}\n\n      // Scroll to a article element\n      let anchor = document.querySelector(`#article-${target}`);\n      scroll.animateScroll(anchor);\n    });\n  \n  detailedLabels.append('title')\n    .text('Move to article section');\n    \n  detailedLabels.append('text')\n    .style('opacity', 0.7)\n    .style('dominant-baseline', 'middle')\n    .append('tspan')\n    .style('font-size', '12px')\n    .text(d => d.name)\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(d => d.dimension);\n  \n  let labels = svg.selectAll('g.layer-label')\n    .data(layerNames)\n    .enter()\n    .append('g')\n    .attr('class', 'layer-label')\n    .attr('id', (d, i) => `layer-label-${i}`)\n    .classed('hidden', detailedMode)\n    .attr('transform', (d, i) => {\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n    .on('click', (d) => {\n      let target = '';\n      if (d.name.includes('conv')) { target = 'convolution' }\n      if (d.name.includes('relu')) { target = 'relu' }\n      if (d.name.includes('max_pool')) { target = 'pooling'}\n      if (d.name.includes('input')) { target = 'input'}\n\n      // Scroll to a article element\n      let anchor = document.querySelector(`#article-${target}`);\n      scroll.animateScroll(anchor);\n    });\n  \n  labels.append('title')\n    .text('Move to article section');\n  \n  labels.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .text(d => {\n      if (d.name.includes('conv')) { return 'conv' }\n      if (d.name.includes('relu')) { return 'relu' }\n      if (d.name.includes('max_pool')) { return 'max_pool'}\n      return d.name\n    });\n\n  // Add layer color scale copycatlegends\n  getLegendGradient(svg, layerColorScales.conv, 'convGradient');\n  getLegendGradient(svg, layerColorScales.input[0], 'inputGradient');\n\n  let copycatlegendHeight = 5;\n  let copycatlegends = svg.append('g')\n      .attr('class', 'color-copycatlegend')\n      .attr('transform', `translate(${0}, ${\n        svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n        nodeLength * 10\n      })`);\n  \n  drawLegends(copycatlegends, copycatlegendHeight);\n\n  // Add edges between nodes\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let linkData = getLinkData(nodeCoordinate, cnn);\n\n  let edgeGroup = cnnGroup.append('g')\n    .attr('class', 'edge-group');\n  \n  edgeGroup.selectAll('path.edge')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d =>\n      `edge edge-${d.targetLayerIndex} edge-${d.targetLayerIndex}-${d.targetNodeIndex}`)\n    .attr('id', d => \n      `edge-${d.targetLayerIndex}-${d.targetNodeIndex}-${d.sourceNodeIndex}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', edgeStrokeWidth)\n    .style('opacity', edgeOpacity)\n    .style('stroke', edgeInitColor);\n\n  // Add input channel annotations\n  let inputAnnotation = cnnGroup.append('g')\n    .attr('class', 'input-annotation');\n\n  let redChannel = inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][0].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][0].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  redChannel.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#C95E67')\n    .text('Red');\n  \n  redChannel.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' channel');\n\n  inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][1].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][1].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle')\n    .style('fill', '#3DB665')\n    .text('Green');\n\n  inputAnnotation.append('text')\n    .attr('x', nodeCoordinate[0][2].x + nodeLength / 2)\n    .attr('y', nodeCoordinate[0][2].y + nodeLength + 5)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle')\n    .style('fill', '#3F7FBC')\n    .text('Blue');\n}\n\n/**\n * Update canvas values when user changes input image\n */\nexport const copycat_updateCNN = () => {\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n      .domain(cnnLayerRanges.output)\n      .range([0, nodeLength]);\n\n  // Rebind the cnn data to layer groups layer by layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    let layerGroup = svg.select(`g#cnn-layer-group-${l}`);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n      .data(curLayer);\n\n    if (l < cnn.length - 1) {\n      // Redraw the canvas and output node\n      nodeGroups.transition('disappear')\n        .duration(300)\n        .ease(d3.easeCubicOut)\n        .style('opacity', 0)\n        .on('end', function() {\n          d3.select(this)\n            .select('image.node-image')\n            .each((d, i, g) => copycat_drawOutput(d, i, g, range));\n          d3.select(this).transition('appear')\n            .duration(700)\n            .ease(d3.easeCubicIn)\n            .style('opacity', 1);\n        });\n    } else {\n      nodeGroups.each(\n        (d, i, g) => copycat_drawOutputScore(d, i, g, outputRectScale)\n      );\n    }\n  }\n\n  // Update the color scale copycatlegend\n  // Local copycatlegends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n      .range([0, 2 * nodeLength + hSpaceAroundGap])\n      .domain([-range1 / 2, range1 / 2]);\n    \n    let localLegendScale2 = d3.scaleLinear()\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap])\n      .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n      .scale(localLegendScale1)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range1 / 2, 0, range1 / 2]);\n    \n    let localLegendAxis2 = d3.axisBottom()\n      .scale(localLegendScale2)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range2 / 2, 0, range2 / 2]);\n    \n    svg.select(`g#local-copycatlegend-${i}-1`).select('g').call(localLegendAxis1);\n    svg.select(`g#local-copycatlegend-${i}-2`).select('g').call(localLegendAxis2);\n  }\n\n  // Module copycatlegend\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.local[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range, range]);\n\n    let moduleLegendAxis = d3.axisBottom()\n      .scale(moduleLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range, -(range / 2), 0, range/2, range]);\n    \n    svg.select(`g#module-copycatlegend-${i}`).select('g').call(moduleLegendAxis);\n  }\n\n  // Global copycatlegend\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n    .domain([-range, range]);\n\n  let globalLegendAxis = d3.axisBottom()\n    .scale(globalLegendScale)\n    .tickFormat(d3.format('.2f'))\n    .tickValues([-range, -(range / 2), 0, range/2, range]);\n\n  svg.select(`g#global-copycatlegend`).select('g').call(globalLegendAxis);\n\n  // Output copycatlegend\n  let outputLegendAxis = d3.axisBottom()\n    .scale(outputRectScale)\n    .tickFormat(d3.format('.1f'))\n    .tickValues([0, cnnLayerRanges.output[1]]);\n  \n  svg.select('g#output-copycatlegend').select('g').call(outputLegendAxis);\n}\n\n/**\n * Update the ranges for current CNN layers\n */\nexport const copycat_copycat_updateCNNLayerRanges = () => {\n  // Iterate through all nodes to find a output ranges for each layer\n  let cnnLayerRangesLocal = [1];\n  let curRange = undefined;\n\n  // Also track the min/max of each layer (avoid computing during intermediate\n  // layer)\n  cnnLayerMinMax = [];\n\n  for (let l = 0; l < cnn.length - 1; l++) {\n    let curLayer = cnn[l];\n\n    // Compute the min max\n    let outputExtents = curLayer.map(l => getExtent(l.output));\n    let aggregatedExtent = outputExtents.reduce((acc, cur) => {\n      return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n    })\n    cnnLayerMinMax.push({min: aggregatedExtent[0], max: aggregatedExtent[1]});\n\n    // conv layer refreshes curRange counting\n    if (curLayer[0].type === 'conv' || curLayer[0].type === 'fc') {\n      aggregatedExtent = aggregatedExtent.map(Math.abs);\n      // Plus 0.1 to offset the rounding error (avoid black color)\n      curRange = 2 * (0.1 + \n        Math.round(Math.max(...aggregatedExtent) * 1000) / 1000);\n    }\n\n    if (curRange !== undefined){\n      cnnLayerRangesLocal.push(curRange);\n    }\n  }\n\n  // Finally, add the output layer range\n  cnnLayerRangesLocal.push(1);\n  cnnLayerMinMax.push({min: 0, max: 1});\n\n  // Support different levels of scales (1) lcoal, (2) component, (3) global\n  let cnnLayerRangesComponent = [1];\n  let numOfComponent = (numLayers - 2) / 5;\n  for (let i = 0; i < numOfComponent; i++) {\n    let curArray = cnnLayerRangesLocal.slice(1 + 5 * i, 1 + 5 * i + 5);\n    let maxRange = Math.max(...curArray);\n    for (let j = 0; j < 5; j++) {\n      cnnLayerRangesComponent.push(maxRange);\n    }\n  }\n  cnnLayerRangesComponent.push(1);\n\n  let cnnLayerRangesGlobal = [1];\n  let maxRange = Math.max(...cnnLayerRangesLocal.slice(1,\n    cnnLayerRangesLocal.length - 1));\n  for (let i = 0; i < numLayers - 2; i++) {\n    cnnLayerRangesGlobal.push(maxRange);\n  }\n  cnnLayerRangesGlobal.push(1);\n\n  // Update the ranges dictionary\n  cnnLayerRanges.local = cnnLayerRangesLocal;\n  cnnLayerRanges.module = cnnLayerRangesComponent;\n  cnnLayerRanges.global = cnnLayerRangesGlobal;\n  cnnLayerRanges.output = [0, d3.max(cnn[cnn.length - 1].map(d => d.output))];\n\n  copycat_cnnLayerRangesStore.set(cnnLayerRanges);\n  copycat_cnnLayerMinMaxStore.set(cnnLayerMinMax);\n}","/* global d3 */\n\nimport { copycat_svgStore, copycat_vSpaceAroundGapStore } from '../stores.js';\nimport { copycat_overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = copycat_overviewConfig.layerColorScales;\nconst nodeLength = copycat_overviewConfig.nodeLength;\nconst intermediateColor = copycat_overviewConfig.intermediateColor;\nconst svgPaddings = copycat_overviewConfig.svgPaddings;\n\n// Shared variables\nlet svg = undefined;\ncopycat_svgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\ncopycat_vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\n/**\n * Move one layer horizontally\n * @param {object} arg Multiple arguments {\n *   layerIndex: current layer index\n *   targetX: destination x\n *   disable: make this layer unresponsible\n *   delay: animation delay\n *   opacity: change the current layer's opacity\n *   specialIndex: avoid manipulating `specialIndex`th node\n *   onEndFunc: call this function when animation finishes\n *   transitionName: animation ID\n * }\n */\nexport const copycat_moveLayerX = (arg) => {\n  let layerIndex = arg.layerIndex;\n  let targetX = arg.targetX;\n  let disable = arg.disable;\n  let delay = arg.delay;\n  let opacity = arg.opacity;\n  let specialIndex = arg.specialIndex;\n  let onEndFunc = arg.onEndFunc;\n  let transitionName = arg.transitionName === undefined ? 'move' : arg.transitionName;\n  let duration = arg.duration === undefined ? 500 : arg.duration;\n\n  // Move the selected layer\n  let curLayer = svg.select(`g#cnn-layer-group-${layerIndex}`);\n  curLayer.selectAll('g.node-group').each((d, i, g) => {\n    d3.select(g[i])\n      .style('cursor', disable && i !== specialIndex ? 'default' : 'pointer')\n      .style('pointer-events', disable && i !== specialIndex ? 'none' : 'all')\n      .select('image')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    if (opacity !== undefined && i !== specialIndex) {\n      d3.select(g[i])\n        .select('image')\n        .style('opacity', opacity);\n    }\n  });\n  \n  // Also move the layer labels\n  svg.selectAll(`g#layer-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n\n  svg.selectAll(`g#layer-detailed-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n}\n\n/**\n * Append a gradient definition to `group`\n * @param {string} gradientID CSS ID for the gradient def\n * @param {[{offset: number, color: string, opacity: number}]} stops Gradient stops\n * @param {element} group Element to append def to\n */\nexport const copycat_addOverlayGradient = (gradientID, stops, group) => {\n  if (group === undefined) {\n    group = svg;\n  }\n\n  // Create a gradient\n  let defs = group.append(\"defs\")\n    .attr('class', 'overlay-gradient');\n\n  let gradient = defs.append(\"linearGradient\")\n    .attr(\"id\", gradientID)\n    .attr(\"x1\", \"0%\")\n    .attr(\"x2\", \"100%\")\n    .attr(\"y1\", \"100%\")\n    .attr(\"y2\", \"100%\");\n  \n  stops.forEach(s => {\n    gradient.append('stop')\n      .attr('offset', s.offset)\n      .attr('stop-color', s.color)\n      .attr('stop-opacity', s.opacity);\n  })\n}\n\n/**\n * Draw the copycatlegend for intermediate layer\n * @param {object} arg \n * {\n *   copycatlegendHeight: height of the copycatlegend rectangle\n *   curLayerIndex: the index of selected layer\n *   range: colormap range\n *   group: group to append the copycatlegend\n *   minMax: {min: min value, max: max value}\n *   width: width of the copycatlegend\n *   x: x position of the copycatlegend\n *   y: y position of the copycatlegend\n *   isInput: if the copycatlegend is for the input layer (special handle black to\n *      white color scale)\n *   colorScale: d3 color scale\n *   gradientAppendingName: name of the appending gradient\n *   gradientGap: gap to make the color lighter\n * }\n */\nexport const drawIntermediateLayerLegend = (arg) => {\n  let copycatlegendHeight = arg.copycatlegendHeight,\n    curLayerIndex = arg.curLayerIndex,\n    range = arg.range,\n    group = arg.group,\n    minMax = arg.minMax,\n    width = arg.width,\n    x = arg.x,\n    y = arg.y,\n    isInput = arg.isInput,\n    colorScale = arg.colorScale,\n    gradientAppendingName = arg.gradientAppendingName,\n    gradientGap = arg.gradientGap;\n  \n  if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n  if (gradientGap === undefined) { gradientGap = 0; }\n  \n  // Add a copycatlegend color gradient\n  let gradientName = 'url(#inputGradient)';\n  let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n  if (!isInput) {\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    if (gradientAppendingName === undefined) {\n      copycat_addOverlayGradient('intermediate-copycatlegend-gradient', stops, group);\n      gradientName = 'url(#intermediate-copycatlegend-gradient)';\n    } else {\n      copycat_addOverlayGradient(`${gradientAppendingName}`, stops, group);\n      gradientName = `url(#${gradientAppendingName})`;\n    }\n  }\n\n  let copycatlegendScale = d3.scaleLinear()\n    .range([0, width - 1.2])\n    .domain(isInput ? [0, range] : [minMax.min, minMax.max]);\n\n  let copycatlegendAxis = d3.axisBottom()\n    .scale(copycatlegendScale)\n    .tickFormat(d3.format(isInput ? 'd' : '.2f'))\n    .tickValues(isInput ? [0, range] : [minMax.min, 0, minMax.max]);\n  \n  let intermediateLegend = group.append('g')\n    .attr('class', `intermediate-copycatlegend-${curLayerIndex - 1}`)\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  let copycatlegendGroup = intermediateLegend.append('g')\n    .attr('transform', `translate(0, ${copycatlegendHeight - 3})`)\n    .call(copycatlegendAxis);\n  \n  copycatlegendGroup.selectAll('text')\n    .style('font-size', '9px')\n    .style('fill', intermediateColor);\n  \n  copycatlegendGroup.selectAll('path, line')\n    .style('stroke', intermediateColor);\n\n  intermediateLegend.append('rect')\n    .attr('width', width)\n    .attr('height', copycatlegendHeight)\n    .attr('transform', `rotate(${isInput ? 180 : 0},\n      ${width / 2}, ${copycatlegendHeight / 2})`)\n    .style('fill', gradientName);\n}\n\n/**\n * Draw an very neat arrow!\n * @param {object} arg \n * {\n *   group: element to append this arrow to\n *   sx: source x\n *   sy: source y\n *   tx: target x\n *   ty: target y\n *   dr: radius of curve (I'm using a circle)\n *   hFlip: the direction to choose the circle (there are always two ways)\n * }\n */\nexport const drawArrow = (arg) => {\n  let group = arg.group,\n    sx = arg.sx,\n    sy = arg.sy,\n    tx = arg.tx,\n    ty = arg.ty,\n    dr = arg.dr,\n    hFlip = arg.hFlip,\n    marker = arg.marker === undefined ? 'marker' : arg.marker;\n\n  /* Cool graphics trick -> merge translate and scale together\n  translateX = (1 - scaleX) * tx,\n  translateY = (1 - scaleY) * ty;\n  */\n  \n  let arrow = group.append('g')\n    .attr('class', 'arrow-group');\n\n  arrow.append('path')\n    .attr(\"d\", `M${sx},${sy}A${dr},${dr} 0 0,${hFlip ? 0 : 1} ${tx},${ty}`)\n    .attr('marker-end', `url(#${marker})`)\n    .style('stroke', 'gray')\n    .style('fill', 'none');\n}\n","/* global d3 */\n\nimport {\n  copycat_svgStore, copycat_vSpaceAroundGapStore, copycat_hSpaceAroundGapStore, copycat_cnnStore,\n  copycat_nodeCoordinateStore, copycat_selectedScaleLevelStore, copycat_cnnLayerRangesStore,\n  copycat_needRedrawStore, copycat_cnnLayerMinMaxStore, copycat_shouldIntermediateAnimateStore,\n  copycat_hoverInfoStore, copycat_detailedModeStore, copycat_intermediateLayerPositionStore\n} from '../stores.js';\nimport {\n  getExtent, getOutputKnot, getInputKnot, gappedColorScale\n} from './draw-utils.js';\nimport {\n  copycat_drawOutput\n} from './overview-draw.js';\nimport {\n  drawIntermediateLayerLegend, copycat_moveLayerX, copycat_addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { singleConv } from '../utils/copycat-cnn.js';\nimport { copycat_overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = copycat_overviewConfig.layerColorScales;\nconst nodeLength = copycat_overviewConfig.nodeLength;\nconst plusSymbolRadius = copycat_overviewConfig.plusSymbolRadius;\nconst numLayers = copycat_overviewConfig.numLayers;\nconst intermediateColor = copycat_overviewConfig.intermediateColor;\nconst kernelRectLength = copycat_overviewConfig.kernelRectLength;\nconst svgPaddings = copycat_overviewConfig.svgPaddings;\nconst gapRatio = copycat_overviewConfig.gapRatio;\nconst overlayRectOffset = copycat_overviewConfig.overlayRectOffset;\nconst formater = d3.format('.4f');\nlet isEndOfAnimation = false;\n\n// Shared variables\nlet svg = undefined;\ncopycat_svgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\ncopycat_vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\ncopycat_hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncopycat_cnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\ncopycat_nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\ncopycat_selectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncopycat_cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncopycat_cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet needRedraw = [undefined, undefined];\ncopycat_needRedrawStore.subscribe( value => {needRedraw = value;} )\n\nlet shouldIntermediateAnimate = undefined;\ncopycat_shouldIntermediateAnimateStore.subscribe(value => {\n  shouldIntermediateAnimate = value;\n})\n\nlet detailedMode = undefined;\ncopycat_detailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet intermediateLayerPosition = undefined;\ncopycat_intermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n\n// let curRightX = 0;\n\n/**\n * Draw the intermediate layer activation heatmaps\n * @param {element} image Neuron heatmap image\n * @param {number} range Colormap range\n * @param {function} colorScale Colormap\n * @param {number} length Image length\n * @param {[[number]]} dataMatrix Heatmap matrix\n */\nconst drawIntermidiateImage = (image, range, colorScale, length,\n  dataMatrix) => {\n  // Set up a buffer convas in order to resize image\n  let imageLength = length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n    let color = d3.rgb(colorScale((dataMatrix[row][column] + range / 2) / range));\n\n    imageSingleArray[i] = color.r;\n    imageSingleArray[i + 1] = color.g;\n    imageSingleArray[i + 2] = color.b;\n    imageSingleArray[i + 3] = 255;\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  image.attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create a node group for the intermediate layer\n * @param {number} curLayerIndex Intermediate layer index\n * @param {number} selectedI Clicked node index\n * @param {element} groupLayer Group element\n * @param {number} x Node's x\n * @param {number} y Node's y\n * @param {number} nodeIndex Node's index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n * @param {bool} interaction Whether support interaction\n */\nconst createIntermediateNode = (curLayerIndex, selectedI, groupLayer, x, y,\n  nodeIndex, stride, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked, interaction) => {\n  let newNode = groupLayer.append('g')\n    .datum(cnn[curLayerIndex - 1][nodeIndex])\n    .attr('class', 'intermediate-node')\n    .attr('cursor', interaction ? 'pointer': 'default')\n    .attr('pointer-events', interaction ? 'all': 'none')\n    .attr('node-index', nodeIndex)\n    .on('mouseover', intermediateNodeMouseOverHandler)\n    .on('mouseleave', intermediateNodeMouseLeaveHandler)\n    .on('click', (d, g, i) => intermediateNodeClicked(d, g, i, selectedI,\n      curLayerIndex));\n  \n  newNode.append('image')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y);\n\n  // Overlay the image with a mask of many small rectangles\n  let strideTime = Math.floor(nodeLength / stride);\n  let overlayGroup = newNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      overlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Add a rectangle to show the border\n  newNode.append('rect')\n    .attr('class', 'bounding')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor)\n    .style('stroke-width', 1);\n  \n  return newNode;\n}\n\nconst startOutputAnimation = (kernelGroup, tickTime1D, stride, delay,\n  curLayerIndex) => {\n  const slidingAnimation = () => {\n    let originX = +kernelGroup.attr('data-origin-x');\n    let originY = +kernelGroup.attr('data-origin-y');\n    let oldTick = +kernelGroup.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n      kernelGroup.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`)\n      .on('end', () => {\n        if (newTick === 0) {\n          /* Uncomment to wrap the sliding\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n          */\n\n          // Stop the animation\n          // Be careful with animation racing so call this function here instead\n          // of under selectALL\n          if (!isEndOfAnimation) {\n            animationButtonClicked(curLayerIndex);\n          }\n        }\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst startIntermediateAnimation = (kernelGroupInput, kernelGroupResult,\n  tickTime1D, stride) => {\n  let delay = 200;\n  const slidingAnimation = () => {\n    let originX = +kernelGroupInput.attr('data-origin-x');\n    let originY = +kernelGroupInput.attr('data-origin-y');\n    let originXResult = +kernelGroupResult.attr('data-origin-x');\n    let oldTick = +kernelGroupInput.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let xResult = originXResult + (oldTick % tickTime1D) * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n    kernelGroupInput.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`);\n\n    kernelGroupResult.attr('data-tick', newTick)\n      .transition('window-sliding-result')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${xResult}, ${y})`)\n      .on('end', () => {\n        /* Uncomment to wrap the sliding\n        if (newTick === 0) {\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n        }\n        */\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst animationButtonClicked = (curLayerIndex) => {\n  if (d3.event !== null) {\n    d3.event.stopPropagation();\n  }\n  \n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n  let stride = kernelRectLength * 3; \n\n  if (isEndOfAnimation) {\n    // Start the animation\n    copycat_shouldIntermediateAnimateStore.set(true);\n\n    // Show kernel\n    svg.selectAll('.kernel-clone')\n      .transition()\n      .duration(300)\n      .style('opacity', 1)\n\n    // Restore the mask\n    svg.selectAll(`rect.mask-overlay`)\n      .transition()\n      .duration(300)\n      .style('opacity', 1);\n\n    // Start the intermediate animation\n    for (let i  = 0; i < nodeCoordinate[curLayerIndex - 1].length; i++) {\n      startIntermediateAnimation(d3.select(`.kernel-input-${i}`),\n        d3.select(`.kernel-result-${i}`), tickTime1D, stride);\n    }\n\n    // Start the output animation\n    startOutputAnimation(d3.select('.kernel-output'),\n      tickTime1D, stride, delay, curLayerIndex);\n    \n    // Change the flow edge style\n    svg.selectAll('path.flow-edge')\n      .attr('stroke-dasharray', '4 2')\n      .attr('stroke-dashoffset', 0)\n      .each((d, i, g) => animateEdge(d, i, g, 0 - 1000));\n\n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/copycat-cnn-explainer/assets/img/fast_forward.svg');\n    \n    isEndOfAnimation = false;\n\n  } else {\n    // End the animation\n    copycat_shouldIntermediateAnimateStore.set(false);\n    \n    // Show all intermediate and output results\n    svg.selectAll(`rect.mask-overlay`)\n      .transition('skip')\n      .duration(600)\n      .style('opacity', 0);\n    \n    // Move kernel to the beginning to prepare for the next animation\n    let kernelClones = svg.selectAll('.kernel-clone');\n    kernelClones.attr('data-tick', 0)\n      .transition('skip')\n      .duration(300)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        let element = d3.select(g[i]);\n        let originX = +element.attr('data-origin-x');\n        let originY = +element.attr('data-origin-y');\n        element.attr('transform', `translate(${originX}, ${originY})`);\n      });\n    \n    // Change flow edge style\n    svg.selectAll('path.flow-edge')\n      .interrupt()\n      .attr('stroke-dasharray', '0 0');\n    \n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/copycat-cnn-explainer/assets/img/redo.svg');\n    \n    isEndOfAnimation = true;\n  }\n}\n\nconst animateEdge = (d, i, g, dashoffset) => {\n  let curPath = d3.select(g[i]);\n  curPath.transition()\n    .duration(60000)\n    .ease(d3.easeLinear)\n    .attr('stroke-dashoffset', dashoffset)\n    .on('end', (d, i, g) => {\n      if (shouldIntermediateAnimate) {\n        animateEdge(d, i, g, dashoffset - 2000);\n      }\n    });\n}\n\n/**\n * Draw one intermediate layer\n * @param {number} curLayerIndex \n * @param {number} leftX X value of intermediate layer left border\n * @param {number} rightX X value of intermediate layer right border\n * @param {number} rightStart X value of right component starting anchor\n * @param {number} intermediateGap The inner gap\n * @param {number} d Clicked node bounded data\n * @param {number} i Clicked node index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst drawIntermediateLayer = (curLayerIndex, leftX, rightX, rightStart,\n  intermediateGap, d, i, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  \n  // curRightX = rightStart;\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer')\n    .style('opacity', 0);\n  \n  // Recovert the animation counter\n  isEndOfAnimation = false;\n  \n  // Tried to add a rectangle to block the intermediate because of webkit's\n  // horrible support (decade old bug) for foreignObject. It doesnt work either.\n  // https://bugs.webkit.org/show_bug.cgi?id=23113\n  // (1). ForeignObject's inside position is wrong on webkit\n  // (2). 'opacity' of ForeignObject doesn't work on webkit\n  // (3). ForeignObject always show up at the front regardless the svg\n  //      stacking order on webkit\n\n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + nodeLength + intermediateGap * 1.5;\n\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let colorScale = layerColorScales[d.type];\n  let intermediateMinMax = [];\n  \n  // Copy the previsious layer to construct foreignObject placeholder\n  // Also add edges from/to the intermediate layer in this loop\n  let linkData = [];\n\n  // Accumulate the intermediate sum\n  // let itnermediateSumMatrix = init2DArray(d.output.length,\n  //  d.output.length, 0);\n\n  // Compute the min max of all kernel weights in the intermediate layer\n  let kernelExtents = d.inputLinks.map(link => getExtent(link.weight));\n  let kernelExtent = kernelExtents.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let kernelRange = 2 * (Math.round(\n    Math.max(...kernelExtent.map(Math.abs)) * 1000) / 1000);\n  let kernelColorGap = 0.2;\n\n  // Compute stride for the kernel animation\n  let stride = kernelRectLength * 3; \n\n  // Also add the overlay mask on the output node\n  let outputY = nodeCoordinate[curLayerIndex][i].y;\n  let curNode = svg.select(`#layer-${curLayerIndex}-node-${i}`);\n  let outputOverlayGroup = curNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  let strideTime = Math.floor(nodeLength / stride);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      outputOverlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Make sure the bounding box is on top of other things\n  curNode.select('rect.bounding').raise();\n\n  // Add sliding kernel for the output node\n  let kernelGroup = intermediateLayer.append('g')\n    .attr('class', `kernel kernel-output kernel-clone`)\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  kernelGroup.append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', kernelRectLength * 3)\n    .attr('height', kernelRectLength * 3)\n    .attr('fill', 'none')\n    .attr('stroke', intermediateColor);\n  \n  kernelGroup.attr('data-tick', 0)\n    .attr('data-origin-x', rightX)\n    .attr('data-origin-y', outputY);\n\n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n\n  startOutputAnimation(kernelGroup, tickTime1D, stride, delay, curLayerIndex);\n\n  // First intermediate layer\n  nodeCoordinate[curLayerIndex - 1].forEach((n, ni) => {\n\n    // Compute the intermediate value\n    let inputMatrix = cnn[curLayerIndex - 1][ni].output;\n    let kernelMatrix = cnn[curLayerIndex][i].inputLinks[ni].weight;\n    let interMatrix = singleConv(inputMatrix, kernelMatrix);\n\n    // Compute the intermediate layer min max\n    intermediateMinMax.push(getExtent(interMatrix));\n\n    // Update the intermediate sum\n    // itnermediateSumMatrix = matrixAdd(itnermediateSumMatrix, interMatrix);\n\n    // Layout the canvas and rect\n    let newNode = createIntermediateNode(curLayerIndex, i, intermediateLayer,\n      intermediateX1, n.y, ni, stride, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked, true);\n    \n    // Draw the image\n    let image = newNode.select('image');\n    drawIntermidiateImage(image, range, colorScale, d.output.length,\n      interMatrix);      \n\n    // Edge: input -> intermediate1\n    linkData.push({\n      source: getOutputKnot({x: leftX, y: n.y}),\n      target: getInputKnot({x: intermediateX1, y: n.y}),\n      name: `input-${ni}-inter1-${ni}`\n    });\n\n    // Edge: intermediate1 -> intermediate2-1\n    linkData.push({\n      source: getOutputKnot({x: intermediateX1, y: n.y}),\n      target: getInputKnot({x: intermediateX2,\n        y: nodeCoordinate[curLayerIndex][i].y}),\n      name: `inter1-${ni}-inter2-1`\n    });\n\n    // Create a small kernel illustration\n    // Here we minus 2 because of no padding\n    // let tickTime1D = nodeLength / (kernelRectLength) - 2;\n    let kernelRectX = leftX - kernelRectLength * 3 * 2;\n    let kernelGroup = intermediateLayer.append('g')\n      .attr('class', `kernel kernel-${ni}`)\n      .attr('transform', `translate(${kernelRectX}, ${n.y})`);\n\n    let weightText = 'Kernel weights: [';\n    let f2 = d3.format('.2f');\n    for (let r = 0; r < kernelMatrix.length; r++) {\n      for (let c = 0; c < kernelMatrix[0].length; c++) {\n        kernelGroup.append('rect')\n          .attr('class', 'kernel')\n          .attr('x', kernelRectLength * c)\n          .attr('y', kernelRectLength * r)\n          .attr('width', kernelRectLength)\n          .attr('height', kernelRectLength)\n          .attr('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n            kernelMatrix[r][c], kernelColorGap));\n\n        let sep = '';\n        if (c === 0 && r == 0) { sep = ''; }\n        else if (c === 0) { sep = '; '; }\n        else { sep = ', '; }\n        weightText = weightText.concat(sep, `${f2(kernelMatrix[r][c])}`);\n      }\n    }\n    weightText = weightText.concat(']');\n\n    kernelGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', kernelRectLength * 3)\n      .attr('height', kernelRectLength * 3)\n      .attr('fill', 'none')\n      .attr('stroke', intermediateColor);\n    \n    kernelGroup.style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => {\n        copycat_hoverInfoStore.set( {show: true, text: weightText} );\n      })\n      .on('mouseleave', () => {\n        copycat_hoverInfoStore.set( {show: false, text: weightText} );\n      })\n      .on('click', () => {d3.event.stopPropagation()});\n\n    // Sliding the kernel on the input channel and result channel at the same\n    // time\n    let kernelGroupInput = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-input-${ni}`, true);\n\n    kernelGroupInput.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('opacity', 0.7);\n\n    kernelGroupInput.attr('transform', `translate(${leftX}, ${n.y})`)\n      .attr('data-tick', 0)\n      .attr('data-origin-x', leftX)\n      .attr('data-origin-y', n.y);\n\n    let kernelGroupResult = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-result-${ni}`, true);\n\n    kernelGroupResult.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('fill', 'none');\n\n    kernelGroupResult.attr('transform',\n      `translate(${intermediateX1}, ${n.y})`)\n      .attr('data-origin-x', intermediateX1)\n      .attr('data-origin-y', n.y);\n    \n    startIntermediateAnimation(kernelGroupInput, kernelGroupResult, tickTime1D,\n      stride);\n  });\n\n  // Aggregate the intermediate min max\n  let aggregatedExtent = intermediateMinMax.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let aggregatedMinMax = {min: aggregatedExtent[0], max: aggregatedExtent[1]};\n\n  // Draw the plus operation symbol\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = intermediateLayer.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${intermediateX2 + plusSymbolRadius}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', 2 * plusSymbolRadius)\n    .attr('height', 2 * plusSymbolRadius)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the firrst\n  // conv node\n  if (i == 0) {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n        .attr('cx', 0)\n        .attr('cy', nodeLength / 2 + kernelRectLength)\n        .attr('r', 4)\n        .style('stroke', intermediateColor)\n        .style('cursor', 'crosshair')\n        .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n          d.bias, kernelColorGap))\n        .on('mouseover', () => {\n          copycat_hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n        })\n        .on('mouseleave', () => {\n          copycat_hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n        });\n\n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius},\n      name: `bias-plus`\n    });\n  } else {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n      .attr('cx', 0)\n      .attr('cy', -nodeLength / 2 - kernelRectLength)\n      .attr('r', 4)\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n        d.bias, kernelColorGap))\n      .on('mouseover', () => {\n        copycat_hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n      })\n      .on('mouseleave', () => {\n        copycat_hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n      });\n    \n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius},\n      name: `bias-plus`\n    });\n  }\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`\n  });\n  \n  // Output -> next layer\n  linkData.push({\n    source: getOutputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightStart,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `output-next`\n  });\n\n  // Draw the layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('font-weight', 800)\n    .style('opacity', '0.8')\n    .text('intermediate');\n  \n  intermediateLayer.append('g')\n    .attr('class', 'animation-control')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 4;\n      return `translate(${x}, ${y})`;\n    })\n    .on('click', () => animationButtonClicked(curLayerIndex))\n    .append('image')\n    .attr('class', 'animation-control-button')\n    .attr('xlink:href', 'PUBLIC_URL/copycat-cnn-explainer/assets/img/fast_forward.svg')\n    .attr('x', 50)\n    .attr('y', 0)\n    .attr('height', 13)\n    .attr('width', 13);\n\n  // Draw the detailed model layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-detailed-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', !detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('intermediate')\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(`(${cnn[curLayerIndex][0].output.length},\n      ${cnn[curLayerIndex][0].output[0].length},\n      ${cnn[curLayerIndex].length})`);\n\n  // Draw the edges\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let edgeGroup = intermediateLayer.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  let dashoffset = 0;\n\n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .classed('flow-edge', d => d.name !== 'output-next')\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', 1)\n    .style('stroke', intermediateColor);\n\n  edgeGroup.select('#edge-output-next')\n    .style('opacity', 0.1);\n  \n  edgeGroup.selectAll('path.flow-edge')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke-dashoffset', 0)\n    .each((d, i, g) => animateEdge(d, i, g, dashoffset - 1000));\n  \n  return {intermediateLayer: intermediateLayer,\n    intermediateMinMax: aggregatedMinMax,\n    kernelRange: kernelRange,\n    kernelMinMax: {min: kernelExtent[0], max: kernelExtent[1]}};\n}\n\n/**\n * Add an annotation for the kernel and the sliding\n * @param {object} arg \n * {\n *  leftX: X value of the left border of intermedaite layer\n *  group: element group\n *  intermediateGap: the inner gap of intermediate layer\n *  isFirstConv: if this intermediate layer is after the first layer\n *  i: index of the selected node\n * }\n */\nconst drawIntermediateLayerAnnotation = (arg) => {\n  let leftX = arg.leftX,\n    curLayerIndex = arg.curLayerIndex,\n    group = arg.group,\n    intermediateGap = arg.intermediateGap,\n    isFirstConv = arg.isFirstConv,\n    i = arg.i;\n\n  let kernelAnnotation = group.append('g')\n    .attr('class', 'kernel-annotation');\n  \n  kernelAnnotation.append('text')\n    .text('Kernel')\n    .attr('class', 'annotation-text')\n    .attr('x', leftX - 2.5 * kernelRectLength * 3)\n    .attr('y', nodeCoordinate[curLayerIndex - 1][0].y + kernelRectLength * 3)\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'end');\n\n  let sliderX, sliderY, arrowSX, arrowSY, dr;\n  let sliderX2, sliderY2, arrowSX2, arrowSY2, dr2, arrowTX2, arrowTY2;\n  \n  if (isFirstConv) {\n    sliderX = leftX;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3;\n    arrowSX = leftX - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3 + 5;\n    dr = 20;\n\n    sliderX2 = leftX;\n      sliderY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength +\n    kernelRectLength * 3;\n    arrowSX2 = leftX - kernelRectLength * 3;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength + 15;\n    arrowTX2 = leftX - 13;\n    arrowTY2 =  nodeCoordinate[curLayerIndex - 1][1].y + 15;\n    dr2 = 35;\n  } else {\n    sliderX = leftX - 3 * kernelRectLength * 3;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 3;\n    arrowSX = leftX - 2 * kernelRectLength * 3 - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength - 10;\n    dr = 50;\n\n    sliderX2 = leftX - 3 * kernelRectLength * 3;\n    sliderY2 = nodeCoordinate[curLayerIndex - 1][2].y - 3;\n    arrowTX2 = leftX - kernelRectLength * 3 - 4;\n    arrowTY2 = nodeCoordinate[curLayerIndex - 1][2].y + kernelRectLength * 3 + 6;\n    arrowSX2 = leftX - kernelRectLength * 3 - 13;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][2].y + 26;\n    dr2 = 20;\n  }\n\n  let slideText = kernelAnnotation.append('text')\n    .attr('x', sliderX)\n    .attr('y', sliderY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Slide kernel over input channel');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('to get intermediate result');\n\n  // slideText.append('tspan')\n  //   .attr('x', sliderX)\n  //   .attr('dy', '1em')\n  //   .style('dominant-baseline', 'hanging')\n  //   .text('');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.2em')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Click ');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 400)\n    .text('to learn more')\n\n  drawArrow({\n    group: group,\n    tx: leftX - 7,\n    ty: nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2,\n    sx: arrowSX,\n    sy: arrowSY,\n    hFlip: !isFirstConv,\n    dr: dr,\n    marker: 'marker'\n  });\n\n  // Add kernel annotation\n  let slideText2 = kernelAnnotation.append('text')\n    .attr('x', sliderX2)\n    .attr('y', sliderY2)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n\n  slideText2.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Each input chanel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('gets a different kernel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.3em')\n    .style('font-weight', 700)\n    .style('dominant-baseline', 'hanging')\n    .text('Hover over ');\n\n  slideText2.append('tspan')\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('to see value!')\n\n  drawArrow({\n    group: group,\n    tx: arrowTX2,\n    ty: arrowTY2,\n    sx: arrowSX2,\n    sy: arrowSY2,\n    dr: dr2,\n    hFlip: !isFirstConv,\n    marker: 'marker'\n  });\n\n\n  // Add annotation for the sum operation\n  let plusAnnotation = group.append('g')\n    .attr('class', 'plus-annotation');\n  \n  let intermediateX2 = leftX + 2 * nodeLength + 2.5 * intermediateGap;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n      kernelRectLength * 3;\n  \n  // Special case 1: first node\n  if (i === 0) { textX += 30; }\n\n  // Special case 2: last node \n  if (i === 9) {\n    textX = intermediateX2 + plusSymbolRadius - 10;\n    textY -= 2.5 * nodeLength;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'start');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all intermediate');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('results and then add bias');\n  \n  if (i === 9) {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 50,\n      sy: nodeCoordinate[curLayerIndex][i].y - (nodeLength / 2 + kernelRectLength * 2),\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius,\n      dr: 50,\n      hFlip: false,\n      marker: 'marker-alt'\n    });\n  } else {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 35,\n      sy: nodeCoordinate[curLayerIndex][i].y + nodeLength + kernelRectLength * 2,\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius,\n      dr: 30,\n      hFlip: true,\n      marker: 'marker-alt'\n    });\n  }\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  if (i === 0) {\n    biasTextY += nodeLength + 3 * kernelRectLength;\n  } else {\n    biasTextY -= 2 * kernelRectLength + 5;\n  }\n  plusAnnotation.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', i === 0 ? 'hanging' : 'baseline')\n    .text('Bias');\n}\n\n/**\n * Append a filled rectangle under a pair of nodes.\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n * @param {number} leftX X value of the left border of intermediate layer\n * @param {number} intermediateGap Inner gap of this intermediate layer\n * @param {number} padding Padding around the rect\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst addUnderneathRect = (curLayerIndex, i, leftX,\n  intermediateGap, padding, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  // Add underneath rects\n  let underGroup = svg.select('g.underneath');\n\n  for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n    underGroup.append('rect')\n      .attr('class', 'underneath-gateway')\n      .attr('id', `underneath-gateway-${n}`)\n      .attr('x', leftX - padding)\n      .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n      .attr('width', (2 * nodeLength + intermediateGap) + 2 * padding)\n      .attr('height', nodeLength + 2 * padding)\n      .attr('rx', 10)\n      .style('fill', 'rgba(160, 160, 160, 0.2)')\n      .style('opacity', 0);\n    \n    // Register new events for input layer nodes\n    svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n      .style('pointer-events', 'all')\n      .style('cursor', 'pointer')\n      .on('mouseover', intermediateNodeMouseOverHandler)\n      .on('mouseleave', intermediateNodeMouseLeaveHandler)\n      .on('click', (d, ni, g) => intermediateNodeClicked(d, ni, g,\n        i, curLayerIndex));\n      // .on('click', (d, i) => {console.log(i)});\n  }\n  underGroup.lower();\n}\n\n/**\n * Add an overlaying rect\n * @param {string} gradientName Gradient name of overlay rect\n * @param {number} x X value of the overlaying rect\n * @param {number} y Y value of the overlaying rect\n * @param {number} width Rect width\n * @param {number} height Rect height\n */\nexport const copycat_addOverlayRect = (gradientName, x, y, width, height) => {\n  if (svg.select('.copycat-intermediate-layer-overlay').empty()) {\n    svg.append('g').attr('class', 'copycat-intermediate-layer-overlay');\n  }\n\n  let intermediateLayerOverlay = svg.select('.copycat-intermediate-layer-overlay');\n\n  let overlayRect = intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', `url(#${gradientName})`)\n    .style('stroke', 'none')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', x)\n    .attr('y', y)\n    .style('opacity', 0);\n  \n  overlayRect.transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Redraw the layer if needed (entering the intermediate view to make sure\n * all layers have the same color scale)\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n */\nconst redrawLayerIfNeeded = (curLayerIndex, i) => {\n  // Determine the range for this layerview, and redraw the layer with\n  // smaller range so all layers have the same range\n  let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let range = Math.max(rangePre, rangeCur);\n\n  if (rangePre > rangeCur) {\n    // Redraw the current layer (selected node)\n    svg.select(`g#layer-${curLayerIndex}-node-${i}`)\n      .select('image.node-image')\n      .each((d, g, i) => copycat_drawOutput(d, g, i, range));\n    \n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex, i];\n    copycat_needRedrawStore.set(needRedraw);\n    \n  } else if (rangePre < rangeCur) {\n    // Redraw the previous layer (whole layer)\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('image.node-image')\n      .each((d, g, i) => copycat_drawOutput(d, g, i, range));\n\n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex - 1, undefined];\n    copycat_needRedrawStore.set(needRedraw);\n  }\n\n  // Compute the min, max value of all nodes in pre-layer and the selected\n  // node of cur-layer\n  let min = cnnLayerMinMax[curLayerIndex - 1].min,\n    max = cnnLayerMinMax[curLayerIndex - 1].max;\n\n  // Selected node\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n    for (let c = 0; c < n.output[0].length; c++) {\n      if (n.output[r][c] < min) { min = n.output[r][c]; }\n      if (n.output[r][c] > max) { max = n.output[r][c]; }\n    }\n  }\n\n  return {range: range, minMax: {min: min, max: max}};\n}\n\n/**\n * Draw the intermediate layer before conv_1_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const copycat_drawConv1 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  // Compute the target location\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_1'] = targetX + nodeLength;\n  copycat_intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  copycat_moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 10 * nodeLength) / 10;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    copycat_moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay gradient and rect\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n  {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n  {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  copycat_addOverlayGradient('overlay-gradient', stops);\n\n  copycat_addOverlayRect('overlay-gradient', rightStart - overlayRectOffset / 2,\n  0, width - rightStart + overlayRectOffset,\n  height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n  drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n    intermediateGap, d, i, intermediateNodeMouseOverHandler,\n    intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 8,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // Compute the selected node's min max\n  // Selected node\n  let min = Infinity, max = -Infinity;\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n  for (let c = 0; c < n.output[0].length; c++) {\n    if (n.output[r][c] < min) { min = n.output[r][c]; }\n    if (n.output[r][c] > max) { max = n.output[r][c]; }\n  }\n  }\n\n  let finalMinMax = {\n  min: Math.min(min, intermediateMinMax.min),\n  max: Math.max(max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n  .attr('class', 'copycat-intermediate-layer-annotation')\n  .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    isFirstConv: true,\n    i: i\n  });\n\n  let range = cnnLayerRanges.local[curLayerIndex];\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: 1,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    isInput: true,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10 - 25\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: nodeCoordinate[curLayerIndex - 1][2].x,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.copycat-intermediate-layer, g.copycat-intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_1_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const copycat_drawConv2 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_2'] = targetX + nodeLength;\n  copycat_intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  copycat_moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 8 * nodeLength) / 8;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    copycat_moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  copycat_addOverlayGradient('overlay-gradient-right', stops);\n\n  let leftRightRatio = (2 * nodeLength + hSpaceAroundGap * gapRatio) /\n    (8 * nodeLength + intermediateGap * 7);\n  let endingGradient = 0.85 + (0.95 - 0.85) * leftRightRatio;\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: endingGradient},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  copycat_addOverlayGradient('overlay-gradient-left', stops);\n\n  copycat_addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  copycat_addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, nodeLength * 2 + hSpaceAroundGap * gapRatio + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n      intermediateGap, d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.copycat-intermediate-layer, g.copycat-intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const copycat_drawConv3 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_1'] = targetX + nodeLength;\n  copycat_intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  copycat_moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  copycat_moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 5 * nodeLength) / 5;\n  let rightStart = nodeCoordinate[curLayerIndex][0].x +\n    nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    copycat_moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  copycat_addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  copycat_addOverlayGradient('overlay-gradient-right', stops);\n\n  copycat_addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  copycat_addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    minMax: finalMinMax,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.copycat-intermediate-layer, g.copycat-intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const copycat_drawConv4 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_2'] = leftX;\n  copycat_intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  copycat_moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  copycat_moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 7 * nodeLength) / 7;\n  let rightStart = targetX + nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    copycat_moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  copycat_addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  copycat_addOverlayGradient('overlay-gradient-right', stops);\n\n  copycat_addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  copycat_addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    minMax: finalMinMax,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.copycat-intermediate-layer, g.copycat-intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n","/* global d3, SmoothScroll */\n\nimport {\n  copycat_svgStore, copycat_vSpaceAroundGapStore, copycat_hSpaceAroundGapStore, copycat_cnnStore,\n  copycat_nodeCoordinateStore, copycat_selectedScaleLevelStore, copycat_cnnLayerRangesStore,\n  copycat_cnnLayerMinMaxStore, copycat_isInSoftmaxStore, copycat_softmaxDetailViewStore,\n  copycat_hoverInfoStore, copycat_allowsSoftmaxAnimationStore, copycat_detailedModeStore\n} from '../stores.js';\nimport {\n  getOutputKnot, getInputKnot, gappedColorScale, getMidCoords\n} from './draw-utils.js';\nimport {\n  drawIntermediateLayerLegend, copycat_moveLayerX, copycat_addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { copycat_overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = copycat_overviewConfig.layerColorScales;\nconst nodeLength = copycat_overviewConfig.nodeLength;\nconst plusSymbolRadius = copycat_overviewConfig.plusSymbolRadius;\nconst intermediateColor = copycat_overviewConfig.intermediateColor;\nconst kernelRectLength = copycat_overviewConfig.kernelRectLength;\nconst svgPaddings = copycat_overviewConfig.svgPaddings;\nconst gapRatio = copycat_overviewConfig.gapRatio;\nconst classList = copycat_overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\ncopycat_svgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\ncopycat_vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\ncopycat_hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncopycat_cnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\ncopycat_nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\ncopycat_selectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncopycat_cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncopycat_cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet isInSoftmax = undefined;\ncopycat_isInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n\nlet allowsSoftmaxAnimation = undefined;\ncopycat_allowsSoftmaxAnimationStore.subscribe( value => {allowsSoftmaxAnimation = value;} )\n\nlet softmaxDetailViewInfo = undefined;\ncopycat_softmaxDetailViewStore.subscribe( value => {softmaxDetailViewInfo = value;} )\n\nlet hoverInfo = undefined;\ncopycat_hoverInfoStore.subscribe( value => {hoverInfo = value;} )\n\nlet detailedMode = undefined;\ncopycat_detailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet layerIndexDict = {\n  'input': 0,\n  'conv_1_1': 1,\n  'relu_1_1': 2,\n  'conv_1_2': 3,\n  'relu_1_2': 4,\n  'max_pool_1': 5,\n  'conv_2_1': 6,\n  'relu_2_1': 7,\n  'conv_2_2': 8,\n  'relu_2_2': 9,\n  'max_pool_2': 10,\n  'output': 11\n}\n\nlet hasInitialized = false;\nlet logits = [];\nlet flattenFactoredFDict = {};\n\nconst moveLegend = (d, i, g, moveX, duration, restore) => {\n  let copycatlegend = d3.select(g[i]);\n\n  if (!restore) {\n    let previousTransform = copycatlegend.attr('transform');\n    let previousLegendX = +previousTransform.replace(/.*\\(([\\d\\.]+),.*/, '$1');\n    let previousLegendY = +previousTransform.replace(/.*,\\s([\\d\\.]+)\\)/, '$1');\n  \n    copycatlegend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX - moveX}, ${previousLegendY})`);\n    \n    // If not in restore mode, we register the previous location to the DOM element\n    copycatlegend.attr('data-preX', previousLegendX);\n    copycatlegend.attr('data-preY', previousLegendY);\n  } else {\n    // Restore the recorded location\n    let previousLegendX = +copycatlegend.attr('data-preX');\n    let previousLegendY = +copycatlegend.attr('data-preY');\n\n    copycatlegend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX}, ${previousLegendY})`);\n  }\n}\n\nconst logitCircleMouseOverHandler = (i) => {\n  // Update the hover info UI\n  copycat_hoverInfoStore.set({\n    show: true,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Highlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = i;\n  copycat_softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.copycat-intermediate-layer');\n\n  // Highlight the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 2);\n\n  // Highlight the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 1)\n    .select('circle')\n    .style('fill', d => d.fill);\n  \n  // Raise the associated edge group\n  logitLayerLower.select(`#logit-lower-${i}`).raise();\n\n  // Highlight the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.8)\n    .style('stroke', '#E0E0E0');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 1)\n    .style('stroke', '#E0E0E0');\n  \n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n\n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n}\n\nconst logitCircleMouseLeaveHandler = (i) => {\n  // screenshot\n  // return;\n\n  // Update the hover info UI\n  copycat_hoverInfoStore.set({\n    show: false,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Dehighlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = -1;\n  copycat_softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.copycat-intermediate-layer');\n\n  // Restore the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 1);\n\n  // Restore the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 0.2);\n\n  // Restore the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#EDEDED');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#F1F1F1');\n\n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n  \n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n}\n\n// This function is binded to the detail view in Overview.svelte\nexport const copycat_softmaxDetailViewMouseOverHandler = (event) => {\n  logitCircleMouseOverHandler(event.detail.curI);\n}\n\n// This function is binded to the detail view in Overview.svelte\nexport const copycat_softmaxDetailViewMouseLeaveHandler = (event) => {\n  logitCircleMouseLeaveHandler(event.detail.curI);\n}\n\nconst drawLogitLayer = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    softmaxX = arg.softmaxX,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    symbolGroup = arg.symbolGroup,\n    symbolX = arg.symbolX,\n    flattenRange = arg.flattenRange;\n\n  let logitLayer = svg.select('.copycat-intermediate-layer')\n    .append('g')\n    .attr('class', 'logit-layer')\n    .raise();\n  \n  // Minotr layer ordering change\n  let tempClone = svg.select('.copycat-intermediate-layer')\n    .select('.flatten-layer')\n    .select('.plus-symbol')\n    .clone(true)\n    .attr('class', 'temp-clone-plus-symbol')\n    .attr('transform', `translate(${symbolX - moveX},\n      ${nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2})`)\n    // Cool hack -> d3 clone doesnt clone events, make the front object pointer\n    // event transparent so users can trigger the underlying object's event!\n    .style('pointer-events', 'none')\n    .remove();\n\n  let tempPlusSymbol = logitLayer.append(() => tempClone.node());\n  \n  svg.select('.softmax-symbol').raise();\n\n  let logitLayerLower = svg.select('.underneath')\n    .append('g')\n    .attr('class', 'logit-layer-lower')\n    .lower();\n  \n  // Use circles to encode logit values\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n\n  // Get all logits\n  logits = [];\n  for (let i = 0; i < cnn[layerIndexDict['output']].length; i++) {\n    logits.push(cnn[layerIndexDict['output']][i].logit);\n  }\n\n  // Construct a color scale for the logit values\n  let logitColorScale = d3.scaleLinear()\n    .domain(d3.extent(logits))\n    .range([0.2, 1]);\n  \n  // Draw the current logit circle before animation\n  let logitRadius = 8;\n  logitLayer.append('circle')\n    .attr('class', 'logit-circle')\n    .attr('id', `logit-circle-${selectedI}`)\n    .attr('cx', centerX)\n    .attr('cy', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('r', logitRadius)\n    .style('fill', layerColorScales.logit(logitColorScale(logits[selectedI])))\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .style('stroke', intermediateColor)\n    .on('mouseover', () => logitCircleMouseOverHandler(selectedI))\n    .on('mouseleave', () => logitCircleMouseLeaveHandler(selectedI))\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Show the logit circle corresponding label\n  let softmaxDetailAnnotation = svg.select('.copycat-intermediate-layer-annotation')\n    .select('.softmax-detail-annoataion');\n\n  softmaxDetailAnnotation.select(`#logit-text-${selectedI}`)\n    .style('opacity', 1);\n\n  tempPlusSymbol.raise();\n\n  // Draw another line from plus symbol to softmax symbol\n  logitLayer.append('line')\n    .attr('class', `logit-output-edge-${selectedI}`)\n    .attr('x1', intermediateX2 - moveX + plusSymbolRadius * 2)\n    .attr('x2', softmaxX)\n    .attr('y1', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('y2', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .style('fill', 'none')\n    .style('stroke', '#EAEAEA')\n    .style('stroke-width', '1.2')\n    .lower();\n\n  // Add the flatten to logit links\n  let linkData = [];\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let underneathIs = [...Array(cnn[layerIndexDict['output']].length).keys()]\n    .filter(d => d != selectedI);\n  let curIIndex = 0;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  const drawOneEdgeGroup = () => {\n    // Only draw the new group if it is in the softmax mode\n    if (!allowsSoftmaxAnimation) {\n      svg.select('.underneath')\n        .selectAll(`.logit-lower`)\n        .remove();\n      return;\n    }\n\n    let curI = underneathIs[curIIndex];\n\n    let curEdgeGroup = svg.select('.underneath')\n      .select(`#logit-lower-${curI}`);\n    \n    if (curEdgeGroup.empty()) {\n      curEdgeGroup = svg.select('.underneath')\n        .append('g')\n        .attr('class', 'logit-lower')\n        .attr('id', `logit-lower-${curI}`)\n        .style('opacity', 0);\n\n      // Hack: now show all edges, only draw 1/3 of the actual edges\n      for (let f = 0; f < flattenLength; f += 3) {\n        let loopFactors = [0, 9];\n        loopFactors.forEach(l => {\n          let factoredF = f + l * flattenLength;\n    \n          // Flatten -> output\n          linkData.push({\n            source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n              y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n            target: {x: intermediateX2 - moveX,\n              y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n            index: factoredF,\n            weight: cnn.flatten[factoredF].outputLinks[curI].weight,\n            color: '#F1F1F1',\n            width: 0.5,\n            opacity: 1,\n            class: `softmax-edge-${curI}`\n          });\n        });\n      }\n\n      // Draw middle rect to logits\n      for (let vi = 0; vi < cnn[layerIndexDict['output']].length - 2; vi++) {\n        linkData.push({\n          source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n            y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n            middleRectHeight * (vi + 0.5)},\n          target: {x: intermediateX2 - moveX,\n            y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n          index: -1,\n          color: '#EDEDED',\n          width: 0.5,\n          opacity: 1,\n          class: `softmax-abstract-edge-${curI}`\n        });\n      }\n\n      // Render the edges on the underneath layer\n      curEdgeGroup.selectAll(`path.softmax-edge-${curI}`)\n        .data(linkData)\n        .enter()\n        .append('path')\n        .attr('class', d => d.class)\n        .attr('id', d => `edge-${d.name}`)\n        .attr('d', d => linkGen({source: d.source, target: d.target}))\n        .style('fill', 'none')\n        .style('stroke-width', d => d.width)\n        .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n        .style('opacity', d => d.opacity)\n        .style('pointer-events', 'none');\n    }\n    \n    let curNodeGroup = logitLayer.append('g')\n      .attr('class', `logit-layer-${curI}`)\n      .style('opacity', 0);\n    \n    // Draw the plus symbol\n    let symbolClone = symbolGroup.clone(true)\n      .style('opacity', 0);\n\n    // Change the style of the clone\n    symbolClone.attr('class', 'plus-symbol-clone')\n      .attr('id', `plus-symbol-clone-${curI}`)\n      .select('circle')\n      .datum({fill: gappedColorScale(layerColorScales.weight,\n        flattenRange, cnn[layerIndexDict['output']][curI].bias, 0.35)})\n      .style('pointer-events', 'none')\n      .style('fill', '#E5E5E5');\n\n    symbolClone.attr('transform', `translate(${symbolX},\n      ${nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2})`);\n    \n    // Draw the outter link using only merged path\n    let outputEdgeD1 = linkGen({\n      source: {\n        x: intermediateX2 - moveX + plusSymbolRadius * 2,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      }\n    });\n\n    let outputEdgeD2 = linkGen({\n      source: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: softmaxX,\n        y: nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2\n      }\n    });\n\n    // There are ways to combine these two paths into one. However, the animation\n    // for merged path is not continuous, so we use two saperate paths here.\n\n    let outputEdge1 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD1)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n\n    let outputEdge2 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD2)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n    \n    let outputEdgeLength1 = outputEdge1.node().getTotalLength();\n    let outputEdgeLength2 = outputEdge2.node().getTotalLength();\n    let totalLength = outputEdgeLength1 + outputEdgeLength2;\n    let totalDuration = hasInitialized ? 500 : 800;\n    let opacityDuration = hasInitialized ? 400 : 600;\n\n    outputEdge1.attr('stroke-dasharray', outputEdgeLength1 + ' ' + outputEdgeLength1)\n      .attr('stroke-dashoffset', outputEdgeLength1);\n    \n    outputEdge2.attr('stroke-dasharray', outputEdgeLength2 + ' ' + outputEdgeLength2)\n      .attr('stroke-dashoffset', outputEdgeLength2);\n\n    outputEdge1.transition('softmax-output-edge')\n      .duration(outputEdgeLength1 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n\n    outputEdge2.transition('softmax-output-edge')\n      .delay(outputEdgeLength1 / totalLength * totalDuration)\n      .duration(outputEdgeLength2 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n    \n    // Draw the logit circle\n    curNodeGroup.append('circle')\n      .attr('class', 'logit-circle')\n      .attr('id', `logit-circle-${curI}`)\n      .attr('cx', centerX)\n      .attr('cy', nodeCoordinate[curLayerIndex - 1][curI].y + nodeLength / 2)\n      .attr('r', 7)\n      .style('fill', layerColorScales.logit(logitColorScale(logits[curI])))\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => logitCircleMouseOverHandler(curI))\n      .on('mouseleave', () => logitCircleMouseLeaveHandler(curI))\n      .on('click', () => { d3.event.stopPropagation() });\n    \n    // Show the element in the detailed view\n    softmaxDetailViewInfo.startAnimation = {\n      i: curI,\n      duration: opacityDuration,\n      // Always show the animation\n      hasInitialized: false\n    };\n    copycat_softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n    // Show the elements with animation    \n    curNodeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n\n    if ((selectedI < 3 && curI == 9) || (selectedI >= 3 && curI == 0)) {\n      // Show the hover text\n      softmaxDetailAnnotation.select('.softmax-detail-hover-annotation')\n        .transition('softmax-edge')\n        .duration(opacityDuration)\n        .style('opacity', 1);\n    }\n\n    softmaxDetailAnnotation.select(`#logit-text-${curI}`)\n      .transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n    \n    curEdgeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1)\n      .on('end', () => {\n        // Recursive animaiton\n        curIIndex ++;\n        if (curIIndex < underneathIs.length) {\n          linkData = [];\n          drawOneEdgeGroup();\n        } else {\n          hasInitialized = true;\n          softmaxDetailViewInfo.hasInitialized = true;\n          copycat_softmaxDetailViewStore.set(softmaxDetailViewInfo);\n        }\n      });\n    \n    symbolClone.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 0.2);\n  }\n\n  // Show the softmax detail view\n  let anchorElement = svg.select('.copycat-intermediate-layer')\n    .select('.layer-label').node();\n  let pos = getMidCoords(svg, anchorElement);\n  let wholeSvg = d3.select('#copycat-cnn-svg');\n  let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n  let detailViewTop = 100 + svgYMid - 192 / 2;\n\n  const copycatdetailview = document.getElementById('copycatdetailview');\n  copycatdetailview.style.top = `${detailViewTop}px`;\n  copycatdetailview.style.left = `${pos.left - 490 - 50}px`;\n  copycatdetailview.style.position = 'absolute';\n\n  copycat_softmaxDetailViewStore.set({\n    show: true,\n    logits: logits,\n    logitColors: logits.map(d => layerColorScales.logit(logitColorScale(d))),\n    selectedI: selectedI,\n    highlightI: -1,\n    outputName: classList[selectedI],\n    outputValue: cnn[layerIndexDict['output']][selectedI].output,\n    startAnimation: {i: -1, duration: 0, hasInitialized: hasInitialized}\n  })\n\n  drawOneEdgeGroup();\n\n  // Draw logit circle color scale\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: d3.extent(logits)[1] - d3.extent(logits)[0],\n    minMax: {min: d3.extent(logits)[0], max: d3.extent(logits)[1]},\n    group: logitLayer,\n    width: softmaxX - (intermediateX2 + plusSymbolRadius * 2 - moveX + 5),\n    gradientAppendingName: 'flatten-logit-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.logit,\n    x: intermediateX2 + plusSymbolRadius * 2 - moveX + 5,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Draw logit layer label\n  let logitLabel = logitLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = centerX;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    });\n\n  logitLabel.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('logit');\n}\n\nconst removeLogitLayer = () => {\n  svg.select('.logit-layer').remove();\n  svg.select('.logit-layer-lower').remove();\n  svg.selectAll('.plus-symbol-clone').remove();\n\n  // Instead of removing the paths, we hide them, so it is faster to load in\n  // the future\n  svg.select('.underneath')\n    .selectAll('.logit-lower')\n    .style('opacity', 0);\n\n  copycat_softmaxDetailViewStore.set({\n      show: false,\n      logits: []\n  })\n}\n\nconst softmaxClicked = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    symbolX = arg.symbolX,\n    symbolY = arg.symbolY,\n    outputX = arg.outputX,\n    outputY = arg.outputY,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    softmaxX = arg.softmaxX,\n    softmaxTextY = arg.softmaxTextY,\n    softmaxWidth = arg.softmaxWidth,\n    symbolGroup = arg.symbolGroup,\n    flattenRange = arg.flattenRange;\n\n  let duration = 600;\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n  d3.event.stopPropagation();\n\n  // Clean up the logit elemends before moving anything\n  if (isInSoftmax) {\n    copycat_allowsSoftmaxAnimationStore.set(false);\n    removeLogitLayer();\n  } else {\n    copycat_allowsSoftmaxAnimationStore.set(true);\n  }\n\n  // Move the overlay gradient\n  svg.select('.copycat-intermediate-layer-overlay')\n    .select('rect.overlay')\n    .transition('softmax')\n    .ease(d3.easeCubicInOut)\n    .duration(duration)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`);\n\n  // Move the copycatlegends\n  svg.selectAll(`.intermediate-copycatlegend-${curLayerIndex - 1}`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.copycat-intermediate-layer')\n    .select(`.layer-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.copycat-intermediate-layer')\n    .select(`.layer-detailed-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  // Also move all layers on the left\n  for (let i = curLayerIndex - 1; i >= 0; i--) {\n    let curLayer = svg.select(`g#cnn-layer-group-${i}`);\n    let previousX = +curLayer.select('image').attr('x');\n    let newX = isInSoftmax ? previousX + moveX : previousX - moveX;\n    copycat_moveLayerX({\n      layerIndex: i,\n      targetX: newX,\n      disable: true,\n      delay: 0,\n      transitionName: 'softmax',\n      duration: duration\n    });\n  }\n\n  // Hide the sum up annotation\n  svg.select('.plus-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Hide the softmax annotation\n  let softmaxAnnotation = svg.select('.softmax-annotation')\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n  \n  let softmaxDetailAnnotation = softmaxAnnotation.selectAll('.softmax-detail-annoataion')\n    .data([0])\n    .enter()\n    .append('g')\n    .attr('class', 'softmax-detail-annoataion');\n\n  // Remove the detailed annoatioan when quitting the detail view\n  if (isInSoftmax) {\n    softmaxAnnotation.selectAll('.softmax-detail-annoataion').remove();\n  }\n\n  softmaxAnnotation.select('.arrow-group')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0);\n\n  softmaxAnnotation.select('.annotation-text')\n    .style('cursor', 'help')\n    .style('pointer-events', 'all')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-softmax`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    })\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .on('end', () => {\n      if (!isInSoftmax) {\n        // Add new annotation for the softmax button\n        let textX = softmaxX + softmaxWidth / 2;\n        let textY = softmaxTextY - 10;\n\n        if (selectedI === 0) {\n          textY = softmaxTextY + 70;\n        }\n\n        let text = softmaxDetailAnnotation.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text')\n          .style('dominant-baseline', 'baseline')\n          .style('text-anchor', 'middle')\n          .text('Normalize ');\n        \n        text.append('tspan') \n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logits');\n        \n        text.append('tspan')\n          .attr('dx', 1)\n          .text(' into');\n\n        text.append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1.1em')\n          .text('class probabilities');\n\n        if (selectedI === 0) {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 44,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: textY - 12,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        } else {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 4,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: symbolY - plusSymbolRadius - 4,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        }\n\n        // Add annotation for the logit layer label\n        textX = centerX + 45;\n        textY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n        let arrowTX = centerX + 20;\n        let arrowTY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n\n        softmaxDetailAnnotation.append('g')\n          .attr('class', 'layer-detailed-label')\n          .attr('transform', () => {\n            let x = centerX;\n            let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n            return `translate(${x}, ${y})`;\n          })\n          .classed('hidden', !detailedMode)\n          .append('text')\n          // .attr('x', centerX)\n          // .attr('y',  (svgPaddings.top + vSpaceAroundGap) / 2 - 6)\n          .style('opacity', 0.7)\n          .style('dominant-baseline', 'middle')\n          .style('font-size', '12px')\n          .style('font-weight', '800')\n          .append('tspan')\n          .attr('x', 0)\n          .text('logit')\n          .append('tspan')\n          .attr('x', 0)\n          .style('font-size', '8px')\n          .style('font-weight', 'normal')\n          .attr('dy', '1.5em')\n          .text('(10)');\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', textX)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'start')\n          .text('Before')\n          .append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('normalization')\n\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: arrowTX,\n          ty: arrowTY,\n          sx: textX - 6,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false,\n          marker: 'marker-alt'\n        });\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'end')\n          .text('After')\n          .append('tspan')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('dy', '1em')\n          .text('normalization')\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: nodeCoordinate[layerIndexDict['output']][0].x - 8,\n          ty: arrowTY,\n          sx: nodeCoordinate[layerIndexDict['output']][0].x - 27,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: true,\n          marker: 'marker-alt'\n        });\n\n        // Add annotation for the logit circle\n        for (let i = 0; i < 10; i++) {\n          softmaxDetailAnnotation.append('text')\n            .attr('x', centerX)\n            .attr('y', nodeCoordinate[curLayerIndex - 1][i].y + nodeLength / 2 + 8)\n            .attr('class', 'annotation-text softmax-detail-text')\n            .attr('id', `logit-text-${i}`)\n            .style('text-anchor', 'middle')\n            .style('dominant-baseline', 'hanging')\n            .style('opacity', 0)\n            .text(`${classList[i]}`);\n        }\n\n        let hoverTextGroup = softmaxDetailAnnotation.append('g')\n          .attr('class', 'softmax-detail-hover-annotation')\n          .style('opacity', 0);\n\n        textX = centerX + 50;\n        textY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2;\n\n        if (selectedI < 3) {\n          textY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength / 2;\n        }\n\n        // Add annotation to prompt user to check the logit value\n        let hoverText = hoverTextGroup.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text softmax-hover-text')\n          .style('text-anchor', 'start')\n          .style('dominant-baseline', 'baseline')\n          .append('tspan')\n          .style('font-weight', 700)\n          .style('dominant-baseline', 'baseline')\n          .text(`Hover over `)\n          .append('tspan')\n          .style('font-weight', 400)\n          .style('dominant-baseline', 'baseline')\n          .text('to see');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('its ');\n\n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logit');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .text(' value');\n        \n        drawArrow({\n          group: hoverTextGroup,\n          tx: centerX + 15,\n          ty: textY,\n          sx: textX - 8,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false\n        });\n      }\n    })\n\n  // Hide the annotation\n  svg.select('.flatten-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Move the left part of faltten layer elements\n  let flattenLeftPart = svg.select('.flatten-layer-left');\n  flattenLeftPart.transition('softmax')\n    .duration(duration)\n    .ease(d3.easeCubicInOut)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`)\n    .on('end', () => {\n      // Add the logit layer\n      if (!isInSoftmax) {\n        let logitArg = {\n          curLayerIndex: curLayerIndex,\n          moveX: moveX,\n          softmaxLeftMid: softmaxLeftMid,\n          selectedI: selectedI,\n          intermediateX1: intermediateX1,\n          intermediateX2: intermediateX2,\n          pixelWidth: pixelWidth,\n          pixelHeight: pixelHeight,\n          topY: topY,\n          bottomY: bottomY,\n          middleGap: middleGap,\n          middleRectHeight: middleRectHeight,\n          softmaxX: softmaxX,\n          symbolGroup: symbolGroup,\n          symbolX: symbolX,\n          flattenRange: flattenRange\n        };\n        drawLogitLayer(logitArg);\n      }\n\n      // Redraw the line from the plus symbol to the output node\n      if (!isInSoftmax) {\n        let newLine = flattenLeftPart.select('.edge-group')\n          .append('line')\n          .attr('class', 'symbol-output-line')\n          .attr('x1', symbolX)\n          .attr('y1', symbolY)\n          .attr('x2', outputX + moveX)\n          .attr('y2', outputY)\n          .style('stroke-width', 1.2)\n          .style('stroke', '#E5E5E5')\n          .style('opacity', 0);\n        \n        newLine.transition('softmax')\n          .delay(duration / 3)\n          .duration(duration * 2 / 3)\n          .style('opacity', 1);\n      } else {\n        flattenLeftPart.select('.symbol-output-line').remove();\n      }\n      \n      isInSoftmax = !isInSoftmax;\n      copycat_isInSoftmaxStore.set(isInSoftmax);\n    })\n}\n\n/**\n * Draw the flatten layer before output layer\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n */\nexport const copycat_drawFlatten = (curLayerIndex, d, i, width, height) => {\n  // Show the output copycatlegend\n  svg.selectAll('.output-copycatlegend')\n    .classed('hidden', false);\n\n  let pixelWidth = nodeLength / 2;\n  let pixelHeight = 1.1;\n  let totalLength = (2 * nodeLength +\n    5.5 * hSpaceAroundGap * gapRatio + pixelWidth);\n  let leftX = nodeCoordinate[curLayerIndex][0].x - totalLength;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 4) / 2;\n  const minimumGap = 20;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the previous layer\n  copycat_moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  // Disable the current layer (output layer)\n  copycat_moveLayerX({layerIndex: curLayerIndex,\n    targetX: nodeCoordinate[curLayerIndex][0].x, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n  \n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 10 * nodeLength) / 10;\n\n  // Different from other intermediate view, we push the left part dynamically\n  // 1. If there is enough space, we fix the first layer position and move all\n  // other layers;\n  // 2. If there is not enough space, we maintain the minimum gap and push all\n  // left layers to the left (could be out-of-screen)\n  if (leftGap > minimumGap) {\n    // Move the left layers\n    for (let i = 0; i < curLayerIndex - 1; i++) {\n      let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n      copycat_moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n    }\n  } else {\n    leftGap = minimumGap;\n    let curLeftBound = leftX - leftGap * 2 - nodeLength;\n    // Move the left layers\n    for (let i = curLayerIndex - 2; i >= 0; i--) {\n      copycat_moveLayerX({layerIndex: i, targetX: curLeftBound, disable: true, delay: 0});\n      curLeftBound = curLeftBound - leftGap - nodeLength;\n    }\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  copycat_addOverlayGradient('overlay-gradient-left', stops);\n\n  let intermediateLayerOverlay = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer-overlay');\n\n  intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', 'url(#overlay-gradient-left)')\n    .style('stroke', 'none')\n    .attr('width', leftX + svgPaddings.left - (leftGap * 2) + 3)\n    .attr('height', height + svgPaddings.top + svgPaddings.bottom)\n    .attr('x', -svgPaddings.left)\n    .attr('y', 0)\n    .style('opacity', 0);\n  \n  intermediateLayerOverlay.selectAll('rect.overlay')\n    .transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer')\n    .style('opacity', 0);\n  \n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + intermediateGap + pixelWidth;\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let colorScale = layerColorScales.conv;\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let linkData = [];\n\n  let flattenLayer = intermediateLayer.append('g')\n    .attr('class', 'flatten-layer');\n  \n  let flattenLayerLeftPart = flattenLayer.append('g')\n    .attr('class', 'flatten-layer-left');\n  \n  let topY = nodeCoordinate[curLayerIndex - 1][0].y;\n  let bottomY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength -\n        flattenLength * pixelHeight;\n  \n  // Compute the pre-layer gap\n  let preLayerDimension = cnn[curLayerIndex - 1][0].output.length;\n  let preLayerGap = nodeLength / (2 * preLayerDimension);\n\n  // Compute bounding box length\n  let boundingBoxLength = nodeLength / preLayerDimension;\n\n  // Compute the weight color scale\n  let flattenExtent = d3.extent(cnn.flatten.slice(flattenLength)\n    .map(d => d.outputLinks[i].weight)\n    .concat(cnn.flatten.slice(9 * flattenLength, 10 * flattenLength)\n      .map(d => d.outputLinks[i].weight)));\n\n  let flattenRange = 2 * (Math.round(\n    Math.max(...flattenExtent.map(Math.abs)) * 1000) / 1000);\n\n  let flattenMouseOverHandler = (d) => {\n    let index = d.index;\n    // Screenshot\n    // console.log(index);\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: true,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: true,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    copycat_hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .raise()\n      .style('stroke', intermediateColor)\n      .style('stroke-width', 1);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .raise()\n      .style('stroke-width', 1)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.1));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 1);\n  }\n\n  let flattenMouseLeaveHandler = (d) => {\n    let index = d.index;\n\n    // screenshot\n    // if (index === 32) {return;}\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: false,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: false,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    copycat_hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .style('stroke-width', 0.6)\n      .style('stroke', '#E5E5E5')\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .style('stroke-width', 0.6)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.35));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 0);\n  }\n\n  flattenFactoredFDict = {};\n  for (let f = 0; f < flattenLength; f++) {\n    let loopFactors = [0, 9];\n    loopFactors.forEach(l => {\n      let factoredF = f + l * flattenLength;\n      flattenFactoredFDict[factoredF] = cnn.flatten[factoredF].output;\n      flattenLayerLeftPart.append('rect')\n        .attr('x', intermediateX1)\n        .attr('y', l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight)\n        .attr('width', pixelWidth)\n        .attr('height', pixelHeight)\n        .style('cursor', 'crosshair')\n        .style('fill', colorScale((cnn.flatten[factoredF].output + range / 2) / range))\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => { d3.event.stopPropagation() });\n\n      // Flatten -> output\n      linkData.push({\n        source: {x: intermediateX1 + pixelWidth + 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        target: {x: intermediateX2,\n          //nodeCoordinate[curLayerIndex][i].x - nodeLength,\n          y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n        index: factoredF,\n        weight: cnn.flatten[factoredF].outputLinks[i].weight,\n        name: `flatten-${factoredF}-output`,\n        color: gappedColorScale(layerColorScales.weight,\n          flattenRange, cnn.flatten[factoredF].outputLinks[i].weight, 0.35),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten-output`\n      });\n\n      // Pre-layer -> flatten\n      let row = Math.floor(f / preLayerDimension);\n      linkData.push({\n        target: {x: intermediateX1 - 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        source: {x: leftX + nodeLength + 3,\n          y: nodeCoordinate[curLayerIndex - 1][l].y + (2 * row + 1) * preLayerGap},\n        index: factoredF,\n        name: `flatten-${factoredF}`,\n        color: '#E5E5E5',\n        // color: gappedColorScale(layerColorScales.conv,\n        //   2 * Math.max(Math.abs(cnnLayerMinMax[10].max), Math.abs(cnnLayerMinMax[10].min)),\n        //   cnn.flatten[factoredF].output, 0.2),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten`\n      });\n\n      // Add original pixel bounding box\n      let loc = cnn.flatten[factoredF].inputLinks[0].weight;\n      flattenLayerLeftPart.append('rect')\n        .attr('id', `bounding-${factoredF}`)\n        .attr('class', 'flatten-bounding')\n        .attr('x', leftX + loc[1] * boundingBoxLength)\n        .attr('y', nodeCoordinate[curLayerIndex - 1][l].y + loc[0] * boundingBoxLength)\n        .attr('width', boundingBoxLength)\n        .attr('height', boundingBoxLength)\n        .style('fill', 'none')\n        .style('stroke', intermediateColor)\n        .style('stroke-length', '0.5')\n        .style('pointer-events', 'all')\n        .style('cursor', 'crosshair')\n        .style('opacity', 0)\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => {d3.event.stopPropagation()});\n    }) \n  }\n  \n  // Use abstract symbol to represent the flatten nodes in between (between\n  // the first and the last nodes)\n  // Compute the average value of input node and weights\n  let meanValues = [];\n  for (let n = 1; n < cnn[curLayerIndex - 1].length - 1; n++) {\n    /*\n    let meanOutput = d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.output));\n    let meanWeight= d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.outputLinks[i].weight));\n    meanValues.push({index: n, output: meanOutput, weight: meanWeight});\n    */\n    meanValues.push({index: n});\n  }\n\n  // Compute the middle gap\n  let middleGap = 5;\n  let middleRectHeight = (10 * nodeLength + (10 - 1) * vSpaceAroundGap -\n    pixelHeight * flattenLength * 2 - 5 * (8 + 1)) / 8;\n\n  // Add middle nodes\n  meanValues.forEach((v, vi) => {\n    // Add a small rectangle\n    flattenLayerLeftPart.append('rect')\n      .attr('x', intermediateX1 + pixelWidth / 4)\n      .attr('y', topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * vi)\n      .attr('width', pixelWidth / 2)\n      .attr('height', middleRectHeight)\n      // .style('fill', colorScale((v.output + range / 2) / range));\n      .style('fill', '#E5E5E5');\n    \n    // Add a triangle next to the input node\n    flattenLayerLeftPart.append('polyline')\n      .attr('points',\n        `${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y},\n        ${leftX + nodeLength + 10}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n        ${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength}`)\n      .style('fill', '#E5E5E5')\n      .style('opacity', 1);\n    \n    // Input -> flatten\n    linkData.push({\n      source: {x: leftX + nodeLength + 10,\n        y: nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n      target: {x: intermediateX1 - 3,\n        y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n          middleRectHeight * (vi + 0.5)},\n      index: -1,\n      width: 1,\n      opacity: 1,\n      name: `flatten-abstract-${v.index}`,\n      color: '#E5E5E5',\n      class: `flatten-abstract`\n    });\n\n    // Flatten -> output\n    linkData.push({\n      source: {x: intermediateX1 + pixelWidth + 3,\n      y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * (vi + 0.5)},\n      target: {x: intermediateX2,\n      y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n      index: -1,\n      name: `flatten-abstract-${v.index}-output`,\n      // color: gappedColorScale(layerColorScales.weight, flattenRange,\n      //   v.weight, 0.35),\n      color: '#E5E5E5',\n      weight: v.weight,\n      width: 1,\n      opacity: 1,\n      class: `flatten-abstract-output`\n    });\n  })\n\n  // Draw the plus operation symbol\n  let symbolX = intermediateX2 + plusSymbolRadius;\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${symbolX}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', plusSymbolRadius * 2)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the first\n  // conv node (no need now, since we added annotaiton for softmax to make it\n  // look better aligned)\n  // Add bias symbol to the plus symbol\n  symbolGroup.append('circle')\n    .attr('cx', 0)\n    .attr('cy', -nodeLength / 2 - 0.5 * kernelRectLength)\n    .attr('r', kernelRectLength * 1.5)\n    .style('stroke', intermediateColor)\n    .style('cursor', 'crosshair')\n    .style('fill', gappedColorScale(layerColorScales.weight,\n        flattenRange, d.bias, 0.35))\n    .on('mouseover', () => {\n      copycat_hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('mouseleave', () => {\n      copycat_hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('click', () => { d3.event.stopPropagation(); });\n  \n  // Link from bias to the plus symbol\n  symbolGroup.append('path')\n    .attr('d', linkGen({\n      source: { x: 0, y: 0 },\n      target: { x: 0, y: -nodeLength / 2 - 0.5 * kernelRectLength }\n    }))\n    .attr('id', 'bias-plus')\n    .attr('stroke-width', 1.2)\n    .attr('stroke', '#E5E5E5')\n    .lower();\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: nodeCoordinate[curLayerIndex][i].x - 3,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`,\n    width: 1.2,\n    color: '#E5E5E5'\n  });\n\n  // Draw softmax operation symbol\n  let softmaxWidth = 55;\n  let emptySpace = ((totalLength - 2 * nodeLength - 2 * intermediateGap)\n    - softmaxWidth) / 2;\n  let symbolEndX = intermediateX2 + plusSymbolRadius * 2;\n  let softmaxX = emptySpace + symbolEndX;\n  let softmaxLeftMid = emptySpace / 2 + symbolEndX;\n  let softmaxTextY = nodeCoordinate[curLayerIndex][i].y - 2 * kernelRectLength - 6;\n  let moveX = (intermediateX2 - (intermediateX1 + pixelWidth + 3)) * 2 / 3;\n\n  let softmaxArg = {\n    curLayerIndex: curLayerIndex,\n    moveX: moveX,\n    symbolX: symbolX,\n    symbolY: symbolY,\n    outputX: nodeCoordinate[curLayerIndex][i].x,\n    outputY: symbolY,\n    softmaxLeftMid: softmaxLeftMid,\n    selectedI: i,\n    intermediateX1: intermediateX1,\n    intermediateX2: intermediateX2,\n    pixelWidth: pixelWidth,\n    pixelHeight: pixelHeight,\n    topY: topY,\n    bottomY: bottomY,\n    middleGap: middleGap,\n    middleRectHeight: middleRectHeight,\n    softmaxX: softmaxX,\n    softmaxWidth: softmaxWidth,\n    softmaxTextY: softmaxTextY,\n    symbolGroup: symbolGroup,\n    flattenRange: flattenRange\n  };\n\n  let softmaxSymbol = intermediateLayer.append('g')\n    .attr('class', 'softmax-symbol')\n    .attr('transform', `translate(${softmaxX}, ${symbolY})`)\n    .style('pointer-event', 'all')\n    .style('cursor', 'pointer')\n    .on('click', () => softmaxClicked(softmaxArg));\n  \n  softmaxSymbol.append('rect')\n    .attr('x', 0)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', softmaxWidth)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('stroke', intermediateColor)\n    .attr('rx', 2)\n    .attr('ry', 2)\n    .attr('fill', '#FAFAFA');\n  \n  softmaxSymbol.append('text')\n    .attr('x', 5)\n    .attr('y', 1)\n    .style('dominant-baseline', 'middle')\n    .style('font-size', '12px')\n    .style('opacity', 0.5)\n    .text('softmax');\n\n  // Draw the layer label\n  let layerLabel = intermediateLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio +\n        pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-flatten`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    });\n  \n  layerLabel.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('flatten');\n\n  let svgHeight = Number(d3.select('#copycat-cnn-svg').style('height').replace('px', '')) + 150;\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\n    \n  let detailedLabelGroup = intermediateLayer.append('g')\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio + pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .attr('class', 'layer-detailed-label')\n    .classed('hidden', !detailedMode)\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      let anchor = document.querySelector(`#article-flatten`);\n      scroll.animateScroll(anchor);\n    });\n  \n  detailedLabelGroup.append('title')\n    .text('Move to article section');\n\n  let detailedLabelText = detailedLabelGroup.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('flatten');\n  \n  let dimension = cnn[layerIndexDict['max_pool_2']].length * \n    cnn[layerIndexDict['max_pool_2']][0].output.length *\n    cnn[layerIndexDict['max_pool_2']][0].output[0].length;\n\n  detailedLabelText.append('tspan')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .text(`(${dimension})`);\n\n  // Add edges between nodes\n  let edgeGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d => d.class)\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', d => d.width)\n    .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n    .style('opacity', d => d.opacity);\n  \n  edgeGroup.selectAll('path.flatten-abstract-output')\n    .lower();\n\n  edgeGroup.selectAll('path.flatten,path.flatten-output')\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .on('mouseover', flattenMouseOverHandler)\n    .on('mouseleave', flattenMouseLeaveHandler)\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Add copycatlegend\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: cnnLayerMinMax[10],\n    group: intermediateLayer,\n    width: intermediateGap + nodeLength - 3,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    copycatlegendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: flattenRange,\n    minMax: {min: flattenExtent[0], max: flattenExtent[1]},\n    group: intermediateLayer,\n    width: intermediateGap - 3 - 5,\n    gradientAppendingName: 'flatten-weight-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.weight,\n    x: leftX + intermediateGap + nodeLength + pixelWidth + 3,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'copycat-intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  // Add annotation for the sum operation\n  let plusAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'plus-annotation');\n  \n  // let textX = nodeCoordinate[curLayerIndex][i].x - 50;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 3;\n  let arrowSY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 2;\n  let arrowTY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 +\n    plusSymbolRadius;\n\n  if (i == 9) {\n    textY -= 110;\n    arrowSY -= 70;\n    arrowTY -= 18;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all products');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('(');\n\n  plusText.append('tspan')\n    .style('fill', '#66a3c8')\n    .style('dominant-baseline', 'hanging')\n    .text('element');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' × ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#b58946')\n    .text('weight');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(')');\n\n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('and then ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#479d94')\n    .text('bias');\n  \n  drawArrow({\n    group: plusAnnotation,\n    sx: intermediateX2 - 2 * plusSymbolRadius - 3,\n    sy: arrowSY,\n    tx: intermediateX2 - 5,\n    ty: arrowTY,\n    dr: 30,\n    hFlip: i === 9,\n    marker: 'marker-alt'\n  });\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  biasTextY -= 2 * kernelRectLength + 4;\n  \n  flattenLayerLeftPart.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'baseline')\n    .text('Bias');\n  \n  // Add annotation for the softmax symbol\n  let softmaxAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'softmax-annotation');\n  \n  softmaxAnnotation.append('text')\n    .attr('x', softmaxX + softmaxWidth / 2)\n    .attr('y', softmaxTextY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'middle')\n    .style('font-weight', 700)\n    .text('Click ')\n    .append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .text('to learn more');\n\n  drawArrow({\n    group: softmaxAnnotation,\n    sx: softmaxX + softmaxWidth / 2 - 5,\n    sy: softmaxTextY + 4,\n    tx: softmaxX + softmaxWidth / 2,\n    ty: symbolY - plusSymbolRadius - 4,\n    dr: 50,\n    hFlip: true\n  });\n\n  // Add annotation for the flatten layer\n  let flattenAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'flatten-annotation');\n  \n  textX = leftX - 80;\n  textY = nodeCoordinate[curLayerIndex - 1][0].y;\n\n  let flattenText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  let tempTspan = flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Hover over ');\n  \n  tempTspan.append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('matrix to');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('see how it is flattened');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('into a 1D array!');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 45,\n    sy: textY + nodeLength * 0.4 + 12,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2,\n    dr: 80,\n    hFlip: true\n  });\n\n  // Add annotation to explain the middle images\n  textY = nodeCoordinate[curLayerIndex - 1][1].y;\n\n  let middleText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Same flattening');\n  \n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('operation for');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('each neuron');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 39,\n    sy: textY + 25,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2 - 2,\n    dr: 80,\n    hFlip: true,\n    marker: 'marker-alt'\n  });\n\n\n  // Add annotation for the output neuron\n  let outputAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'output-annotation');\n  \n  outputAnnotation.append('text')\n    .attr('x', nodeCoordinate[layerIndexDict['output']][i].x)\n    .attr('y', nodeCoordinate[layerIndexDict['output']][i].y + 10)\n    .attr('class', 'annotation-text')\n    .text(`(${d3.format('.4f')(cnn[layerIndexDict['output']][i].output)})`);\n\n\n  /* Prototype of using arc to represent the flatten layer (future)\n  let pie = d3.pie()\n    .padAngle(0)\n    .sort(null)\n    .value(d => d.output)\n    .startAngle(0)\n    .endAngle(-Math.PI);\n\n  let radius = 490 / 2;\n  let arc = d3.arc()\n    .innerRadius(radius - 20)\n    .outerRadius(radius);\n\n  let arcs = pie(cnn.flatten);\n  console.log(arcs);\n\n  let test = svg.append('g')\n    .attr('class', 'test')\n    .attr('transform', 'translate(500, 250)');\n\n  test.selectAll(\"path\")\n    .data(arcs)\n    .join(\"path\")\n      .attr('class', 'arc')\n      .attr(\"fill\", d => colorScale((d.value + range/2) / range))\n      .attr(\"d\", arc);\n  */\n\n  // Show everything\n  svg.selectAll('g.copycat-intermediate-layer, g.copycat-intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}","<script>\n    // Svelte functions\n    import { onMount } from 'svelte';\n    import {\n      copycat_cnnStore, copycat_svgStore, copycat_vSpaceAroundGapStore, copycat_hSpaceAroundGapStore,\n      copycat_nodeCoordinateStore, copycat_selectedScaleLevelStore, copycat_cnnLayerRangesStore,\n      copycat_needRedrawStore, copycat_cnnLayerMinMaxStore, copycat_detailedModeStore,\n      copycat_shouldIntermediateAnimateStore, copycat_isInSoftmaxStore, copycat_softmaxDetailViewStore,\n      copycat_hoverInfoStore, copycat_allowsSoftmaxAnimationStore, copycat_modalStore,\n      copycat_intermediateLayerPositionStore\n    } from '../stores.js';\n  \n    // Svelte views\n    import ConvolutionView from './detail-view/Convolutionview.svelte';\n    import ActivationView from './detail-view/Activationview.svelte';\n    import PoolView from './detail-view/Poolview.svelte';\n    import SoftmaxView from './detail-view/Softmaxview.svelte';\n    import Modal from './Modal.svelte'\n  \n    // Overview functions\n    import { loadTrainedModel, constructCNN } from '../utils/cnn-tf.js';\n    import { copycat_overviewConfig } from '../config.js';\n  \n    import {\n      copycat_addOverlayRect, copycat_drawConv1, copycat_drawConv2, copycat_drawConv3, copycat_drawConv4\n    } from './intermediate-draw.js';\n  \n    import {\n      copycat_moveLayerX, copycat_addOverlayGradient\n    } from './intermediate-utils.js';\n  \n    import {\n      copycat_drawFlatten, copycat_softmaxDetailViewMouseOverHandler, copycat_softmaxDetailViewMouseLeaveHandler\n    } from './flatten-draw.js';\n  \n    import {\n      copycat_drawOutput, copycat_drawCNN, copycat_updateCNN, copycat_copycat_updateCNNLayerRanges, copycat_drawCustomImage\n    } from './overview-draw.js';\n  \n  \n    // View bindings\n    let overviewComponent;\n    let scaleLevelSet = new Set(['local', 'module', 'global']);\n    let selectedScaleLevel = 'local';\n    copycat_selectedScaleLevelStore.set(selectedScaleLevel);\n    let previousSelectedScaleLevel = selectedScaleLevel;\n    let wholeSvg = undefined;\n    let svg = undefined;\n  \n    $: selectedScaleLevel, selectedScaleLevelChanged();\n  \n    // Configs\n    const layerColorScales = copycat_overviewConfig.layerColorScales;\n    const nodeLength = copycat_overviewConfig.nodeLength;\n    const plusSymbolRadius = copycat_overviewConfig.plusSymbolRadius;\n    const numLayers = copycat_overviewConfig.numLayers;\n    const edgeOpacity = copycat_overviewConfig.edgeOpacity;\n    const edgeInitColor = copycat_overviewConfig.edgeInitColor;\n    const edgeHoverColor = copycat_overviewConfig.edgeHoverColor;\n    const edgeHoverOuting = copycat_overviewConfig.edgeHoverOuting;\n    const edgeStrokeWidth = copycat_overviewConfig.edgeStrokeWidth;\n    const intermediateColor = copycat_overviewConfig.intermediateColor;\n    const kernelRectLength = copycat_overviewConfig.kernelRectLength;\n    const svgPaddings = copycat_overviewConfig.svgPaddings;\n    const gapRatio = copycat_overviewConfig.gapRatio;\n    const overlayRectOffset = copycat_overviewConfig.overlayRectOffset;\n    const classLists = copycat_overviewConfig.classLists;\n  \n    // Shared properties\n    let needRedraw = [undefined, undefined];\n    copycat_needRedrawStore.subscribe( value => {needRedraw = value;} );\n  \n    let nodeCoordinate = undefined;\n    copycat_nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n  \n    let cnnLayerRanges = undefined;\n    copycat_cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n  \n    let cnnLayerMinMax = undefined;\n    copycat_cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n  \n    let detailedMode = undefined;\n    copycat_detailedModeStore.subscribe( value => {detailedMode = value;} )\n  \n    let shouldIntermediateAnimate = undefined;\n    copycat_shouldIntermediateAnimateStore.subscribe(value => {\n      shouldIntermediateAnimate = value;\n    })\n  \n    let vSpaceAroundGap = undefined;\n    copycat_vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n  \n    let hSpaceAroundGap = undefined;\n    copycat_hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n  \n    let isInSoftmax = undefined;\n    copycat_isInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n  \n    let softmaxDetailViewInfo = undefined;\n    copycat_softmaxDetailViewStore.subscribe( value => {\n      softmaxDetailViewInfo = value;\n    } )\n  \n    let modalInfo = undefined;\n    copycat_modalStore.subscribe( value => {modalInfo = value;} )\n  \n    let hoverInfo = undefined;\n    copycat_hoverInfoStore.subscribe( value => {hoverInfo = value;} )\n  \n    let intermediateLayerPosition = undefined;\n    copycat_intermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n  \n    let width = undefined;\n    let height = undefined;\n    let model = undefined;\n    let selectedNode = {layerName: '', index: -1, data: null};\n    let isInIntermediateView = false;\n    let isInActPoolDetailView = false;\n    let actPoolDetailViewNodeIndex = -1;\n    let actPoolDetailViewLayerIndex = -1;\n    let detailedViewNum = undefined;\n    let disableControl = false;\n  \n    // Wait to load\n    let cnn = undefined;\n  \n    let detailedViewAbsCoords = {\n      1 : [600, 270, 490, 290],\n      2: [500, 270, 490, 290],\n      3 : [700, 270, 490, 290],\n      4: [600, 270, 490, 290],\n      5: [650, 270, 490, 290],\n      6 : [775, 270, 490, 290],\n      7 : [100, 270, 490, 290],\n      8 : [60, 270, 490, 290],\n      9 : [200, 270, 490, 290],\n      10 : [300, 270, 490, 290],\n    }\n  \n    const layerIndexDict = {\n      'input': 0,\n      'conv_1_1': 1,\n      'relu_1_1': 2,\n      'conv_1_2': 3,\n      'relu_1_2': 4,\n      'max_pool_1': 5,\n      'conv_2_1': 6,\n      'relu_2_1': 7,\n      'conv_2_2': 8,\n      'relu_2_2': 9,\n      'max_pool_2': 10,\n      'output': 11\n    }\n  \n    const layerLegendDict = {\n      0: {local: 'input-copycatlegend', module: 'input-copycatlegend', global: 'input-copycatlegend'},\n      1: {local: 'local-copycatlegend-0-1', module: 'module-copycatlegend-0', global: 'global-copycatlegend'},\n      2: {local: 'local-copycatlegend-0-1', module: 'module-copycatlegend-0', global: 'global-copycatlegend'},\n      3: {local: 'local-copycatlegend-0-2', module: 'module-copycatlegend-0', global: 'global-copycatlegend'},\n      4: {local: 'local-copycatlegend-0-2', module: 'module-copycatlegend-0', global: 'global-copycatlegend'},\n      5: {local: 'local-copycatlegend-0-2', module: 'module-copycatlegend-0', global: 'global-copycatlegend'},\n      6: {local: 'local-copycatlegend-1-1', module: 'module-copycatlegend-1', global: 'global-copycatlegend'},\n      7: {local: 'local-copycatlegend-1-1', module: 'module-copycatlegend-1', global: 'global-copycatlegend'},\n      8: {local: 'local-copycatlegend-1-2', module: 'module-copycatlegend-1', global: 'global-copycatlegend'},\n      9: {local: 'local-copycatlegend-1-2', module: 'module-copycatlegend-1', global: 'global-copycatlegend'},\n      10: {local: 'local-copycatlegend-1-2', module: 'module-copycatlegend-1', global: 'global-copycatlegend'},\n      11: {local: 'output-copycatlegend', module: 'output-copycatlegend', global: 'output-copycatlegend'}\n    }\n  \n    let imageOptions = [\n      {file: 'boat_1.jpeg', class: 'lifeboat'},\n      {file: 'bug_1.jpeg', class: 'ladybug'},\n      {file: 'pizza_1.jpeg', class: 'pizza'},\n      {file: 'pepper_1.jpeg', class: 'bell pepper'},\n      {file: 'bus_1.jpeg', class: 'bus'},\n      {file: 'koala_1.jpeg', class: 'koala'},\n      {file: 'espresso_1.jpeg', class: 'espresso'},\n      {file: 'panda_1.jpeg', class: 'red panda'},\n      {file: 'orange_1.jpeg', class: 'orange'},\n      {file: 'car_1.jpeg', class: 'sport car'}\n    ];\n    let selectedImage = imageOptions[6].file;\n  \n    let nodeData;\n    let selectedNodeIndex = -1;\n    let isExitedFromDetailedView = true;\n    let isExitedFromCollapse = true;\n    let customImageURL = null;\n  \n    // Helper functions\n    const selectedScaleLevelChanged = () => {\n      if (svg !== undefined) {\n        if (!scaleLevelSet.add(selectedScaleLevel)) {\n          console.error('Encounter unknown scale level!');\n        }\n  \n        // Update nodes and copycatlegends\n        if (selectedScaleLevel != previousSelectedScaleLevel){\n          // We can simply redraw all nodes using the new color scale, or we can\n          // make it faster by only redraw certian nodes\n          let updatingLayerIndexDict = {\n            local: {\n              module: [1, 2, 8, 9, 10],\n              global: [1, 2, 3, 4, 5, 8, 9, 10]\n            },\n            module: {\n              local: [1, 2, 8, 9, 10],\n              global: [1, 2, 3, 4, 5, 8, 9, 10]\n            },\n            global: {\n              local: [1, 2, 3, 4, 5, 8, 9, 10],\n              module: [1, 2, 3, 4, 5]\n            }\n          };\n  \n          let updatingLayerIndex = updatingLayerIndexDict[\n            previousSelectedScaleLevel][selectedScaleLevel];\n  \n          updatingLayerIndex.forEach(l => {\n            let range = cnnLayerRanges[selectedScaleLevel][l];\n            svg.select(`#cnn-layer-group-${l}`)\n              .selectAll('.node-image')\n              .each((d, i, g) => copycat_drawOutput(d, i, g, range));\n          });\n   \n          // Hide previous copycatlegend\n          svg.selectAll(`.${previousSelectedScaleLevel}-copycatlegend`)\n            .classed('hidden', true);\n  \n          // Show selected copycatlegends\n          svg.selectAll(`.${selectedScaleLevel}-copycatlegend`)\n            .classed('hidden', !detailedMode);\n        }\n        previousSelectedScaleLevel = selectedScaleLevel;\n        copycat_selectedScaleLevelStore.set(selectedScaleLevel);\n      }\n    }\n  \n    const intermediateNodeMouseOverHandler = (d, i, g) => {\n      if (detailedViewNum !== undefined) { return; }\n      svg.select(`rect#underneath-gateway-${d.index}`)\n        .style('opacity', 1);\n    }\n  \n    const intermediateNodeMouseLeaveHandler = (d, i, g) => {\n      // screenshot\n      // return;\n      if (detailedViewNum !== undefined) { return; }\n      svg.select(`rect#underneath-gateway-${d.index}`)\n        .style('opacity', 0);\n    }\n  \n    const intermediateNodeClicked = (d, i, g, selectedI, curLayerIndex) => {\n      d3.event.stopPropagation();\n      isExitedFromCollapse = false;\n      // Use this event to trigger the detailed view\n      if (detailedViewNum === d.index) {\n        // Setting this for testing purposes currently.\n        selectedNodeIndex = -1; \n        // User clicks this node again -> rewind\n        detailedViewNum = undefined;\n        svg.select(`rect#underneath-gateway-${d.index}`)\n          .style('opacity', 0);\n      } \n      // We need to show a new detailed view (two cases: if we need to close the\n      // old detailed view or not)\n      else {\n        // Setting this for testing purposes currently.\n        selectedNodeIndex = d.index;\n        let inputMatrix = d.output;\n        let kernelMatrix = d.outputLinks[selectedI].weight;\n        // let interMatrix = singleConv(inputMatrix, kernelMatrix);\n        let colorScale = layerColorScales.conv;\n  \n        // Compute the color range\n        let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n        let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n        let range = Math.max(rangePre, rangeCur);\n  \n        // User triggers a different detailed view\n        if (detailedViewNum !== undefined) {\n          // Change the underneath highlight\n          svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n            .style('opacity', 0);\n          svg.select(`rect#underneath-gateway-${d.index}`)\n            .style('opacity', 1);\n        }\n        \n        // Dynamically position the detail view\n        let wholeSvg = d3.select('#copycat-cnn-svg');\n        let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n        let svgWidth = +wholeSvg.style('width').replace('px', '');\n        let copycatdetailViewTop = 100 + svgYMid - 250 / 2;\n        let positionX = intermediateLayerPosition[Object.keys(layerIndexDict)[curLayerIndex]];\n  \n        let posX = 0;\n        if (curLayerIndex > 6) {\n          posX = (positionX - svgPaddings.left) / 2;\n          posX = svgPaddings.left + posX - 486 / 2;\n        } else {\n          posX = (svgWidth + svgPaddings.right - positionX) / 2;\n          posX = positionX + posX - 486 / 2;\n        }\n  \n        const copycatdetailview = document.getElementById('copycatdetailview');\n        copycatdetailview.style.top = `${copycatdetailViewTop}px`;\n        copycatdetailview.style.left = `${posX}px`;\n        copycatdetailview.style.position = 'absolute';\n  \n        detailedViewNum = d.index;\n  \n        // Send the currently used color range to detailed view\n        nodeData.colorRange = range;\n        nodeData.inputIsInputLayer = curLayerIndex <= 1;\n      }\n    }\n  \n    // The order of the if/else statements in this function is very critical\n    const emptySpaceClicked = () => {\n      // If detail view -> rewind to intermediate view\n      if (detailedViewNum !== undefined) {\n            // Setting this for testing purposes currently.\n        selectedNodeIndex = -1; \n        // User clicks this node again -> rewind\n        svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n          .style('opacity', 0);\n        detailedViewNum = undefined;\n      }\n  \n      // If softmax view -> rewind to flatten layer view\n      else if (isInSoftmax) {\n        svg.select('.softmax-symbol')\n          .dispatch('click');\n      }\n  \n      // If intermediate view -> rewind to overview\n      else if (isInIntermediateView) {\n        let curLayerIndex = layerIndexDict[selectedNode.layerName];\n        quitIntermediateView(curLayerIndex, selectedNode.domG, selectedNode.domI);\n        d3.select(selectedNode.domG[selectedNode.domI])\n          .dispatch('mouseleave');\n      }\n  \n      // If pool/act detail view -> rewind to overview\n      else if (isInActPoolDetailView) {\n        quitActPoolDetailView();\n      }\n    }\n  \n    const prepareToEnterIntermediateView = (d, g, i, curLayerIndex) => {\n      isInIntermediateView = true;\n      // Hide all copycatlegends\n      svg.selectAll(`.${selectedScaleLevel}-copycatlegend`)\n        .classed('hidden', true);\n      svg.selectAll('.input-copycatlegend').classed('hidden', true);\n      svg.selectAll('.output-copycatlegend').classed('hidden', true);\n  \n      // Hide the input annotation\n      svg.select('.input-annotation')\n        .classed('hidden', true);\n  \n      // Highlight the previous layer and this node\n      svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n        .selectAll('rect.bounding')\n        .style('stroke-width', 2);\n      \n      d3.select(g[i])\n        .select('rect.bounding')\n        .style('stroke-width', 2);\n      \n      // Disable control panel UI\n      // d3.select('#copycatlevel-select').property('disabled', true);\n      // d3.selectAll('.image-container')\n      //   .style('cursor', 'not-allowed')\n      //   .on('mouseclick', () => {});\n      disableControl = true;\n      \n      // Allow infinite animation loop\n      copycat_shouldIntermediateAnimateStore.set(true);\n  \n      // Highlight the labels\n      svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n        g#layer-detailed-label-${curLayerIndex - 1},\n        g#layer-label-${curLayerIndex},\n        g#layer-detailed-label-${curLayerIndex}`)\n        .style('font-weight', '800');\n      \n      // Register a handler on the svg element so user can click empty space to quit\n      // the intermediate view\n      d3.select('#copycat-cnn-svg')\n        .on('click', emptySpaceClicked);\n    }\n  \n    const quitActPoolDetailView = () => {\n      isInActPoolDetailView = false;\n      actPoolDetailViewNodeIndex = -1;\n  \n      let layerIndex = layerIndexDict[selectedNode.layerName];\n      let nodeIndex = selectedNode.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', true);\n  \n      selectedNode.data.inputLinks.forEach(link => {\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', true);\n      })\n  \n      // Clean up the underneath rects\n      svg.select('g.underneath')\n        .selectAll('rect')\n        .remove();\n  \n      // Show all edges\n      let unimportantEdges = svg.select('g.edge-group')\n        .selectAll('.edge')\n        .filter(d => {\n          return d.targetLayerIndex !== actPoolDetailViewLayerIndex;\n        })\n        .style('visibility', null);\n      \n      // Recover control UI\n      disableControl = false;\n  \n      // Show copycatlegends if in detailed mode\n      svg.selectAll(`.${selectedScaleLevel}-copycatlegend`)\n        .classed('hidden', !detailedMode);\n      svg.selectAll('.input-copycatlegend').classed('hidden', !detailedMode);\n      svg.selectAll('.output-copycatlegend').classed('hidden', !detailedMode);\n  \n      // Also dehighlight the edge\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .duration(200)\n        .style('stroke', edgeInitColor)\n        .style('stroke-width', edgeStrokeWidth)\n        .style('opacity', edgeOpacity);\n  \n      // Remove the overlay rect\n      svg.selectAll('g.copycat-intermediate-layer-overlay, g.copycat-intermediate-layer-annotation')\n        .transition('remove')\n        .duration(500)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .on('end', (d, i, g) => {\n          svg.selectAll('g.copycat-intermediate-layer-overlay, g.copycat-intermediate-layer-annotation').remove();\n          svg.selectAll('defs.overlay-gradient').remove();\n          svg.select('.input-annotation').classed('hidden', false);\n        });\n  \n      // Turn the fade out nodes back\n      svg.select(`g#cnn-layer-group-${layerIndex}`)\n        .selectAll('g.node-group')\n        .each((sd, si, sg) => {\n          d3.select(sg[si])\n            .style('pointer-events', 'all');\n      });\n  \n      svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n        .selectAll('g.node-group')\n        .each((sd, si, sg) => {\n          // Recover the old events\n          d3.select(sg[si])\n            .style('pointer-events', 'all')\n            .on('mouseover', nodeMouseOverHandler)\n            .on('mouseleave', nodeMouseLeaveHandler)\n            .on('click', nodeClickHandler);\n      });\n  \n      // Deselect the node\n      selectedNode.layerName = '';\n      selectedNode.index = -1;\n      selectedNode.data = null;\n  \n      actPoolDetailViewLayerIndex = -1;\n    }\n  \n    const actPoolDetailViewPreNodeMouseOverHandler = (d, i, g) => {\n      // Highlight the edges\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n      edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n        .raise()\n        .transition()\n        .ease(d3.easeCubicInOut)\n        .duration(400)\n        .style('stroke', edgeHoverColor)\n        .style('stroke-width', '1')\n        .style('opacity', 1);\n      \n      // Highlight its border\n      d3.select(g[i]).select('rect.bounding')\n        .classed('hidden', false);\n      \n      // Highlight node's pair\n      let associatedLayerIndex = layerIndex - 1;\n      if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n        associatedLayerIndex = layerIndex + 1;\n      }\n  \n      svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', false);\n    }\n  \n    const actPoolDetailViewPreNodeMouseLeaveHandler = (d, i, g) => {\n      // De-highlight the edges\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n  \n      edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .duration(200)\n        .style('stroke', edgeInitColor)\n        .style('stroke-width', edgeStrokeWidth)\n        .style('opacity', edgeOpacity);\n      \n      // De-highlight its border\n      d3.select(g[i]).select('rect.bounding')\n        .classed('hidden', true);\n      \n      // De-highlight node's pair\n      let associatedLayerIndex = layerIndex - 1;\n      if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n        associatedLayerIndex = layerIndex + 1;\n      }\n  \n      svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', true);\n    }\n  \n    const actPoolDetailViewPreNodeClickHandler = (d, i, g) => {\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n  \n      // Click the pre-layer node in detail view has the same effect as clicking\n      // the cur-layer node, which is to open a new detail view window\n      svg.select(`g#layer-${layerIndex + 1}-node-${nodeIndex}`)\n        .node()\n        .dispatchEvent(new Event('click'));\n    }\n  \n    const enterDetailView = (curLayerIndex, i) => {\n      isInActPoolDetailView = true;\n      actPoolDetailViewNodeIndex = i;\n      actPoolDetailViewLayerIndex = curLayerIndex;\n  \n      // Dynamically position the detail view\n      let wholeSvg = d3.select('#copycat-cnn-svg');\n      let wholeSvgOracle = d3.select('#cnn-svg');\n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n      let svgYOracle = +wholeSvgOracle.style('height').replace('px', '');\n      let svgWidth = +wholeSvg.style('width').replace('px', '');\n      let copycatdetailViewTop = 100 + svgYMid + svgYOracle - 260 / 2;\n  \n      let posX = 0;\n      if (curLayerIndex > 5) {\n        posX = nodeCoordinate[curLayerIndex - 1][0].x + 50;\n        posX = posX / 2 - 500 / 2;\n      } else {\n        posX = (svgWidth - nodeCoordinate[curLayerIndex][0].x - nodeLength) / 2;\n        posX = nodeCoordinate[curLayerIndex][0].x + nodeLength + posX - 500 / 2;\n  \n      }\n  \n      const copycatdetailview = document.getElementById('copycatdetailview');\n      copycatdetailview.style.top = `${copycatdetailViewTop}px`;\n      copycatdetailview.style.left = `${posX}px`;\n      copycatdetailview.style.position = 'absolute';\n  \n      // Hide all edges\n      let unimportantEdges = svg.select('g.edge-group')\n        .selectAll('.edge')\n        .filter(d => {\n          return d.targetLayerIndex !== curLayerIndex;\n        })\n        .style('visibility', 'hidden');\n      \n      // Disable UI\n      disableControl = true;\n      \n      // Hide input annotaitons\n      svg.select('.input-annotation')\n        .classed('hidden', true);\n  \n      // Hide copycatlegends\n      svg.selectAll(`.${selectedScaleLevel}-copycatlegend`)\n        .classed('hidden', true);\n      svg.selectAll('.input-copycatlegend').classed('hidden', true);\n      svg.selectAll('.output-copycatlegend').classed('hidden', true);\n      svg.select(`#${layerLegendDict[curLayerIndex][selectedScaleLevel]}`)\n        .classed('hidden', false);\n  \n      // Add overlay rects\n      let leftX = nodeCoordinate[curLayerIndex - 1][i].x;\n      // +5 to cover the detailed mode long label\n      let rightStart = nodeCoordinate[curLayerIndex][i].x + nodeLength + 5;\n  \n      // Compute the left and right overlay rect width\n      let rightWidth = width - rightStart - overlayRectOffset / 2;\n      let leftWidth = leftX - nodeCoordinate[0][0].x;\n  \n      // The overlay rects should be symmetric\n      if (rightWidth > leftWidth) {\n        let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n          {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n        copycat_addOverlayGradient('overlay-gradient-right', stops);\n        \n        let leftEndOpacity = 0.85 + (0.95 - 0.85) * (leftWidth / rightWidth);\n        stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: leftEndOpacity},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n        copycat_addOverlayGradient('overlay-gradient-left', stops);\n      } else {\n        let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n          {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n        copycat_addOverlayGradient('overlay-gradient-left', stops);\n  \n        let rightEndOpacity = 0.85 + (0.95 - 0.85) * (rightWidth / leftWidth);\n        stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n          {offset: '100%', color: 'rgb(250, 250, 250)', opacity: rightEndOpacity}];\n        copycat_addOverlayGradient('overlay-gradient-right', stops);\n      }\n      \n      copycat_addOverlayRect('overlay-gradient-right',\n        rightStart + overlayRectOffset / 2 + 0.5,\n        0, rightWidth, height + svgPaddings.top);\n      \n      copycat_addOverlayRect('overlay-gradient-left',\n        nodeCoordinate[0][0].x - overlayRectOffset / 2,\n        0, leftWidth, height + svgPaddings.top);\n  \n      svg.selectAll('rect.overlay')\n        .on('click', emptySpaceClicked);\n      \n      // Add underneath rectangles\n      let underGroup = svg.select('g.underneath');\n      let padding = 7;\n      for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n        underGroup.append('rect')\n          .attr('class', 'underneath-gateway')\n          .attr('id', `underneath-gateway-${n}`)\n          .attr('x', nodeCoordinate[curLayerIndex - 1][n].x - padding)\n          .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n          .attr('width', (2 * nodeLength + hSpaceAroundGap) + 2 * padding)\n          .attr('height', nodeLength + 2 * padding)\n          .attr('rx', 10)\n          .style('fill', 'rgba(160, 160, 160, 0.3)')\n          .style('opacity', 0);\n        \n        // Update the event functions for these two layers\n        svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n          .style('pointer-events', 'all')\n          .style('cursor', 'pointer')\n          .on('mouseover', actPoolDetailViewPreNodeMouseOverHandler)\n          .on('mouseleave', actPoolDetailViewPreNodeMouseLeaveHandler)\n          .on('click', actPoolDetailViewPreNodeClickHandler);\n      }\n      underGroup.lower();\n  \n      // Highlight the selcted pair\n      underGroup.select(`#underneath-gateway-${i}`)\n        .style('opacity', 1);\n    }\n  \n    const quitIntermediateView = (curLayerIndex, g, i) => {\n      // If it is the softmax detail view, quit that view first\n      if (isInSoftmax) {\n        svg.select('.logit-layer').remove();\n        svg.select('.logit-layer-lower').remove();\n        svg.selectAll('.plus-symbol-clone').remove();\n  \n        // Instead of removing the paths, we hide them, so it is faster to load in\n        // the future\n        svg.select('.underneath')\n          .selectAll('.logit-lower')\n          .style('opacity', 0);\n  \n        copycat_softmaxDetailViewStore.set({\n            show: false,\n            logits: []\n        })\n  \n        copycat_allowsSoftmaxAnimationStore.set(false);\n      }\n      copycat_isInSoftmaxStore.set(false);\n      isInIntermediateView = false;\n  \n      // Show the copycatlegend\n      svg.selectAll(`.${selectedScaleLevel}-copycatlegend`)\n        .classed('hidden', !detailedMode);\n      svg.selectAll('.input-copycatlegend').classed('hidden', !detailedMode);\n      svg.selectAll('.output-copycatlegend').classed('hidden', !detailedMode);\n  \n      // Recover control panel UI\n      disableControl = false;\n  \n      // Recover the input layer node's event\n      for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n        svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n          .on('mouseover', nodeMouseOverHandler)\n          .on('mouseleave', nodeMouseLeaveHandler)\n          .on('click', nodeClickHandler);\n      }\n  \n      // Clean up the underneath rects\n      svg.select('g.underneath')\n        .selectAll('rect')\n        .remove();\n      detailedViewNum = undefined;\n  \n      // Highlight the previous layer and this node\n      svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n        .selectAll('rect.bounding')\n        .style('stroke-width', 1);\n      \n      d3.select(g[i])\n        .select('rect.bounding')\n        .style('stroke-width', 1);\n  \n      // Highlight the labels\n      svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n        g#layer-detailed-label-${curLayerIndex - 1},\n        g#layer-label-${curLayerIndex},\n        g#layer-detailed-label-${curLayerIndex}`)\n        .style('font-weight', 'normal');\n  \n      // Also unclick the node\n      // Record the current clicked node\n      selectedNode.layerName = '';\n      selectedNode.index = -1;\n      selectedNode.data = null;\n      isExitedFromCollapse = true;\n  \n      // Remove the intermediate layer\n      let intermediateLayer = svg.select('g.copycat-intermediate-layer');\n  \n      // Kill the infinite animation loop\n      copycat_shouldIntermediateAnimateStore.set(false);\n  \n      intermediateLayer.transition('remove')\n        .duration(500)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .on('end', (d, i, g) => { d3.select(g[i]).remove()});\n      \n      // Remove the output node overlay mask\n      svg.selectAll('.overlay-group').remove();\n      \n      // Remove the overlay rect\n      svg.selectAll('g.copycat-intermediate-layer-overlay, g.copycat-intermediate-layer-annotation')\n        .transition('remove')\n        .duration(500)\n        .ease(d3.easeCubicInOut)\n        .style('opacity', 0)\n        .on('end', (d, i, g) => {\n          svg.selectAll('g.copycat-intermediate-layer-overlay, g.copycat-intermediate-layer-annotation').remove();\n          svg.selectAll('defs.overlay-gradient').remove();\n        });\n      \n      // Recover the layer if we have drdrawn it\n      if (needRedraw[0] !== undefined) {\n        let redrawRange = cnnLayerRanges[selectedScaleLevel][needRedraw[0]];\n        if (needRedraw[1] !== undefined) {\n          svg.select(`g#layer-${needRedraw[0]}-node-${needRedraw[1]}`)\n            .select('image.node-image')\n            .each((d, i, g) => copycat_drawOutput(d, i, g, redrawRange));\n        } else {\n          svg.select(`g#cnn-layer-group-${needRedraw[0]}`)\n            .selectAll('image.node-image')\n            .each((d, i, g) => copycat_drawOutput(d, i, g, redrawRange));\n        }\n      }\n      \n      // Move all layers to their original place\n      for (let i = 0; i < numLayers; i++) {\n        copycat_moveLayerX({layerIndex: i, targetX: nodeCoordinate[i][0].x,\n          disable:false, delay:500, opacity: 1});\n      }\n  \n      copycat_moveLayerX({layerIndex: numLayers - 2,\n        targetX: nodeCoordinate[numLayers - 2][0].x, opacity: 1,\n        disable:false, delay:500, onEndFunc: () => {\n          // Show all edges on the last moving animation end\n          svg.select('g.edge-group')\n            .style('visibility', 'visible');\n  \n          // Recover the input annotation\n          svg.select('.input-annotation')\n            .classed('hidden', false);\n        }});\n    }\n  \n    const nodeClickHandler = (d, i, g) => {\n      d3.event.stopPropagation();\n      let nodeIndex = d.index;\n  \n      // Record the current clicked node\n      selectedNode.layerName = d.layerName;\n      selectedNode.index = d.index;\n      selectedNode.data = d;\n      selectedNode.domI = i;\n      selectedNode.domG = g;\n  \n      // Record data for detailed view.\n      if (d.type === 'conv' || d.type === 'relu' || d.type === 'pool') {\n        let data = [];\n        for (let j = 0; j < d.inputLinks.length; j++) {\n          data.push({\n            input: d.inputLinks[j].source.output,\n            kernel: d.inputLinks[j].weight,\n            output: d.inputLinks[j].dest.output,\n          })\n        }\n        let curLayerIndex = layerIndexDict[d.layerName];\n        data.colorRange = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n        data.isInputInputLayer = curLayerIndex <= 1;\n        nodeData = data;\n      }\n  \n      let curLayerIndex = layerIndexDict[d.layerName];\n  \n      if (d.type == 'relu' || d.type == 'pool') {\n        isExitedFromDetailedView = false;\n        if (!isInActPoolDetailView) {\n          // Enter the act pool detail view\n          enterDetailView(curLayerIndex, d.index);\n        } else {\n          if (d.index === actPoolDetailViewNodeIndex) {\n            // Quit the act pool detail view\n            quitActPoolDetailView();\n          } else {\n            // Switch the detail view input to the new clicked pair\n  \n            // Remove the previous selection effect\n            svg.select(`g#layer-${curLayerIndex}-node-${actPoolDetailViewNodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', true);\n  \n            svg.select(`g#layer-${curLayerIndex - 1}-node-${actPoolDetailViewNodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', true);\n            \n            let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n        \n            edgeGroup.selectAll(`path.edge-${curLayerIndex}-${actPoolDetailViewNodeIndex}`)\n              .transition()\n              .ease(d3.easeCubicOut)\n              .duration(200)\n              .style('stroke', edgeInitColor)\n              .style('stroke-width', edgeStrokeWidth)\n              .style('opacity', edgeOpacity);\n            \n            let underGroup = svg.select('g.underneath');\n            underGroup.select(`#underneath-gateway-${actPoolDetailViewNodeIndex}`)\n              .style('opacity', 0);\n          \n            // Add selection effect on the new selected pair\n            svg.select(`g#layer-${curLayerIndex}-node-${nodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', false);\n  \n            svg.select(`g#layer-${curLayerIndex - 1}-node-${nodeIndex}`)\n              .select('rect.bounding')\n              .classed('hidden', false);\n  \n            edgeGroup.selectAll(`path.edge-${curLayerIndex}-${nodeIndex}`)\n              .raise()\n              .transition()\n              .ease(d3.easeCubicInOut)\n              .duration(400)\n              .style('stroke', edgeHoverColor)\n              .style('stroke-width', '1')\n              .style('opacity', 1);\n  \n            underGroup.select(`#underneath-gateway-${nodeIndex}`)\n              .style('opacity', 1);\n  \n            actPoolDetailViewNodeIndex = nodeIndex;\n          }\n        }\n      }\n  \n      // Enter the second view (layer-view) when user clicks a conv node\n      if ((d.type === 'conv' || d.layerName === 'output') && !isInIntermediateView) {\n        prepareToEnterIntermediateView(d, g, nodeIndex, curLayerIndex);\n  \n        if (d.layerName === 'conv_1_1') {\n          copycat_drawConv1(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n  \n        else if (d.layerName === 'conv_1_2') {\n          copycat_drawConv2(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n  \n        else if (d.layerName === 'conv_2_1') {\n          copycat_drawConv3(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n        \n        else if (d.layerName === 'conv_2_2') {\n          copycat_drawConv4(curLayerIndex, d, nodeIndex, width, height,\n            intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n            intermediateNodeClicked);\n        }\n      \n        else if (d.layerName === 'output') {\n          copycat_drawFlatten(curLayerIndex, d, nodeIndex, width, height);\n        }\n      }\n      // Quit the layerview\n      else if ((d.type === 'conv' || d.layerName === 'output') && isInIntermediateView) {\n        quitIntermediateView(curLayerIndex, g, i);\n      }\n    }\n  \n    const nodeMouseOverHandler = (d, i, g) => {\n      // if (isInIntermediateView || isInActPoolDetailView) { return; }\n      if (isInIntermediateView) { return; }\n  \n      // Highlight the edges\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n        .raise()\n        .transition()\n        .ease(d3.easeCubicInOut)\n        .duration(400)\n        .style('stroke', edgeHoverColor)\n        .style('stroke-width', '1')\n        .style('opacity', 1);\n      \n      // Highlight its border\n      d3.select(g[i]).select('rect.bounding')\n        .classed('hidden', false);\n      \n      // Highlight source's border\n      if (d.inputLinks.length === 1) {\n        let link = d.inputLinks[0];\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', false);\n      } else {\n        svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n          .selectAll('g.node-group')\n          .selectAll('rect.bounding')\n          .classed('hidden', false);\n      }\n  \n      // Highlight the output text\n      if (d.layerName === 'output') {\n        d3.select(g[i])\n          .select('.output-text')\n          .style('opacity', 0.8)\n          .style('text-decoration', 'underline');\n      }\n  \n      /* Use the following commented code if we have non-linear model\n      d.inputLinks.forEach(link => {\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', false);\n      });\n      */\n    }\n  \n    const nodeMouseLeaveHandler = (d, i, g) => {\n      // Screenshot\n      // return;\n  \n      if (isInIntermediateView) { return; }\n      \n      // Keep the highlight if user has clicked\n      if (isInActPoolDetailView || (\n        d.layerName !== selectedNode.layerName ||\n        d.index !== selectedNode.index)){\n        let layerIndex = layerIndexDict[d.layerName];\n        let nodeIndex = d.index;\n        let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n        \n        edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n          .transition()\n          .ease(d3.easeCubicOut)\n          .duration(200)\n          .style('stroke', edgeInitColor)\n          .style('stroke-width', edgeStrokeWidth)\n          .style('opacity', edgeOpacity);\n  \n        d3.select(g[i]).select('rect.bounding').classed('hidden', true);\n  \n        if (d.inputLinks.length === 1) {\n          let link = d.inputLinks[0];\n          let layerIndex = layerIndexDict[link.source.layerName];\n          let nodeIndex = link.source.index;\n          svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n        } else {\n          svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n            .selectAll('g.node-group')\n            .selectAll('rect.bounding')\n            .classed('hidden', d => d.layerName !== selectedNode.layerName ||\n              d.index !== selectedNode.index);\n        }\n  \n        // Dehighlight the output text\n        if (d.layerName === 'output') {\n          d3.select(g[i])\n            .select('.output-text')\n            .style('fill', 'black')\n            .style('opacity', 0.5)\n            .style('text-decoration', 'none');\n        }\n  \n        /* Use the following commented code if we have non-linear model\n        d.inputLinks.forEach(link => {\n          let layerIndex = layerIndexDict[link.source.layerName];\n          let nodeIndex = link.source.index;\n          svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n        });\n        */\n      }\n    }\n    let logits = [-4.28, 2.96, -0.38, 5.24, -7.56, -3.43, 8.63, 2.63, 6.30, 0.68];\n    let selectedI = 4;\n  \n    onMount(async () => {\n      // Create SVG\n      wholeSvg = d3.select(overviewComponent)\n        .select('#copycat-cnn-svg');\n      svg = wholeSvg.append('g')\n        .attr('class', 'main-svg')\n        .attr('transform', `translate(${svgPaddings.left}, 0)`);\n      copycat_svgStore.set(svg);\n  \n      width = Number(wholeSvg.style('width').replace('px', '')) -\n        svgPaddings.left - svgPaddings.right;\n      height = Number(wholeSvg.style('height').replace('px', '')) -\n        svgPaddings.top - svgPaddings.bottom;\n  \n      let cnnGroup = svg.append('g')\n        .attr('class', 'cnn-group');\n      \n      let underGroup = svg.append('g')\n        .attr('class', 'underneath');\n  \n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n      detailedViewAbsCoords = {\n        1 : [600, 100 + svgYMid - 220 / 2, 490, 290],\n        2: [500, 100 + svgYMid - 220 / 2, 490, 290],\n        3 : [700, 100 + svgYMid - 220 / 2, 490, 290],\n        4: [600, 100 + svgYMid - 220 / 2, 490, 290],\n        5: [650, 100 + svgYMid - 220 / 2, 490, 290],\n        6 : [850, 100 + svgYMid - 220 / 2, 490, 290],\n        7 : [100, 100 + svgYMid - 220 / 2, 490, 290],\n        8 : [60, 100 + svgYMid - 220 / 2, 490, 290],\n        9 : [200, 100 + svgYMid - 220 / 2, 490, 290],\n        10 : [300, 100 + svgYMid - 220 / 2, 490, 290],\n      }\n      \n      // Define global arrow marker end\n      svg.append(\"defs\")\n        .append(\"marker\")\n        .attr(\"id\", 'marker')\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 6)\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .style('stroke-width', 1.2)\n        .style('fill', 'gray')\n        .style('stroke', 'gray')\n        .attr(\"d\", \"M0,-5L10,0L0,5\");\n  \n      // Alternative arrow head style for non-interactive annotation\n      svg.append(\"defs\")\n        .append(\"marker\")\n        .attr(\"id\", 'marker-alt')\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 6)\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .style('fill', 'none')\n        .style('stroke', 'gray')\n        .style('stroke-width', 2)\n        .attr(\"d\", \"M-5,-10L10,0L-5,10\");\n      \n      console.time('Construct cnn');\n      model = await loadTrainedModel('PUBLIC_URL/copycat-cnn-explainer/assets/data/model.json');\n      cnn = await constructCNN(`PUBLIC_URL/copycat-cnn-explainer/assets/img/${selectedImage}`, model);\n      console.timeEnd('Construct cnn');\n      copycat_cnnStore.set(cnn);\n  \n      // Ignore the flatten layer for now\n      let flatten = cnn[cnn.length - 2];\n      cnn.splice(cnn.length - 2, 1);\n      cnn.flatten = flatten;\n      console.log(cnn);\n  \n      copycat_copycat_updateCNNLayerRanges();\n  \n      // Create and draw the CNN view\n      copycat_drawCNN(width, height, cnnGroup, nodeMouseOverHandler,\n        nodeMouseLeaveHandler, nodeClickHandler);\n    })\n  \n    const detailedButtonClicked = () => {\n      detailedMode = !detailedMode;\n      copycat_detailedModeStore.set(detailedMode);\n  \n      if (!isInIntermediateView){\n        // Show the copycatlegend\n        svg.selectAll(`.${selectedScaleLevel}-copycatlegend`)\n          .classed('hidden', !detailedMode);\n        \n        svg.selectAll('.input-copycatlegend').classed('hidden', !detailedMode);\n        svg.selectAll('.output-copycatlegend').classed('hidden', !detailedMode);\n      }\n      \n      // Switch the layer name\n      svg.selectAll('.layer-detailed-label')\n        .classed('hidden', !detailedMode);\n      \n      svg.selectAll('.layer-label')\n        .classed('hidden', detailedMode);\n    }\n  \n    const imageOptionClicked = async (e) => {\n      let newImageName = d3.select(e.target).attr('data-imageName');\n  \n      if (newImageName !== selectedImage) {\n        selectedImage = newImageName;\n  \n        // Re-compute the CNN using the new input image\n        cnn = await constructCNN(`PUBLIC_URL/copycat-cnn-explainer/assets/img/${selectedImage}`, model);\n  \n        // Ignore the flatten layer for now\n        let flatten = cnn[cnn.length - 2];\n        cnn.splice(cnn.length - 2, 1);\n        cnn.flatten = flatten;\n        copycat_cnnStore.set(cnn);\n  \n        // Update all scales used in the CNN view\n        copycat_copycat_updateCNNLayerRanges();\n        copycat_updateCNN();\n      }\n    }\n  \n    const customImageClicked = () => {\n  \n      // Case 1: there is no custom image -> show the modal to get user input\n      if (customImageURL === null) {\n        modalInfo.show = true;\n        modalInfo.preImage = selectedImage;\n        copycat_modalStore.set(modalInfo);\n      }\n  \n      // Case 2: there is an existing custom image, not the focus -> switch to this image\n      else if (selectedImage !== 'custom') {\n        let fakeEvent = {detail: {url: customImageURL}};\n        handleCustomImage(fakeEvent);\n      }\n  \n      // Case 3: there is an existing custom image, and its the focus -> let user\n      // upload a new image\n      else {\n        modalInfo.show = true;\n        modalInfo.preImage = selectedImage;\n        copycat_modalStore.set(modalInfo);\n      }\n  \n      if (selectedImage !== 'custom') {\n        selectedImage = 'custom';\n      }\n  \n    }\n  \n    const handleModalCanceled = (event) => {\n      // User cancels the modal without a successful image, so we restore the\n      // previous selected image as input\n      selectedImage = event.detail.preImage;\n    }\n  \n    const handleCustomImage = async (event) => {\n      // User gives a valid image URL\n      customImageURL = event.detail.url;\n  \n      // Re-compute the CNN using the new input image\n      cnn = await constructCNN(customImageURL, model);\n  \n      // Ignore the flatten layer for now\n      let flatten = cnn[cnn.length - 2];\n      cnn.splice(cnn.length - 2, 1);\n      cnn.flatten = flatten;\n      copycat_cnnStore.set(cnn);\n  \n      // Update the UI\n      let customImageSlot = d3.select(overviewComponent)\n        .select('.custom-image').node();\n      copycat_drawCustomImage(customImageSlot, cnn[0]);\n  \n      // Update all scales used in the CNN view\n      copycat_copycat_updateCNNLayerRanges();\n      copycat_updateCNN();\n    }\n  \n    function handleExitFromDetiledConvView(event) {\n      if (event.detail.text) {\n        detailedViewNum = undefined;\n        svg.select(`rect#underneath-gateway-${selectedNodeIndex}`)\n          .style('opacity', 0);\n        selectedNodeIndex = -1; \n      }\n    }\n  \n    function handleExitFromDetiledPoolView(event) {\n      if (event.detail.text) {\n        quitActPoolDetailView();\n        isExitedFromDetailedView = true;\n      }\n    }\n  \n    function handleExitFromDetiledActivationView(event) {\n      if (event.detail.text) {\n        quitActPoolDetailView();\n        isExitedFromDetailedView = true;\n      }\n    }\n  \n    function handleExitFromDetiledSoftmaxView(event) {\n      softmaxDetailViewInfo.show = false;\n      copycat_softmaxDetailViewStore.set(softmaxDetailViewInfo);\n    }\n  \n  </script>\n  \n  <style>\n    .overview {\n      padding: 0;\n      height: 100%;\n      width: 100%;\n      display: flex;\n      position: relative;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: flex-start;\n    }\n  \n    .control-container {\n      padding: 5px 20px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      width: 100%;\n    }\n  \n    .right-control {\n      display: flex;\n    }\n  \n    .left-control {\n      display: flex;\n      align-items: center;\n    }\n  \n    .control > .select > #copycatlevel-select {\n      padding-left: 2em;\n      padding-right: 2em;\n    }\n  \n    .cnn {\n      width: 100%;\n      padding: 0;\n      background: var(--light-gray);\n      display: flex;\n    }\n  \n    svg {\n      margin: 0 auto;\n      min-height: 490px;\n      max-height: 700px;\n      height: calc(100vh - 100px);\n      width: 100vw;\n    }\n  \n    .is-very-small {\n      font-size: 12px;\n    }\n  \n    #copycatdetailed-button {\n      margin-right: 10px;\n      color: #dbdbdb;\n      transition: border-color 300ms ease-in-out, color 200ms ease-in-out;\n    }\n  \n    #copycatdetailed-button.is-activated, #copycatdetailed-button.is-activated:hover {\n      color: #3273dc;\n      border-color: #3273dc;\n    }\n  \n    #copycatdetailed-button:hover {\n      color: #b5b5b5;\n    }\n  \n    #copycathover-label {\n      transition: opacity 300ms ease-in-out;\n      text-overflow: ellipsis;\n      pointer-events: none;\n      margin-left: 5px;\n    }\n  \n    .image-container {\n      width: 40px;\n      height: 40px;\n      border-radius: 4px;\n      display: inline-block;\n      position: relative;\n      border: 2.5px solid #1E1E1E;\n      margin-right: 10px;\n      cursor: pointer;\n      pointer-events: all;\n      transition: border 300ms ease-in-out;\n    }\n  \n    .image-container img {\n      object-fit: cover;\n      max-width: 100%;\n      max-height: 100%;\n      z-index: -1;\n      transition: opacity 300ms ease-in-out;\n    }\n  \n    .image-container.inactive {\n      border: 2.5px solid rgb(220, 220, 220);\n    }\n  \n    .image-container.inactive > img {\n      opacity: 0.3;\n    }\n  \n    .image-container.inactive:hover > img {\n      opacity: 0.6;\n    }\n  \n    .image-container.inactive.disabled {\n      border: 2.5px solid rgb(220, 220, 220);\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive.disabled:hover {\n      border: 2.5px solid rgb(220, 220, 220);\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive.disabled > img {\n      opacity: 0.3;\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive.disabled:hover > img {\n      opacity: 0.3;\n      cursor: not-allowed;\n    }\n  \n    .image-container.inactive > .edit-icon {\n      color: #BABABA;\n    }\n  \n    .image-container.inactive:hover > .edit-icon {\n      color: #777777;\n    }\n  \n    .image-container.inactive:hover {\n      border: 2.5px solid #1E1E1E;\n    }\n  \n    .edit-icon {\n      position: absolute;\n      bottom: -6px;\n      right: -7px;\n      font-size: 7px;\n      color: #1E1E1E;\n      transition: color 300ms ease-in-out;\n    }\n  \n    :global(canvas) {\n      image-rendering: crisp-edges;\n    }\n  \n    :global(.layer-label), :global(.layer-detailed-label), :global(.layer-intermediate-label) {\n      font-size: 12px;\n      opacity: 0.8;\n      text-anchor: middle;\n    }\n  \n    :global(.colorLegend) {\n      font-size: 10px;\n    }\n  \n    :global(.copycatlegend) {\n      transition: opacity 400ms ease-in-out;\n    }\n  \n    :global(.copycatlegend > rect) {\n      opacity: 1;\n    }\n  \n    :global(.copycatlegend text), :global(.copycatlegend line), :global(.copycatlegend path) {\n      opacity: 0.7;\n    }\n  \n    :global(.copycatlegend#output-copycatlegend > rect) {\n      opacity: 1;\n    }\n  \n    :global(.hidden) {\n      opacity: 0;\n      pointer-events: none;\n    }\n  \n    :global(.very-strong) {\n      stroke-width: 3px;\n    }\n  \n    :global(.bounding), :global(.edge), :global(.edge-group),\n    :global(foreignObject), :global(.bounding-flatten),\n    :global(.underneath-gateway), :global(.input-annotation) {\n      transition: opacity 300ms ease-in-out;\n    }\n  \n    :global(rect.bounding) {\n      transition: stroke-width 800ms ease-in-out, opacity 300ms ease-in-out;\n    }\n  \n    :global(.annotation-text) {\n      pointer-events: none;\n      font-size: 10px;\n      font-style: italic;\n      fill: gray;\n    }\n  \n    /* Change the cursor style on the detailed view input and output matrices */\n    :global(rect.square) {\n      cursor: crosshair;\n    }\n  \n    :global(.animation-control-button) {\n      font-family: FontAwesome;\n      opacity: 0.8;\n      cursor: pointer;\n    }\n  \n    .model-name {\n      font-size: 23px;\n      fill: rgb(255, 255, 255);\n      dominant-baseline: baseline;\n      font-family: 'Neucha';\n      margin-right: 10px;\n\t  }\n\n  </style>\n  \n  <div class=\"overview\"\n    bind:this={overviewComponent}>\n  \n    <div class=\"control-container\">\n  \n      <div class=\"left-control\">\n        <span class='model-name'>Copycat Model:</span>\n        \n        {#each imageOptions as image, i}\n          <div class=\"image-container\"\n            on:click={disableControl ? () => {} : imageOptionClicked}\n            class:inactive={selectedImage !== image.file}\n            class:disabled={disableControl}\n            data-imageName={image.file}>\n            <img src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/{image.file}\"\n              alt=\"image option\"\n              title=\"{image.class}\"\n              data-imageName={image.file}/>\n          </div>\n        {/each}\n  \n        <!-- The plus button -->\n          <div class=\"image-container\"\n            class:inactive={selectedImage !== 'custom'}\n            class:disabled={disableControl}\n            data-imageName={'custom'}\n            on:click={disableControl ? () => {} : customImageClicked}>\n  \n            <img class=\"custom-image\"\n              src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/plus.svg\"\n              alt=\"plus button\"\n              title=\"Add new input image\"\n              data-imageName=\"custom\"/>\n  \n            <span class=\"fa-stack edit-icon\"\n              class:hidden={customImageURL === null}>\n              <i class=\"fas fa-circle fa-stack-2x\"></i>\n              <i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i>\n            </span>\n  \n          </div>\n  \n        <button class=\"button is-very-small is-link is-light\"\n          id=\"copycathover-label\"\n          style=\"opacity:{hoverInfo.show ? 1 : 0}\">\n          <span class=\"icon\" style=\"margin-right: 5px;\">\n            <i class=\"fas fa-crosshairs \"></i>\n          </span>\n          <span id=\"copycatcopycathover-label-text\">\n            {hoverInfo.text}\n          </span>\n        </button>\n      </div>\n  \n      <div class=\"right-control\">\n  \n        <button class=\"button is-very-small\"\n          id=\"copycatdetailed-button\"\n          disabled={disableControl}\n          class:is-activated={detailedMode}\n          on:click={detailedButtonClicked}>\n          <span class=\"icon\">\n            <i class=\"fas fa-eye\"></i>\n          </span>\n          <span id=\"copycatcopycathover-label-text\">\n            Show detail\n          </span>\n        </button>\n  \n        <div class=\"control is-very-small has-icons-left\"\n          title=\"Change color scale range\">\n          <span class=\"icon is-left\">\n            <i class=\"fas fa-palette\"></i>\n          </span>\n  \n          <div class=\"select\">\n            <select bind:value={selectedScaleLevel} id=\"copycatlevel-select\"\n              disabled={disableControl}>\n              <option value=\"local\">Unit</option>\n              <option value=\"module\">Module</option>\n              <option value=\"global\">Global</option>\n            </select>\n          </div>\n        </div>\n  \n      </div>\n      \n    </div>\n  \n    <div class=\"cnn\">\n      <svg id=\"copycat-cnn-svg\"></svg>\n    </div>\n  </div>\n  \n  <div id='copycatdetailview'>\n    {#if selectedNode.data && selectedNode.data.type === 'conv' && selectedNodeIndex != -1}\n      <ConvolutionView on:message={handleExitFromDetiledConvView} input={nodeData[selectedNodeIndex].input} \n                        kernel={nodeData[selectedNodeIndex].kernel}\n                        dataRange={nodeData.colorRange}\n                        colorScale={nodeData.inputIsInputLayer ?\n                          layerColorScales.input[0] : layerColorScales.conv}\n                        isInputInputLayer={nodeData.inputIsInputLayer}\n                        isExited={isExitedFromCollapse}/>\n    {:else if selectedNode.data && selectedNode.data.type === 'relu'}\n      <ActivationView on:message={handleExitFromDetiledActivationView} input={nodeData[0].input} \n                      output={nodeData[0].output}\n                      dataRange={nodeData.colorRange}\n                      isExited={isExitedFromDetailedView}/>\n    {:else if selectedNode.data && selectedNode.data.type === 'pool'}\n      <PoolView on:message={handleExitFromDetiledPoolView} input={nodeData[0].input} \n                kernelLength={2}\n                dataRange={nodeData.colorRange}\n                isExited={isExitedFromDetailedView}/>\n    {:else if softmaxDetailViewInfo.show}\n      <SoftmaxView logits={softmaxDetailViewInfo.logits}\n                   logitColors={softmaxDetailViewInfo.logitColors}\n                   selectedI={softmaxDetailViewInfo.selectedI}\n                   highlightI={softmaxDetailViewInfo.highlightI}\n                   outputName={softmaxDetailViewInfo.outputName}\n                   outputValue={softmaxDetailViewInfo.outputValue}\n                   startAnimation={softmaxDetailViewInfo.startAnimation}\n                   on:xClicked={handleExitFromDetiledSoftmaxView}\n                   on:mouseOver={copycat_softmaxDetailViewMouseOverHandler}\n                   on:mouseLeave={copycat_softmaxDetailViewMouseLeaveHandler}/>\n    {/if}\n  </div>\n  \n  <Modal on:xClicked={handleModalCanceled}\n    on:urlTyped={handleCustomImage}/>","<script context=\"module\">\n\tlet iframeApiReady = false;\n\n\timport { setContext, onMount } from \"svelte\";\n\tvar tag = document.createElement(\"script\");\n\ttag.src = \"https://www.youtube.com/iframe_api\";\n\tvar firstScriptTag = document.getElementsByTagName(\"script\")[0];\n\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n\twindow.onYouTubeIframeAPIReady = () =>\n\twindow.dispatchEvent(new Event(\"iframeApiReady\"));\n</script>\n\n<script>\n\timport { createEventDispatcher } from \"svelte\";\n\timport { getContext } from \"svelte\";\n\texport let videoId;\n\texport let playerId = \"player\";\n\n\tlet player;\n\texport function play(startSecond = 0){\n\t\tplayer.seekTo(startSecond);\n\t\tplayer.playVideo()\n\t}\n\tconst dispatch = createEventDispatcher();\n\twindow.addEventListener(\"iframeApiReady\", function(e) {\n\t\tplayer = new YT.Player(playerId, {\n\t\t\tvideoId,\n\t\t\tevents: {\n\t\t\t\tonReady: onPlayerReady\n\t\t\t}\n\t\t});\n\t});\n\tfunction onPlayerReady(event) {\n      player.mute()\n    }\n</script>\n\n<div id={playerId} />","<script>\n\t  import Youtube from './Youtube.svelte';\n    let currentPlayer;\n</script>\n\n<style>\n\t#description {\n    margin-bottom: 60px;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 80%;\n  }\n\n  #description h2 {\n    color: #444;\n    font-size: 40px;\n    font-weight: 450;\n    margin-bottom: 12px;\n    margin-top: 60px;\n  }\n\n  #description h4 {\n    color: #444;\n    font-size: 32px;\n    font-weight: 450;\n    margin-bottom: 8px;\n    margin-top: 44px;\n  }\n\n  #description h6 {\n    color: #444;\n    font-size: 24px;\n    font-weight: 450;\n    margin-bottom: 8px;\n    margin-top: 44px;\n  }\n\n  #description p {\n    margin: 16px 0;\n  }\n\n  #description p img {\n    vertical-align: middle;\n  }\n\n  #description .figure-caption {\n    font-size: 13px;\n    margin-top: 5px;\n  }\n\n  #description ol {\n    margin-left: 40px;\n  }\n\n  #description p, \n  #description div,\n  #description li {\n    color: #555;\n    font-size: 17px;\n    line-height: 1.6;\n  }\n\n  #description small {\n    font-size: 12px;\n  }\n\n  #description ol li img {\n    vertical-align: middle;\n  }\n\n  #description .video-link {\n    color: #3273DC;\n    cursor: pointer;\n    font-weight: normal;\n    text-decoration: none;\n  }\n\n  #description ul {\n      list-style-type: disc;\n      margin-top: -10px;\n      margin-left: 40px;\n      margin-bottom: 15px;\n  }\n    \n  #description a:hover, \n  #description .video-link:hover {\n    text-decoration: underline;\n  }\n\n  .figure, .video {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n</style>\n\n<body>\n  <div id=\"description\">\n    <h2>Comparing Oracle and Copycat models by interactive visualization</h2>\n    <p>The <a href='https://poloclub.github.io/cnn-explainer/'>CNN Explainer</a> is a great tool that provides interactive visualization within the CNN model using JavaScript.</p>\n    <p>Therefore, we are using their project to provide a visual comparison between Oracle and Copycat models.\n       The network architecture is Tiny-VGG (it is a small model, allowing to display its parameters) and was implemented in TensorFlow.\n       Based on <a href='https://github.com/poloclub/cnn-explainer/tree/master/tiny-vgg'>cnn-explainer</a> code, we developed the Copycat method to run against their model.\n       This site has also been adapted to show both models at the same time.\n    </p>\n    <p>The models shown above were obtained in our experiments. Oracle and Copycat performance on the test dataset was 66% and 61% respectively (Copycat performance: 92%).\n       After, the models were exported to JavaScript. And now they are fully running in your browser :D</p>\n    <p>\n      From their <a href='https://poloclub.github.io/cnn-explainer/'>website</a>:\n      \"<i>CNN Explainer uses <a href='https://js.tensorflow.org/'>TensorFlow.js</a>, an in-browser GPU-accelerated deep learning library to load the pretrained model for visualization.\n      It was necessary TensorFlowJS for exporting the model, <a href='https://svelte.dev/'>Svelte</a> as a framework and <a href='https://d3js.org/'>D3.js</a> for visualizations.</i>\"\n    </p>\n    <h2>Interactive features</h2>\n    <ol>\n    \t<li><strong>Upload your own image</strong> by selecting <img class=\"icon is-rounded\" src=\"PUBLIC_URL/copycat-cnn-explainer/assets/figures/upload_image_icon.png\" alt=\"upload image icon\"/> to understand how your image is classified into the 10 classes.  By analyzing the neurons throughout the network, you can understand the activations maps and extracted features.</li>\n    \t<li><strong>Change the activation map colorscale</strong> to better understand the impact of activations at different levels of abstraction by adjusting <img class=\"is-rounded\" width=\"100px\" src=\"PUBLIC_URL/copycat-cnn-explainer/assets/figures/heatmap_scale.png\" alt=\"heatmap\"/>.</li>\n    \t<li><strong>Understand network details</strong> such as layer dimensions and colorscales by clicking the <img class=\"is-rounded\" width=\"100px\" src=\"PUBLIC_URL/copycat-cnn-explainer/assets/figures/network_details.png\" alt=\"network details icon\"/> icon.</li>\n    \t<li><strong>Simulate network operations</strong> by clicking the <img class=\"icon is-rounded\" src=\"PUBLIC_URL/copycat-cnn-explainer/assets/figures/play_button.png\" alt=\"play icon\"/> button or interact with the layer slice in the <em>Interactive Formula View</em> by hovering over portions of the input or output to understand the mappings and underlying operations.</li>\n      <li><strong>Learn layer functions</strong> by clicking <img class=\"icon is-rounded\" src=\"PUBLIC_URL/copycat-cnn-explainer/assets/figures/info_button.png\" alt=\"info icon\"/> from the <em>Interactive Formula View</em> to read layer details from the article.</li>\n    </ol> \n\n    <h2>Video Tutorial</h2>\n    <p>This page was based on <a href='https://poloclub.github.io/cnn-explainer/'>CNN Explainer</a>. You can see their tutorial to understand how to interact with the CNN model.</p>\n    <div class=\"video\">\n      <Youtube videoId=\"HnWIHWFbuUQ\" playerId=\"demo_video\" bind:this={currentPlayer}/>\n    </div>\n  </div>\n</body>","<script>\n  import Overview from './overview/Overview.svelte';\n  import { cnnStore } from './stores.js';\n\n  // Enum to control the displaying view\n  const View = {\n    OVERVIEW: 'overview',\n    LAYERVIEW: 'layerview',\n    DETAILVIEW: 'detailview'\n  };\n\n  let mainView = View.OVERVIEW;\n\n  /* Example to read loaded cnn in other components:\n  $: if ( $cnnStore.length != 0) {\n    console.log($cnnStore);\n  }\n  */\n\n</script>\n\n<style>\n#explainer {\n  width: 100%;\n  padding: 0;\n  margin: auto;\n  /* outline: 1px solid var(--g-dark-gray); */\n}\n</style>\n\n<div id='explainer'>\n    <Overview />\n</div>","<script>\n</script>\n\n<style>\n\t#header {\n\t\theight: 50px;\n\t\tdisplay: flex;\n\t\tpadding: 0 20px;\n\t\talign-items: center;\n\t\tbackground: rgb(30, 30, 30);\n    \tjustify-content: space-between;\n\t}\n\n\t#logo {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t#logo-text {\n\t\tfont-size: 30px;\n\t\tcolor: var(--light-gray);\n\t\tfont-family: 'A Love of Thunder';\n\t\tmargin-right: 10px;\n\t}\n\n\t#svg-logo-tagline {\n\t\tfont-size: 23px;\n\t\tfill: rgb(255, 255, 255);\n\t\tdominant-baseline: baseline;\n\t\tfont-family: 'Neucha';\n\t}\n\n\t.icons {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\t}\n\n\t.icon {\n\t\twidth: 27px;\n\t\theight: 27px;\n\t\tmargin-left: 15px;\n\t}\n\n\t.icon a{\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.icon img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n\t}\n</style>\n\n<div id=\"header\">\n\n  <div id=\"logo\">\n    <div id=\"logo-text\">\n      Copycat CNN Explainer\n    </div>\n\n\t\t<svg width=\"510px\" height=\"50px\">\n\t\t\t<defs>\n\t\t\t\t<filter x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" filterUnits=\"objectBoundingBox\" id=\"chalk-texture\">\n\t\t\t\t\t<feTurbulence type=\"fractalNoise\" baseFrequency=\"2\" numOctaves=\"5\" stitchTiles=\"stitch\" result=\"f1\">\n\t\t\t\t\t</feTurbulence>\n\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0, 0 0 0 0 0, 0 0 0 0 0, 0 0 0 -1.5 1.5\" result=\"f2\">\n\t\t\t\t\t</feColorMatrix>\n\t\t\t\t\t<feComposite operator=\"in\" in2=\"f2\" in=\"SourceGraphic\" result=\"f3\">\n\t\t\t\t\t</feComposite>\n\t\t\t\t</filter>\n\t\t\t</defs>\n\n\t\t\t<g filter=\"url(#chalk-texture)\" transform=\"translate(0, 35)\">\n\t\t\t\t<text id=\"svg-logo-tagline\">\n\t\t\t\t\tInteractive comparison between Oracle and Copycat models\n\t\t\t\t</text>\n\t\t\t</g>\n\t\t</svg>\n  </div>\n\n\t<div class=\"icons\">\n\t\n\t\t<div class=\"icon\" title=\"Research paper - Copycat Method\">\n\t\t\t<a target=\"_blank\" href=\"https://arxiv.org/abs/1806.05476\">\n\t\t\t\t<img src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/pdf.png\" alt=\"pdf icon\"/>\n\t\t\t</a>\n\t\t</div>\n\n\t\t<div class=\"icon\" title=\"Research paper - Exploring and verifying the parameters of the Copycat model\">\n\t\t\t<a target=\"_blank\" href=\"https://arxiv.org/abs/2101.08717\">\n\t\t\t\t<img src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/pdf.png\" alt=\"pdf icon\"/>\n\t\t\t</a>\n\t\t</div>\n\n\t\t<div class=\"icon\" title=\"Open-source code\">\n\t\t\t<a target=\"_blank\" href=\"https://github.com/jeiks/Stealing_DL_Models\">\n\t\t\t\t<img src=\"PUBLIC_URL/copycat-cnn-explainer/assets/img/github.png\" alt=\"github icon\"/>\n\t\t\t</a>\n\t\t</div>\n\n\t</div>\n</div>","<script>\n\timport Explainer from './Explainer.svelte';\n\timport Header from './Header.svelte';\n</script>\n\n<style>\n</style>\n\n<div id=\"app-page\">\n\t<Header />\n\t<Explainer />\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","afterUpdate","after_update","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","cnnStore","svgStore","undefined","vSpaceAroundGapStore","hSpaceAroundGapStore","nodeCoordinateStore","selectedScaleLevelStore","cnnLayerRangesStore","cnnLayerMinMaxStore","needRedrawStore","detailedModeStore","shouldIntermediateAnimateStore","isInSoftmaxStore","softmaxDetailViewStore","allowsSoftmaxAnimationStore","hoverInfoStore","modalStore","intermediateLayerPositionStore","copycat_cnnStore","copycat_svgStore","copycat_vSpaceAroundGapStore","copycat_hSpaceAroundGapStore","copycat_nodeCoordinateStore","copycat_selectedScaleLevelStore","copycat_cnnLayerRangesStore","copycat_cnnLayerMinMaxStore","copycat_needRedrawStore","copycat_detailedModeStore","copycat_shouldIntermediateAnimateStore","copycat_isInSoftmaxStore","copycat_softmaxDetailViewStore","copycat_allowsSoftmaxAnimationStore","copycat_hoverInfoStore","copycat_modalStore","copycat_intermediateLayerPositionStore","init2DArray","height","width","array","row","matrixDot","mat1","mat2","console","assert","result","j","matrixSlice","mat","xs","xe","ys","ye","s","matrixMax","curMax","Infinity","singleConv","kernel","stride","padding","stepSize","curWindow","dot","singleMaxPooling","kernelWidth","array1d","f","v","array2d","w","generateOutputMappings","output","kernelLength","padded_input_size","dilation","outputMapping","h_out","w_out","h_kern","w_kern","h_im","w_im","compute_input_multiplies_with_weight","hoverH","hoverW","weight_dims","outputMappings","input_multiplies_with_weight","h_weight","w_weight","flat_input","getMatrixSliceFromInputHighlights","matrix","highlights","indices","reduce","total","Math","floor","getMatrixSliceFromOutputHighlights","getVisualizationSizeConstraint","imageLength","getDataRange","image","maxRow","max","apply","minRow","min","range","abs","gridData","constraint","xpos","ypos","column","round","col","x","y","grid_final","isKernelMath","dataRange","outputLength","colorScale","d3","interpolateRdBu","isInputLayer","dispatch","oldHighlight","oldData","redraw","selectAll","remove","constrainedSvgSize","enter","normalizedValue","on","toString","replace","gridFinal","legendFinal","kernelRange","kernelColorScale","interpolateBrBG","multiplicationSymbolPadding","columns","texts","normalizedValueWithGap","isPaused","isInputInputLayer","testInputMatrixSlice","interval","counter","testOutputMatrixSlice","inputHighlights","outputHighlights","startConvolution","clearInterval","setInterval","flat_animated","animatedH","animatedW","inputMatrixSlice","outputMatrixSlice","testImage","testOutput","testKernel","handleScroll","svgHeight","Number","scroll","SmoothScroll","offset","animateScroll","isExited","outputFinal","log","gridInputMatrixSlice","gridOutputMatrixSlice","startRelu","gridImage","gridOutput","startMaxPool","softmaxViewComponent","logits","logitColors","selectedI","highlightI","outputName","outputValue","startAnimation","svg","formater","n","format","mouseOverHandler","g","curI","mouseLeaveHandler","formulaRightGroup","denominatorGroup","curX","curText","hasInitialized","curBBox","getBBox","denominatorGroupBBox","numeratorText","formulaLeftGroup","transition","duration","error","show","modalComponent","valiImg","files","inputValue","showLoading","usingURL","errorInfo","modalInfo","canvas","getContext","drawImage","getImageData","src","err","reader","FileReader","onload","readAsDataURL","preImage","crossOrigin","nodeType","Node","layerName","bias","inputLinks","outputLinks","Link","source","dest","weight","constructCNN","async","inputImageFile","model","inputImageTensor","getInputImageArray","preTensor","tf","stack","outputs","layers","curTensor","squeeze","shape","transpose","allOutputs","cnn","inputLayer","inputShape","batchInputShape","inputImageArray","arraySync","curLayerIndex","layer","curLayerType","curLayerNodes","includes","biases","val","weights","preNode","curLink","curLogit","logit","sort","realIndex","link","preNodeWidth","preNodeNum","preNodeIndex","preNodeRow","preNodeCol","curNodeRealIndex","constructCNNFromOutputs","imageDataTo3DTensor","imageData","normalize","imageArray","pixelIndex","channelIndex","curEntry","arr","croppedArray","cropDimensions","startXIdx","startYIdx","networkInputSize","cropCentralSquare","tensor3d","imgFile","cssText","getElementsByTagName","reject","canvasImage","inputImage","Image","resizeCanvas","resizeContext","resizeFactor","translate","scale","rotate","PI","imageWidth","imageHeight","onerror","loadTrainedModel","modelFile","loadLayersModel","layerColorScales","interpolateGreys","conv","relu","pool","fc","interpolateOranges","overviewConfig","nodeLength","plusSymbolRadius","numLayers","edgeOpacity","edgeInitColor","edgeHoverColor","edgeHoverOuting","edgeStrokeWidth","intermediateColor","svgPaddings","top","bottom","left","right","kernelRectLength","gapRatio","overlayRectOffset","classLists","copycat_overviewConfig","getExtent","getOutputKnot","point","getInputKnot","gappedColorScale","gap","vSpaceAroundGap","hSpaceAroundGap","nodeCoordinate","selectedScaleLevel","cnnLayerRanges","cnnLayerMinMax","detailedMode","drawOutput","bufferCanvas","bufferContext","imageSingle","imageSingleArray","pixeIndex","color","rgb","largeCanvas","largeCanvasContext","putImageData","imageDataURL","toDataURL","drawOutputScore","delay","ease","easeCubicIn","getLegendGradient","gradientName","gradient","curProgress","curColor","drawCNN","cnnGroup","nodeMouseOverHandler","nodeMouseLeaveHandler","nodeClickHandler","leftAccuumulatedSpace","curLayer","isOutput","layerGroup","nodeGroups","classed","outputRectScale","scaleLinear","domain","each","layerNames","dimension","detailedLabels","labels","legends","legendHeight","range1","range2","localLegendScale1","localLegendScale2","localLegendAxis1","axisBottom","tickFormat","tickValues","localLegendAxis2","localLegend1","localLegend2","module","moduleLegendScale","moduleLegendAxis","moduleLegend","global","globalLegendScale","globalLegendAxis","globalLegend","outputLegendAxis","outputLegend","inputScale","inputLegendAxis","inputLegend","drawLegends","linkGen","linkHorizontal","linkData","curTarget","inputNodeIndex","flattenDimension","curSource","curWeight","targetLayerIndex","targetNodeIndex","sourceNodeIndex","getLinkData","inputAnnotation","redChannel","updateCNN","easeCubicOut","updateCNNLayerRanges","cnnLayerRangesLocal","curRange","aggregatedExtent","acc","cur","cnnLayerRangesComponent","numOfComponent","curArray","maxRange","cnnLayerRangesGlobal","moveLayerX","arg","layerIndex","targetX","disable","opacity","specialIndex","onEndFunc","transitionName","easeCubicInOut","addOverlayGradient","gradientID","stops","group","drawIntermediateLayerLegend","minMax","isInput","gradientAppendingName","gradientGap","normalizedColor","leftValue","zeroValue","rightValue","totalRange","zeroLocation","leftMidValue","rightMidValue","legendScale","legendAxis","intermediateLegend","legendGroup","drawArrow","sx","sy","tx","ty","dr","hFlip","marker","isEndOfAnimation","needRedraw","shouldIntermediateAnimate","intermediateLayerPosition","startOutputAnimation","kernelGroup","tickTime1D","slidingAnimation","originX","originY","oldTick","newTick","animationButtonClicked","startIntermediateAnimation","kernelGroupInput","kernelGroupResult","originXResult","xResult","stopPropagation","animateEdge","interrupt","dashoffset","easeLinear","drawIntermediateLayer","leftX","rightX","rightStart","intermediateGap","intermediateNodeMouseOverHandler","intermediateNodeMouseLeaveHandler","intermediateNodeClicked","intermediateLayer","intermediateX1","intermediateX2","intermediateMinMax","kernelExtent","outputY","curNode","outputOverlayGroup","strideTime","raise","ni","inputMatrix","kernelMatrix","interMatrix","dataMatrix","drawIntermidiateImage","groupLayer","nodeIndex","interaction","newNode","datum","overlayGroup","createIntermediateNode","kernelRectX","weightText","f2","sep","concat","clone","aggregatedMinMax","symbolY","symbolGroup","edgeGroup","lower","kernelMinMax","drawIntermediateLayerAnnotation","sliderX","sliderY","arrowSX","arrowSY","sliderX2","sliderY2","arrowSX2","arrowSY2","dr2","arrowTX2","arrowTY2","isFirstConv","kernelAnnotation","slideText","slideText2","plusAnnotation","textX","textY","plusText","biasTextY","addUnderneathRect","underGroup","addOverlayRect","redrawLayerIfNeeded","rangePre","rangeCur","drawConv1","rightGap","finalMinMax","intermediateLayerAnnotation","drawConv2","drawConv3","leftEnd","leftGap","drawConv4","isInSoftmax","allowsSoftmaxAnimation","softmaxDetailViewInfo","hoverInfo","layerIndexDict","flattenFactoredFDict","moveLegend","moveX","restore","legend","previousLegendX","previousLegendY","previousTransform","logitCircleMouseOverHandler","logitLayer","logitLayerLower","logitCircleMouseLeaveHandler","softmaxDetailViewMouseOverHandler","softmaxDetailViewMouseLeaveHandler","softmaxClicked","symbolX","outputX","softmaxLeftMid","pixelWidth","pixelHeight","topY","bottomY","middleGap","middleRectHeight","softmaxX","softmaxTextY","softmaxWidth","flattenRange","centerX","previousX","softmaxAnnotation","softmaxDetailAnnotation","scrollIntoView","behavior","arrowTX","arrowTY","hoverTextGroup","hoverText","flattenLeftPart","tempClone","tempPlusSymbol","logitColorScale","extent","flattenLength","flatten","underneathIs","curIIndex","drawOneEdgeGroup","curEdgeGroup","factoredF","class","vi","curNodeGroup","symbolClone","outputEdgeD1","outputEdgeD2","outputEdge1","outputEdge2","outputEdgeLength1","getTotalLength","outputEdgeLength2","totalLength","totalDuration","opacityDuration","anchorElement","pos","elem","targetel","getScreenCTM","ownerSVGElement","createSVGPoint","bbox","matrixTransform","getMidCoords","detailViewTop","detailview","getElementById","position","drawLogitLayer","drawFlatten","curLeftBound","intermediateLayerOverlay","flattenLayerLeftPart","preLayerDimension","preLayerGap","boundingBoxLength","flattenExtent","flattenMouseOverHandler","da","flattenMouseLeaveHandler","loc","meanValues","emptySpace","symbolEndX","softmaxArg","softmaxSymbol","detailedLabelGroup","detailedLabelText","flattenAnnotation","flattenText","middleText","file","colorRange","inputIsInputLayer","overviewComponent","scaleLevelSet","previousSelectedScaleLevel","wholeSvg","selectedNode","isInIntermediateView","isInActPoolDetailView","actPoolDetailViewNodeIndex","actPoolDetailViewLayerIndex","detailedViewNum","disableControl","conv_1_1","relu_1_1","conv_1_2","relu_1_2","max_pool_1","conv_2_1","relu_2_1","conv_2_2","relu_2_2","max_pool_2","layerLegendDict","0","1","2","3","4","5","6","7","8","9","10","11","nodeData","imageOptions","selectedImage","selectedNodeIndex","isExitedFromDetailedView","isExitedFromCollapse","customImageURL","svgYMid","svgWidth","positionX","posX","emptySpaceClicked","quitIntermediateView","domG","domI","quitActPoolDetailView","sd","si","sg","actPoolDetailViewPreNodeMouseOverHandler","associatedLayerIndex","actPoolDetailViewPreNodeMouseLeaveHandler","actPoolDetailViewPreNodeClickHandler","dispatchEvent","Event","redrawRange","rightWidth","leftWidth","enterDetailView","prepareToEnterIntermediateView","time","timeEnd","handleCustomImage","red","green","blue","drawCustomImage","newImageName","copycatgridData","copycatgrid_final","copycatgridFinal","copycatlegendFinal","copycatgridInputMatrixSlice","copycatgridOutputMatrixSlice","copycatgridImage","copycatgridOutput","copycat_drawOutput","copycat_drawOutputScore","copycat_drawCNN","copycatlegends","copycatlegendHeight","copycat_updateCNN","copycat_copycat_updateCNNLayerRanges","copycat_moveLayerX","copycat_addOverlayGradient","copycatlegendScale","copycatlegendAxis","copycatlegendGroup","copycat_addOverlayRect","copycatlegend","copycat_softmaxDetailViewMouseOverHandler","copycat_softmaxDetailViewMouseLeaveHandler","copycatdetailview","copycatdetailViewTop","wholeSvgOracle","svgYOracle","copycat_drawConv1","copycat_drawConv2","copycat_drawConv3","copycat_drawConv4","copycat_drawFlatten","copycat_drawCustomImage","tag","firstScriptTag","player","videoId","playerId","onPlayerReady","mute","window","YT","Player","events","onReady","startSecond","seekTo","playVideo","onYouTubeIframeAPIReady","currentPlayer","body"],"mappings":"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"}